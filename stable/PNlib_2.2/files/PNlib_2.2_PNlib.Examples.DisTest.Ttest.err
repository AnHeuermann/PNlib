Running: ./testmodel.py --libraries=/home/runner/.openmodelica/libraries/ --ompython_omhome= PNlib_2.2_PNlib.Examples.DisTest.Ttest.conf.json
loadFile("/home/runner/.openmodelica/libraries/ModelicaServices 4.0.0+maint.om/package.mo", uses=false)
loadFile("/home/runner/.openmodelica/libraries/Complex 4.0.0+maint.om/package.mo", uses=false)
loadFile("/home/runner/.openmodelica/libraries/Modelica 4.0.0+maint.om/package.mo", uses=false)
loadFile("/home/runner/work/PNlib/PNlib/PNlib/package.mo", uses=false)
Using package PNlib with version 2.2 (/home/runner/work/PNlib/PNlib/PNlib/package.mo)
Using package Modelica with version 4.0.0 (/home/runner/.openmodelica/libraries/Modelica 4.0.0+maint.om/package.mo)
Using package Complex with version 4.0.0 (/home/runner/.openmodelica/libraries/Complex 4.0.0+maint.om/package.mo)
Using package ModelicaServices with version 4.0.0 (/home/runner/.openmodelica/libraries/ModelicaServices 4.0.0+maint.om/package.mo)
Running command: translateModel(PNlib.Examples.DisTest.Ttest,tolerance=1e-06,outputFormat="mat",numberOfIntervals=5000,variableFilter="P1.t|P2.t|P3.t|P4.t|T1.active|T1.fire|T2.active|T2.fire|T3.active|T3.fire|T4.active|T4.fire|time",fileNamePrefix="PNlib_2.2_PNlib.Examples.DisTest.Ttest")
translateModel(PNlib.Examples.DisTest.Ttest,tolerance=1e-06,outputFormat="mat",numberOfIntervals=5000,variableFilter="P1.t|P2.t|P3.t|P4.t|T1.active|T1.fire|T2.active|T2.fire|T3.active|T3.fire|T4.active|T4.fire|time",fileNamePrefix="PNlib_2.2_PNlib.Examples.DisTest.Ttest")
Notification: Performance of loadFile(/home/runner/.openmodelica/libraries/ModelicaServices 4.0.0+maint.om/package.mo): time 0.001012/0.001012, allocations: 100.3 kB / 15.6 MB, free: 4.809 MB / 13.93 MB
Notification: Performance of loadFile(/home/runner/.openmodelica/libraries/Complex 4.0.0+maint.om/package.mo): time 0.001021/0.001021, allocations: 177.1 kB / 16.51 MB, free: 4.352 MB / 13.93 MB
Notification: Performance of loadFile(/home/runner/.openmodelica/libraries/Modelica 4.0.0+maint.om/package.mo): time 1.645/1.645, allocations: 222.1 MB / 239.4 MB, free: 11.07 MB / 202.7 MB
Notification: Performance of loadFile(/home/runner/work/PNlib/PNlib/PNlib/package.mo): time 0.09435/0.09435, allocations: 16.58 MB / 306.2 MB, free: 10.56 MB / 250.7 MB
Notification: Performance of FrontEnd - loaded program: time 0.0004574/0.0004576, allocations: 11.38 kB / 370.6 MB, free: 44.86 MB / 298.7 MB
Notification: Performance of FrontEnd - Absyn->SCode: time 0.07436/0.07484, allocations: 53.47 MB / 424.1 MB, free: 5.918 MB / 298.7 MB
Notification: Performance of NFInst.instantiate(PNlib.Examples.DisTest.Ttest): time 0.004822/0.0797, allocations: 4.751 MB / 428.8 MB, free: 1.156 MB / 298.7 MB
Notification: Performance of NFInst.instExpressions: time 0.00717/0.08689, allocations: 4.183 MB / 433 MB, free: 12.96 MB / 314.7 MB
Notification: Performance of NFInst.updateImplicitVariability: time 0.000775/0.08769, allocations: 27.88 kB / 433 MB, free: 12.94 MB / 314.7 MB
Notification: Performance of NFTyping.typeComponents: time 0.0009327/0.08866, allocations: 444.4 kB / 433.5 MB, free: 12.5 MB / 314.7 MB
Notification: Performance of NFTyping.typeBindings: time 0.0008861/0.08956, allocations: 460.2 kB / 433.9 MB, free: 12.05 MB / 314.7 MB
Notification: Performance of NFTyping.typeClassSections: time 0.003476/0.09305, allocations: 2.18 MB / 436.1 MB, free: 9.867 MB / 314.7 MB
Notification: Performance of NFFlatten.flatten: time 0.004536/0.0976, allocations: 5.835 MB / 441.9 MB, free: 4.023 MB / 314.7 MB
Notification: Performance of NFFlatten.resolveConnections: time 0.0009128/0.09854, allocations: 0.9085 MB / 442.8 MB, free: 3.07 MB / 314.7 MB
Notification: Performance of NFEvalConstants.evaluate: time 0.001925/0.1005, allocations: 2.201 MB / 445 MB, free: 0.8633 MB / 314.7 MB
Notification: Performance of NFSimplifyModel.simplify: time 0.002013/0.1025, allocations: 1.614 MB / 446.7 MB, free: 15.24 MB / 330.7 MB
Notification: Performance of NFPackage.collectConstants: time 0.0006183/0.1031, allocations: 444 kB / 447.1 MB, free: 14.81 MB / 330.7 MB
Notification: Performance of NFFlatten.collectFunctions: time 0.001655/0.1048, allocations: 1.116 MB / 448.2 MB, free: 13.69 MB / 330.7 MB
Notification: Performance of NFScalarize.scalarize: time 0.0005681/0.1054, allocations: 0.7045 MB / 448.9 MB, free: 12.98 MB / 330.7 MB
Notification: Performance of NFVerifyModel.verify: time 0.001792/0.1072, allocations: 1.891 MB / 450.8 MB, free: 11.08 MB / 330.7 MB
Notification: Performance of NFConvertDAE.convert: time 0.004183/0.1114, allocations: 4.672 MB / 455.5 MB, free: 6.398 MB / 330.7 MB
Notification: Performance of FrontEnd - DAE generated: time 4.849e-06/0.1114, allocations: 0 / 455.5 MB, free: 6.398 MB / 330.7 MB
Notification: Performance of FrontEnd: time 2.034e-06/0.1114, allocations: 4 kB / 455.5 MB, free: 6.395 MB / 330.7 MB
Notification: Performance of Transformations before backend: time 2.376e-05/0.1115, allocations: 0 / 455.5 MB, free: 6.395 MB / 330.7 MB
Notification: Model statistics after passing the front-end and creating the data structures used by the back-end:
 * Number of equations: 851
 * Number of variables: 851
Notification: Performance of Generate backend data structure: time 0.005591/0.1171, allocations: 4.575 MB / 460 MB, free: 1.492 MB / 330.7 MB
Notification: Performance of prepare preOptimizeDAE: time 4.684e-05/0.1171, allocations: 12.03 kB / 460.1 MB, free: 1.48 MB / 330.7 MB
Notification: Performance of preOpt normalInlineFunction (simulation): time 0.001672/0.1188, allocations: 432.3 kB / 460.5 MB, free: 1.055 MB / 330.7 MB
Notification: Performance of preOpt evaluateParameters (simulation): time 0.00282/0.1216, allocations: 1.417 MB / 461.9 MB, free: 15.59 MB / 346.7 MB
Notification: Performance of preOpt simplifyIfEquations (simulation): time 0.0005278/0.1222, allocations: 477 kB / 462.4 MB, free: 15.08 MB / 346.7 MB
Notification: Performance of preOpt expandDerOperator (simulation): time 0.0007181/0.1229, allocations: 391.9 kB / 462.7 MB, free: 14.7 MB / 346.7 MB
Notification: Performance of preOpt clockPartitioning (simulation): time 0.01058/0.1335, allocations: 6.882 MB / 469.6 MB, free: 7.492 MB / 346.7 MB
Notification: Performance of preOpt findStateOrder (simulation): time 6.6e-05/0.1336, allocations: 11.88 kB / 469.6 MB, free: 7.48 MB / 346.7 MB
Notification: Performance of preOpt replaceEdgeChange (simulation): time 0.000475/0.1341, allocations: 199.9 kB / 469.8 MB, free: 7.285 MB / 346.7 MB
Notification: Performance of preOpt inlineArrayEqn (simulation): time 0.0004947/0.1346, allocations: 324.1 kB / 470.2 MB, free: 6.965 MB / 346.7 MB
Notification: Performance of preOpt removeEqualRHS (simulation): time 0.008164/0.1428, allocations: 4.835 MB / 475 MB, free: 2.113 MB / 346.7 MB
Notification: Performance of preOpt removeSimpleEquations (simulation): time 0.01785/0.1606, allocations: 14.95 MB / 489.9 MB, free: 2.75 MB / 362.7 MB
Notification: Performance of preOpt comSubExp (simulation): time 0.009188/0.1699, allocations: 8.036 MB / 498 MB, free: 10.68 MB / 378.7 MB
Notification: Performance of preOpt resolveLoops (simulation): time 0.007581/0.1775, allocations: 7.685 MB / 0.4938 GB, free: 2.984 MB / 378.7 MB
Notification: Performance of preOpt evalFunc (simulation): time 0.0001362/0.1776, allocations: 102.4 kB / 0.4939 GB, free: 2.871 MB / 378.7 MB
Notification: Performance of preOpt encapsulateWhenConditions (simulation): time 0.214/0.3917, allocations: 4.403 MB / 0.4982 GB, free: 75.06 MB / 378.7 MB
Notification: Performance of pre-optimization done (n=344): time 6.682e-06/0.3917, allocations: 0 / 0.4982 GB, free: 75.06 MB / 378.7 MB
Notification: Performance of matching and sorting (n=344): time 0.02033/0.412, allocations: 12.8 MB / 0.5107 GB, free: 73.43 MB / 378.7 MB
Notification: Performance of inlineWhenForInitialization (initialization): time 0.0008329/0.4129, allocations: 2.368 MB / 0.513 GB, free: 71.04 MB / 378.7 MB
Notification: Performance of selectInitializationVariablesDAE (initialization): time 0.00166/0.4146, allocations: 1.494 MB / 0.5145 GB, free: 70.46 MB / 378.7 MB
Notification: Performance of collectPreVariables (initialization): time 0.0003607/0.415, allocations: 210.3 kB / 0.5147 GB, free: 70.36 MB / 378.7 MB
Notification: Performance of collectInitialEqns (initialization): time 0.0006324/0.4156, allocations: 0.9938 MB / 0.5156 GB, free: 69.64 MB / 378.7 MB
Notification: Performance of collectInitialBindings (initialization): time 0.0005871/0.4162, allocations: 0.8584 MB / 0.5165 GB, free: 69.05 MB / 378.7 MB
Notification: Performance of simplifyInitialFunctions (initialization): time 0.001201/0.4174, allocations: 1.025 MB / 0.5175 GB, free: 68.6 MB / 378.7 MB
Notification: Performance of setup shared object (initialization): time 3.892e-05/0.4174, allocations: 305.7 kB / 0.5178 GB, free: 68.3 MB / 378.7 MB
Notification: Performance of preBalanceInitialSystem (initialization): time 0.002834/0.4203, allocations: 1.928 MB / 0.5197 GB, free: 67.25 MB / 378.7 MB
Notification: Performance of partitionIndependentBlocks (initialization): time 0.003427/0.4237, allocations: 3.649 MB / 0.5232 GB, free: 62.9 MB / 378.7 MB
Notification: Performance of analyzeInitialSystem (initialization): time 0.01027/0.434, allocations: 11.24 MB / 0.5342 GB, free: 50.29 MB / 378.7 MB
Notification: Performance of solveInitialSystemEqSystem (initialization): time 4.864e-05/0.4341, allocations: 19.94 kB / 0.5342 GB, free: 50.27 MB / 378.7 MB
Notification: Performance of matching and sorting (n=671) (initialization): time 0.009969/0.4441, allocations: 7.88 MB / 0.5419 GB, free: 42.14 MB / 378.7 MB
Notification: Performance of prepare postOptimizeDAE: time 0.0004461/0.4445, allocations: 1.33 MB / 0.5432 GB, free: 40.55 MB / 378.7 MB
Notification: Performance of postOpt simplifyComplexFunction (initialization): time 5.62e-05/0.4446, allocations: 52.56 kB / 0.5433 GB, free: 40.5 MB / 378.7 MB
Notification: Performance of postOpt tearingSystem (initialization): time 7.797e-05/0.4447, allocations: 81.2 kB / 0.5433 GB, free: 40.43 MB / 378.7 MB
Notification: Performance of postOpt solveSimpleEquations (initialization): time 0.00175/0.4464, allocations: 0.5644 MB / 0.5439 GB, free: 39.86 MB / 378.7 MB
Notification: Performance of postOpt calculateStrongComponentJacobians (initialization): time 7.426e-05/0.4465, allocations: 107.6 kB / 0.544 GB, free: 39.76 MB / 378.7 MB
Notification: Performance of postOpt simplifyAllExpressions (initialization): time 0.002442/0.449, allocations: 0.5653 MB / 0.5446 GB, free: 39.19 MB / 378.7 MB
Notification: Performance of postOpt collapseArrayExpressions (initialization): time 0.000353/0.4493, allocations: 263.8 kB / 0.5448 GB, free: 38.93 MB / 378.7 MB
Warning: Assuming fixed start value for the following 97 variables:
         P4.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P4.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P4.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P4.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P4.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P4.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P4.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P4.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P4.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P4.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P3.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P3.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P3.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P3.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P3.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P3.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P3.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P3.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P3.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P3.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P2.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P2.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P2.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P2.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P2.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P2.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P2.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P2.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P2.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P2.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P2.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P2.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P2.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P2.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P2.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P2.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P2.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P2.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P2.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P2.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P1.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P1.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P1.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P1.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P1.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P1.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P1.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P1.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P1.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P1.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P1.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P1.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P1.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P1.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P1.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P1.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P1.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P1.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P1.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P1.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P4.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P4.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         T4.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T4.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         P3.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P3.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         T3.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T3.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         T1.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T1.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         P2.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P2.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         T2.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T2.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         P1.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P1.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P4.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P4.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P4.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P4.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P4.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P4.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P4.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P4.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P4.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P4.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P3.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P3.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P3.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P3.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P3.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P3.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P3.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P3.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P3.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P3.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         T2.firingTime:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
Notification: Model statistics after passing the back-end for initialization:
 * Number of independent subsystems: 228
 * Number of states: 0 ()
 * Number of discrete variables: 555 ($PRE.P4.enableIn.valid,P4.enableIn.valid,$PRE.P4.enableIn.benefitLimit,P4.enableIn.benefitLimit,$PRE.P4.enableIn.benefitMax,P4.enableIn.benefitMax,$PRE.P4.enableIn.posTE,P4.enableIn.posTE,$PRE.P4.enableIn.k,P4.enableIn.k,$PRE.P4.enableIn.endWhile,P4.enableIn.endWhile,P4.enableIn.randNum,$PRE.P4.enableIn.randNum,P4.enableIn.state128[4],$PRE.P4.enableIn.state128[4],P4.enableIn.state128[3],$PRE.P4.enableIn.state128[3],P4.enableIn.state128[2],$PRE.P4.enableIn.state128[2],P4.enableIn.state128[1],$PRE.P4.enableIn.state128[1],P4.enableIn.cumEnablingProb[1],$PRE.P4.enableIn.cumEnablingProb[1],$PRE.P4.enableIn.sumEnablingProbTAin,P4.enableIn.sumEnablingProbTAin,$PRE.P4.enableIn.nTAin,P4.enableIn.nTAin,$PRE.P4.enableIn.nremTAin,P4.enableIn.nremTAin,P4.enableIn.remTAin[1],$PRE.P4.enableIn.remTAin[1],$PRE.P4.enableIn.Index,P4.enableIn.Index,$PRE.P3.enableIn.valid,P3.enableIn.valid,$PRE.P3.enableIn.benefitLimit,P3.enableIn.benefitLimit,$PRE.P3.enableIn.benefitMax,P3.enableIn.benefitMax,$PRE.P3.enableIn.posTE,P3.enableIn.posTE,$PRE.P3.enableIn.k,P3.enableIn.k,$PRE.P3.enableIn.endWhile,P3.enableIn.endWhile,P3.enableIn.randNum,$PRE.P3.enableIn.randNum,P3.enableIn.state128[4],$PRE.P3.enableIn.state128[4],P3.enableIn.state128[3],$PRE.P3.enableIn.state128[3],P3.enableIn.state128[2],$PRE.P3.enableIn.state128[2],P3.enableIn.state128[1],$PRE.P3.enableIn.state128[1],P3.enableIn.cumEnablingProb[1],$PRE.P3.enableIn.cumEnablingProb[1],$PRE.P3.enableIn.sumEnablingProbTAin,P3.enableIn.sumEnablingProbTAin,$PRE.P3.enableIn.nTAin,P3.enableIn.nTAin,$PRE.P3.enableIn.nremTAin,P3.enableIn.nremTAin,P3.enableIn.remTAin[1],$PRE.P3.enableIn.remTAin[1],$PRE.P3.enableIn.Index,P3.enableIn.Index,$PRE.P2.enableIn.valid,P2.enableIn.valid,$PRE.P2.enableIn.benefitLimit,P2.enableIn.benefitLimit,$PRE.P2.enableIn.benefitMax,P2.enableIn.benefitMax,$PRE.P2.enableIn.posTE,P2.enableIn.posTE,$PRE.P2.enableIn.k,P2.enableIn.k,$PRE.P2.enableIn.endWhile,P2.enableIn.endWhile,P2.enableIn.randNum,$PRE.P2.enableIn.randNum,P2.enableIn.state128[4],$PRE.P2.enableIn.state128[4],P2.enableIn.state128[3],$PRE.P2.enableIn.state128[3],P2.enableIn.state128[2],$PRE.P2.enableIn.state128[2],P2.enableIn.state128[1],$PRE.P2.enableIn.state128[1],P2.enableIn.cumEnablingProb[1],$PRE.P2.enableIn.cumEnablingProb[1],$PRE.P2.enableIn.sumEnablingProbTAin,P2.enableIn.sumEnablingProbTAin,$PRE.P2.enableIn.nTAin,P2.enableIn.nTAin,$PRE.P2.enableIn.nremTAin,P2.enableIn.nremTAin,P2.enableIn.remTAin[1],$PRE.P2.enableIn.remTAin[1],$PRE.P2.enableIn.Index,P2.enableIn.Index,$PRE.P2.enableOut.valid,P2.enableOut.valid,$PRE.P2.enableOut.benefitLimit,P2.enableOut.benefitLimit,$PRE.P2.enableOut.benefitMax,P2.enableOut.benefitMax,$PRE.P2.enableOut.posTE,P2.enableOut.posTE,$PRE.P2.enableOut.k,P2.enableOut.k,$PRE.P2.enableOut.endWhile,P2.enableOut.endWhile,P2.enableOut.randNum,$PRE.P2.enableOut.randNum,P2.enableOut.state128[4],$PRE.P2.enableOut.state128[4],P2.enableOut.state128[3],$PRE.P2.enableOut.state128[3],P2.enableOut.state128[2],$PRE.P2.enableOut.state128[2],P2.enableOut.state128[1],$PRE.P2.enableOut.state128[1],P2.enableOut.cumEnablingProb[2],$PRE.P2.enableOut.cumEnablingProb[2],P2.enableOut.cumEnablingProb[1],$PRE.P2.enableOut.cumEnablingProb[1],$PRE.P2.enableOut.sumEnablingProbTAout,P2.enableOut.sumEnablingProbTAout,$PRE.P2.enableOut.nTAout,P2.enableOut.nTAout,$PRE.P2.enableOut.nremTAout,P2.enableOut.nremTAout,P2.enableOut.remTAout[2],$PRE.P2.enableOut.remTAout[2],P2.enableOut.remTAout[1],$PRE.P2.enableOut.remTAout[1],$PRE.P2.enableOut.Index,P2.enableOut.Index,$PRE.P1.enableIn.valid,P1.enableIn.valid,$PRE.P1.enableIn.benefitLimit,P1.enableIn.benefitLimit,$PRE.P1.enableIn.benefitMax,P1.enableIn.benefitMax,$PRE.P1.enableIn.posTE,P1.enableIn.posTE,$PRE.P1.enableIn.k,P1.enableIn.k,$PRE.P1.enableIn.endWhile,P1.enableIn.endWhile,P1.enableIn.randNum,$PRE.P1.enableIn.randNum,P1.enableIn.state128[4],$PRE.P1.enableIn.state128[4],P1.enableIn.state128[3],$PRE.P1.enableIn.state128[3],P1.enableIn.state128[2],$PRE.P1.enableIn.state128[2],P1.enableIn.state128[1],$PRE.P1.enableIn.state128[1],P1.enableIn.cumEnablingProb[1],$PRE.P1.enableIn.cumEnablingProb[1],$PRE.P1.enableIn.sumEnablingProbTAin,P1.enableIn.sumEnablingProbTAin,$PRE.P1.enableIn.nTAin,P1.enableIn.nTAin,$PRE.P1.enableIn.nremTAin,P1.enableIn.nremTAin,P1.enableIn.remTAin[1],$PRE.P1.enableIn.remTAin[1],$PRE.P1.enableIn.Index,P1.enableIn.Index,$PRE.P1.enableOut.valid,P1.enableOut.valid,$PRE.P1.enableOut.benefitLimit,P1.enableOut.benefitLimit,$PRE.P1.enableOut.benefitMax,P1.enableOut.benefitMax,$PRE.P1.enableOut.posTE,P1.enableOut.posTE,$PRE.P1.enableOut.k,P1.enableOut.k,$PRE.P1.enableOut.endWhile,P1.enableOut.endWhile,P1.enableOut.randNum,$PRE.P1.enableOut.randNum,P1.enableOut.state128[4],$PRE.P1.enableOut.state128[4],P1.enableOut.state128[3],$PRE.P1.enableOut.state128[3],P1.enableOut.state128[2],$PRE.P1.enableOut.state128[2],P1.enableOut.state128[1],$PRE.P1.enableOut.state128[1],P1.enableOut.cumEnablingProb[1],$PRE.P1.enableOut.cumEnablingProb[1],$PRE.P1.enableOut.sumEnablingProbTAout,P1.enableOut.sumEnablingProbTAout,$PRE.P1.enableOut.nTAout,P1.enableOut.nTAout,$PRE.P1.enableOut.nremTAout,P1.enableOut.nremTAout,P1.enableOut.remTAout[1],$PRE.P1.enableOut.remTAout[1],$PRE.P1.enableOut.Index,P1.enableOut.Index,$PRE.P1.reStart,$whenCondition26,$PRE.P2.reStart,$whenCondition21,$PRE.P3.reStart,$whenCondition16,$PRE.P4.reStart,$whenCondition12,T4.inPlaces[1].tokenInOut,T3.inPlaces[1].tokenInOut,$PRE.P2.tokeninout,$PRE.P1.tokeninout,P1.outTransition[1].tokenInOut,$PRE.P4.firingSumOut.firingSum,$PRE.P4.firingSumIn.firingSum,P4.tokeninout,$whenCondition10,$whenCondition11,$PRE.T4.ani,$PRE.T4.fireTime,T4.ani,T4.fireTime,$PRE.P3.firingSumOut.firingSum,$PRE.P3.firingSumIn.firingSum,P3.tokeninout,$whenCondition14,$whenCondition15,$PRE.T3.ani,$PRE.T3.fireTime,T3.ani,T3.fireTime,$PRE.T1.ani,$PRE.T1.fireTime,T1.ani,T1.fireTime,$PRE.P2.firingSumOut.firingSum,$PRE.P2.firingSumIn.firingSum,P2.tokeninout,$whenCondition19,$whenCondition20,$PRE.T2.ani,$PRE.T2.fireTime,T2.ani,T2.fireTime,$PRE.P1.firingSumOut.firingSum,$PRE.P1.firingSumIn.firingSum,P1.tokeninout,$whenCondition24,$whenCondition25,P4.firingSumOut.firingSum,P3.firingSumOut.firingSum,T2.eventIndex,$PRE.T2.eventIndex,$whenCondition5,$PRE.P4.enableOut.benefitLimit,P4.enableOut.benefitLimit,$PRE.P4.enableOut.valid,P4.enableOut.valid,$PRE.P4.enableOut.benefitMax,P4.enableOut.benefitMax,$PRE.P4.enableOut.Index,P4.enableOut.Index,$PRE.P4.enableOut.endWhile,P4.enableOut.endWhile,$PRE.P4.enableOut.sumEnablingProbTAout,P4.enableOut.sumEnablingProbTAout,P4.enableOut.randNum,$PRE.P4.enableOut.randNum,P4.enableOut.state128[4],$PRE.P4.enableOut.state128[4],P4.enableOut.state128[3],$PRE.P4.enableOut.state128[3],P4.enableOut.state128[2],$PRE.P4.enableOut.state128[2],P4.enableOut.state128[1],$PRE.P4.enableOut.state128[1],$PRE.P4.enableOut.posTE,P4.enableOut.posTE,$PRE.P4.enableOut.k,P4.enableOut.k,$PRE.P4.enableOut.nTAout,P4.enableOut.nTAout,$PRE.P4.enableOut.nremTAout,P4.enableOut.nremTAout,P4.enableOut.arcWeightSum,$PRE.P4.enableOut.arcWeightSum,P4.delayPassedOut.numtrue,P4.delayPassedOut.anytrue,P4.activeConOut.anychange,$whenCondition2,$PRE.P3.enableOut.benefitLimit,P3.enableOut.benefitLimit,$PRE.P3.enableOut.valid,P3.enableOut.valid,$PRE.P3.enableOut.benefitMax,P3.enableOut.benefitMax,$PRE.P3.enableOut.Index,P3.enableOut.Index,$PRE.P3.enableOut.endWhile,P3.enableOut.endWhile,$PRE.P3.enableOut.sumEnablingProbTAout,P3.enableOut.sumEnablingProbTAout,P3.enableOut.randNum,$PRE.P3.enableOut.randNum,P3.enableOut.state128[4],$PRE.P3.enableOut.state128[4],P3.enableOut.state128[3],$PRE.P3.enableOut.state128[3],P3.enableOut.state128[2],$PRE.P3.enableOut.state128[2],P3.enableOut.state128[1],$PRE.P3.enableOut.state128[1],$PRE.P3.enableOut.posTE,P3.enableOut.posTE,$PRE.P3.enableOut.k,P3.enableOut.k,$PRE.P3.enableOut.nTAout,P3.enableOut.nTAout,$PRE.P3.enableOut.nremTAout,P3.enableOut.nremTAout,P3.enableOut.arcWeightSum,$PRE.P3.enableOut.arcWeightSum,P3.delayPassedOut.numtrue,P3.delayPassedOut.anytrue,P3.activeConOut.anychange,$whenCondition1,P4.inTransition[1].disPlace,T4.outPlaces[1].disTransition,P4.reStart,T4.firingCon,T4.inPlaces[1].disTransition,P2.outTransition[2].normalArc,P2.outTransition[2].testValueint,P2.outTransition[2].arcType,P2.outTransition[2].disPlace,P3.inTransition[1].disPlace,T3.outPlaces[1].disTransition,P3.reStart,T3.firingCon,T3.inPlaces[1].disTransition,P2.outTransition[1].normalArc,P2.outTransition[1].testValueint,P2.outTransition[1].arcType,P2.outTransition[1].disPlace,T1.firingCon,T1.outPlaces[1].disTransition,P2.inTransition[1].disPlace,T1.inPlaces[1].disTransition,P1.outTransition[1].normalArc,P1.outTransition[1].testValueint,P1.outTransition[1].arcType,P1.outTransition[1].disPlace,P2.reStart,T2.firingCon,T2.outPlaces[1].disTransition,P1.inTransition[1].disPlace,P1.reStart,P4.enableIn.disTransition[1],P3.enableIn.disTransition[1],P2.enableIn.disTransition[1],P1.enableIn.disTransition[1],$PRE.P4.enableIn.arcWeightSum,$PRE.P4.enableIn.TEin[1],$PRE.P3.enableIn.arcWeightSum,$PRE.P3.enableIn.TEin[1],$PRE.P2.enableIn.arcWeightSum,$PRE.P2.enableIn.TEin[1],$PRE.P2.enableOut.arcWeightSum,$PRE.P2.enableOut.TEout[2],$PRE.P2.enableOut.TEout[1],$PRE.T2.firingTime,$PRE.P1.enableIn.arcWeightSum,$PRE.P1.enableIn.TEin[1],$PRE.P1.enableOut.arcWeightSum,$PRE.P1.enableOut.TEout[1],T2.enabledByInPlaces,P1.enableIn.arcWeight[1],P1.enableOut.arcWeight[1],P2.enableIn.arcWeight[1],P2.enableOut.arcWeight[1],T3.activation.arcWeightIntOut[1],P2.enableOut.arcWeight[2],T4.activation.arcWeightIntOut[1],T4.activation.disPlaceOut[1],P2.enableOut.disTransition[2],T4.activation.normalArc[1],T4.activation.testValueInt[1],T4.activation.arcType[1],T4.activation.disPlaceIn[1],T3.activation.disPlaceOut[1],P2.enableOut.disTransition[1],T3.activation.normalArc[1],T3.activation.testValueInt[1],T3.activation.arcType[1],T3.activation.disPlaceIn[1],T1.activation.disPlaceOut[1],P1.enableOut.disTransition[1],T1.activation.normalArc[1],T1.activation.testValueInt[1],T1.activation.arcType[1],T1.activation.disPlaceIn[1],T2.activation.disPlaceOut[1],P4.enableIn.arcWeightSum,P4.enableIn.TEin[1],P4.enableIn.TEin_[1],P4.enableIn.active[1],P4.enableIn.TAein[1],P4.enableIn.arcWeight[1],P4.firingSumIn.firingSum,P4.firingSumIn.arcWeight[1],P4.firingSumIn.fire[1],P4.delayPassedIn.numtrue,P4.delayPassedIn.anytrue,P4.delayPassedIn.vec[1],P4.inTransition[1].enabledByInPlaces,P4.t,$PRE.P4.t,T4.activation.active,T4.activation.maxTokensInt[1],T4.activation.minTokensInt[1],T4.activation.arcWeightIntIn[1],T4.activation.tIntOut[1],T4.activation.tIntIn[1],T4.active,$PRE.T4.active,P3.enableIn.arcWeightSum,P3.enableIn.TEin[1],P3.enableIn.TEin_[1],P3.enableIn.active[1],P3.enableIn.TAein[1],P3.enableIn.arcWeight[1],P3.firingSumIn.firingSum,P3.firingSumIn.arcWeight[1],P3.firingSumIn.fire[1],P3.delayPassedIn.numtrue,P3.delayPassedIn.anytrue,P3.delayPassedIn.vec[1],P3.inTransition[1].enabledByInPlaces,P3.t,$PRE.P3.t,T3.activation.active,T3.activation.maxTokensInt[1],T3.activation.minTokensInt[1],T3.activation.arcWeightIntIn[1],T3.activation.tIntOut[1],T3.activation.tIntIn[1],T3.active,$PRE.T3.active,T1.activation.active,T1.activation.maxTokensInt[1],T1.activation.minTokensInt[1],T1.activation.arcWeightIntOut[1],T1.activation.arcWeightIntIn[1],T1.activation.tIntOut[1],T1.activation.tIntIn[1],T1.outPlaces[1].enabledByInPlaces,T1.active,$PRE.T1.active,P2.enableIn.arcWeightSum,P2.enableIn.TEin[1],P2.enableIn.TEin_[1],P2.enableIn.active[1],P2.enableIn.TAein[1],P2.enableOut.arcWeightSum,P2.enableOut.TEout[2],P2.enableOut.TEout[1],P2.enableOut.TEout_[2],P2.enableOut.TEout_[1],P2.enableOut.TAout[2],P2.enableOut.TAout[1],P2.firingSumOut.firingSum,P2.firingSumOut.arcWeight[2],P2.firingSumOut.arcWeight[1],P2.firingSumOut.fire[2],P2.firingSumOut.fire[1],P2.firingSumIn.firingSum,P2.firingSumIn.arcWeight[1],P2.firingSumIn.fire[1],P2.delayPassedIn.numtrue,P2.delayPassedIn.anytrue,P2.delayPassedIn.vec[1],P2.delayPassedOut.numtrue,P2.delayPassedOut.anytrue,P2.delayPassedOut.vec[2],P2.delayPassedOut.vec[1],P2.activeConOut.anychange,P2.activeConOut.vec[2],P2.activeConOut.vec[1],P2.activeOut[2],$PRE.P2.activeOut[2],P2.activeOut[1],$PRE.P2.activeOut[1],P2.t,$PRE.P2.t,T2.activation.active,T2.activation.maxTokensInt[1],T2.activation.arcWeightIntOut[1],T2.activation.tIntOut[1],T2.eventPassed,$PRE.T2.eventPassed,T2.firingTime,T2.active,P1.enableIn.arcWeightSum,P1.enableIn.TEin[1],P1.enableIn.TEin_[1],P1.enableIn.active[1],P1.enableIn.TAein[1],P1.enableOut.arcWeightSum,P1.enableOut.TEout[1],P1.enableOut.TEout_[1],P1.enableOut.TAout[1],P1.firingSumOut.firingSum,P1.firingSumOut.arcWeight[1],P1.firingSumOut.fire[1],P1.firingSumIn.firingSum,P1.firingSumIn.arcWeight[1],P1.firingSumIn.fire[1],P1.delayPassedIn.numtrue,P1.delayPassedIn.anytrue,P1.delayPassedIn.vec[1],P1.delayPassedOut.numtrue,P1.delayPassedOut.anytrue,P1.delayPassedOut.vec[1],P1.activeConOut.anychange,P1.activeConOut.vec[1],P1.activeOut[1],$PRE.P1.activeOut[1],P1.t,$PRE.P1.t,$whenCondition9,$whenCondition8,$whenCondition7,$whenCondition6,$whenCondition4,$whenCondition3,$whenCondition13,$whenCondition17,$whenCondition18,$whenCondition22,$whenCondition23,P4.inTransition[1].emptied,P3.inTransition[1].emptied,P2.outTransition[2].fed,P2.outTransition[1].fed,P2.inTransition[1].emptied,P1.outTransition[1].fed,P1.inTransition[1].emptied)
 * Number of discrete states: 0 ()
 * Number of clocked states: 0 ()
 * Top-level inputs: 0
Notification: Strong component statistics for initialization (604):
 * Single equations (assignments): 560
 * Array equations: 3
 * Algorithm blocks: 41
 * Record equations: 0
 * When equations: 0
 * If-equations: 0
 * Equation systems (not torn): 0
 * Torn equation systems: 0
 * Mixed (continuous/discrete) equation systems: 0
Notification: Performance of prepare postOptimizeDAE: time 0.003245/0.4526, allocations: 3.032 MB / 0.5478 GB, free: 35.74 MB / 378.7 MB
Notification: Performance of postOpt lateInlineFunction (simulation): time 0.0006351/0.4532, allocations: 333.1 kB / 0.5481 GB, free: 35.41 MB / 378.7 MB
Notification: Performance of postOpt wrapFunctionCalls (simulation): time 0.0139/0.4672, allocations: 10.19 MB / 0.558 GB, free: 25.02 MB / 378.7 MB
Notification: Performance of postOpt inlineArrayEqn (simulation): time 4.246e-05/0.4672, allocations: 28 kB / 0.5581 GB, free: 25 MB / 378.7 MB
Notification: Performance of postOpt constantLinearSystem (simulation): time 8.827e-06/0.4672, allocations: 0 / 0.5581 GB, free: 25 MB / 378.7 MB
Notification: Performance of postOpt simplifysemiLinear (simulation): time 1.692e-05/0.4673, allocations: 11.97 kB / 0.5581 GB, free: 24.98 MB / 378.7 MB
Notification: Performance of postOpt removeSimpleEquations (simulation): time 0.01876/0.486, allocations: 14.17 MB / 0.5719 GB, free: 10.61 MB / 378.7 MB
Notification: Performance of postOpt simplifyComplexFunction (simulation): time 1.01e-05/0.4861, allocations: 0 / 0.5719 GB, free: 10.61 MB / 378.7 MB
Notification: Performance of postOpt solveSimpleEquations (simulation): time 0.0005872/0.4867, allocations: 139.7 kB / 0.572 GB, free: 10.48 MB / 378.7 MB
Notification: Performance of postOpt tearingSystem (simulation): time 1.011e-05/0.4867, allocations: 4 kB / 0.572 GB, free: 10.47 MB / 378.7 MB
Notification: Performance of postOpt inputDerivativesUsed (simulation): time 0.0004435/0.4871, allocations: 194.6 kB / 0.5722 GB, free: 10.29 MB / 378.7 MB
Notification: Performance of postOpt calculateStrongComponentJacobians (simulation): time 9.207e-06/0.4871, allocations: 8 kB / 0.5722 GB, free: 10.28 MB / 378.7 MB
Notification: Performance of postOpt calculateStateSetsJacobians (simulation): time 2.024e-06/0.4872, allocations: 0 / 0.5722 GB, free: 10.28 MB / 378.7 MB
Notification: Performance of postOpt symbolicJacobian (simulation): time 0.01527/0.5024, allocations: 10.99 MB / 0.583 GB, free: 15.04 MB / 394.7 MB
Notification: Performance of postOpt removeConstants (simulation): time 0.0005312/0.503, allocations: 301.9 kB / 0.5833 GB, free: 14.73 MB / 394.7 MB
Notification: Performance of postOpt simplifyTimeIndepFuncCalls (simulation): time 0.0009127/0.5039, allocations: 326.9 kB / 0.5836 GB, free: 14.41 MB / 394.7 MB
Notification: Performance of postOpt simplifyAllExpressions (simulation): time 0.00227/0.5062, allocations: 327.7 kB / 0.5839 GB, free: 14.09 MB / 394.7 MB
Notification: Performance of postOpt findZeroCrossings (simulation): time 0.001741/0.5079, allocations: 1.161 MB / 0.585 GB, free: 12.93 MB / 394.7 MB
Notification: Performance of postOpt collapseArrayExpressions (simulation): time 0.0006425/0.5086, allocations: 222.2 kB / 0.5852 GB, free: 12.71 MB / 394.7 MB
Notification: Performance of sorting global known variables: time 0.000868/0.5095, allocations: 0.7963 MB / 0.586 GB, free: 11.91 MB / 394.7 MB
Notification: Performance of sort global known variables: time 1.6e-07/0.5095, allocations: 0 / 0.586 GB, free: 11.91 MB / 394.7 MB
Notification: Performance of remove unused functions: time 0.003405/0.5129, allocations: 1.241 MB / 0.5872 GB, free: 10.69 MB / 394.7 MB
Notification: Model statistics after passing the back-end for simulation:
 * Number of independent subsystems: 3
 * Number of states: 0 ()
 * Number of discrete variables: 302 ($whenCondition1,P3.activeConOut.anychange,P3.delayPassedOut.anytrue,P3.delayPassedOut.numtrue,P3.enableOut.state128[1],P3.enableOut.state128[2],P3.enableOut.state128[3],P3.enableOut.state128[4],P3.enableOut.arcWeightSum,P3.enableOut.nremTAout,P3.enableOut.nTAout,P3.enableOut.k,P3.enableOut.posTE,P3.enableOut.randNum,P3.enableOut.sumEnablingProbTAout,P3.enableOut.endWhile,P3.enableOut.Index,P3.enableOut.benefitMax,P3.enableOut.valid,P3.enableOut.benefitLimit,$whenCondition2,P4.activeConOut.anychange,P4.delayPassedOut.anytrue,P4.delayPassedOut.numtrue,P4.enableOut.state128[1],P4.enableOut.state128[2],P4.enableOut.state128[3],P4.enableOut.state128[4],P4.enableOut.arcWeightSum,P4.enableOut.nremTAout,P4.enableOut.nTAout,P4.enableOut.k,P4.enableOut.posTE,P4.enableOut.randNum,P4.enableOut.sumEnablingProbTAout,P4.enableOut.endWhile,P4.enableOut.Index,P4.enableOut.benefitMax,P4.enableOut.valid,P4.enableOut.benefitLimit,T2.active,$whenCondition25,$whenCondition24,$whenCondition26,$whenCondition23,$whenCondition22,$whenCondition20,$whenCondition19,$whenCondition21,$whenCondition18,$whenCondition17,$whenCondition15,$whenCondition14,$whenCondition16,$whenCondition13,$whenCondition11,$whenCondition10,$whenCondition12,$whenCondition3,$whenCondition4,$whenCondition5,$whenCondition6,$whenCondition7,$whenCondition8,$whenCondition9,P1.t,P1.outTransition[1].tokenInOut,P1.tokeninout,P1.activeOut[1],P1.activeConOut.vec[1],P1.activeConOut.anychange,P1.delayPassedOut.vec[1],P1.delayPassedOut.anytrue,P1.delayPassedOut.numtrue,P1.delayPassedIn.vec[1],P1.delayPassedIn.anytrue,P1.delayPassedIn.numtrue,P1.firingSumIn.fire[1],P1.firingSumIn.arcWeight[1],P1.firingSumIn.firingSum,P1.firingSumOut.fire[1],P1.firingSumOut.arcWeight[1],P1.firingSumOut.firingSum,P1.enableOut.TAout[1],P1.enableOut.TEout_[1],P1.enableOut.state128[1],P1.enableOut.state128[2],P1.enableOut.state128[3],P1.enableOut.state128[4],P1.enableOut.TEout[1],P1.enableOut.remTAout[1],P1.enableOut.cumEnablingProb[1],P1.enableOut.arcWeightSum,P1.enableOut.nremTAout,P1.enableOut.nTAout,P1.enableOut.k,P1.enableOut.posTE,P1.enableOut.randNum,P1.enableOut.sumEnablingProbTAout,P1.enableOut.endWhile,P1.enableOut.Index,P1.enableOut.benefitMax,P1.enableOut.valid,P1.enableOut.benefitLimit,P1.enableIn.TAein[1],P1.enableIn.active[1],P1.enableIn.TEin_[1],P1.enableIn.state128[1],P1.enableIn.state128[2],P1.enableIn.state128[3],P1.enableIn.state128[4],P1.enableIn.TEin[1],P1.enableIn.remTAin[1],P1.enableIn.cumEnablingProb[1],P1.enableIn.arcWeightSum,P1.enableIn.nremTAin,P1.enableIn.nTAin,P1.enableIn.k,P1.enableIn.posTE,P1.enableIn.randNum,P1.enableIn.sumEnablingProbTAin,P1.enableIn.endWhile,P1.enableIn.Index,P1.enableIn.benefitMax,P1.enableIn.valid,P1.enableIn.benefitLimit,T2.firingTime,T2.fireTime,T2.eventPassed,T2.ani,T2.eventIndex,T2.activation.tIntOut[1],T2.activation.arcWeightIntOut[1],T2.activation.maxTokensInt[1],T2.activation.active,P2.t,P2.tokeninout,P2.activeOut[1],P2.activeOut[2],P2.activeConOut.vec[1],P2.activeConOut.vec[2],P2.activeConOut.anychange,P2.delayPassedOut.vec[1],P2.delayPassedOut.vec[2],P2.delayPassedOut.anytrue,P2.delayPassedOut.numtrue,P2.delayPassedIn.vec[1],P2.delayPassedIn.anytrue,P2.delayPassedIn.numtrue,P2.firingSumIn.fire[1],P2.firingSumIn.arcWeight[1],P2.firingSumIn.firingSum,P2.firingSumOut.fire[1],P2.firingSumOut.fire[2],P2.firingSumOut.arcWeight[1],P2.firingSumOut.arcWeight[2],P2.firingSumOut.firingSum,P2.enableOut.TAout[1],P2.enableOut.TAout[2],P2.enableOut.TEout_[1],P2.enableOut.TEout_[2],P2.enableOut.state128[1],P2.enableOut.state128[2],P2.enableOut.state128[3],P2.enableOut.state128[4],P2.enableOut.TEout[1],P2.enableOut.TEout[2],P2.enableOut.remTAout[1],P2.enableOut.remTAout[2],P2.enableOut.cumEnablingProb[1],P2.enableOut.cumEnablingProb[2],P2.enableOut.arcWeightSum,P2.enableOut.nremTAout,P2.enableOut.nTAout,P2.enableOut.k,P2.enableOut.posTE,P2.enableOut.randNum,P2.enableOut.sumEnablingProbTAout,P2.enableOut.endWhile,P2.enableOut.Index,P2.enableOut.benefitMax,P2.enableOut.valid,P2.enableOut.benefitLimit,P2.enableIn.TAein[1],P2.enableIn.active[1],P2.enableIn.TEin_[1],P2.enableIn.state128[1],P2.enableIn.state128[2],P2.enableIn.state128[3],P2.enableIn.state128[4],P2.enableIn.TEin[1],P2.enableIn.remTAin[1],P2.enableIn.cumEnablingProb[1],P2.enableIn.arcWeightSum,P2.enableIn.nremTAin,P2.enableIn.nTAin,P2.enableIn.k,P2.enableIn.posTE,P2.enableIn.randNum,P2.enableIn.sumEnablingProbTAin,P2.enableIn.endWhile,P2.enableIn.Index,P2.enableIn.benefitMax,P2.enableIn.valid,P2.enableIn.benefitLimit,T1.active,T1.outPlaces[1].enabledByInPlaces,T1.fireTime,T1.ani,T1.activation.tIntIn[1],T1.activation.tIntOut[1],T1.activation.arcWeightIntIn[1],T1.activation.arcWeightIntOut[1],T1.activation.minTokensInt[1],T1.activation.maxTokensInt[1],T1.activation.active,T3.active,T3.inPlaces[1].tokenInOut,T3.fireTime,T3.ani,T3.activation.tIntIn[1],T3.activation.tIntOut[1],T3.activation.arcWeightIntIn[1],T3.activation.minTokensInt[1],T3.activation.maxTokensInt[1],T3.activation.active,P3.t,P3.inTransition[1].enabledByInPlaces,P3.tokeninout,P3.delayPassedIn.vec[1],P3.delayPassedIn.anytrue,P3.delayPassedIn.numtrue,P3.firingSumIn.fire[1],P3.firingSumIn.arcWeight[1],P3.firingSumIn.firingSum,P3.firingSumOut.firingSum,P3.enableIn.arcWeight[1],P3.enableIn.TAein[1],P3.enableIn.active[1],P3.enableIn.TEin_[1],P3.enableIn.state128[1],P3.enableIn.state128[2],P3.enableIn.state128[3],P3.enableIn.state128[4],P3.enableIn.TEin[1],P3.enableIn.remTAin[1],P3.enableIn.cumEnablingProb[1],P3.enableIn.arcWeightSum,P3.enableIn.nremTAin,P3.enableIn.nTAin,P3.enableIn.k,P3.enableIn.posTE,P3.enableIn.randNum,P3.enableIn.sumEnablingProbTAin,P3.enableIn.endWhile,P3.enableIn.Index,P3.enableIn.benefitMax,P3.enableIn.valid,P3.enableIn.benefitLimit,T4.active,T4.inPlaces[1].tokenInOut,T4.fireTime,T4.ani,T4.activation.tIntIn[1],T4.activation.tIntOut[1],T4.activation.arcWeightIntIn[1],T4.activation.minTokensInt[1],T4.activation.maxTokensInt[1],T4.activation.active,P4.t,P4.inTransition[1].enabledByInPlaces,P4.tokeninout,P4.delayPassedIn.vec[1],P4.delayPassedIn.anytrue,P4.delayPassedIn.numtrue,P4.firingSumIn.fire[1],P4.firingSumIn.arcWeight[1],P4.firingSumIn.firingSum,P4.firingSumOut.firingSum,P4.enableIn.arcWeight[1],P4.enableIn.TAein[1],P4.enableIn.active[1],P4.enableIn.TEin_[1],P4.enableIn.state128[1],P4.enableIn.state128[2],P4.enableIn.state128[3],P4.enableIn.state128[4],P4.enableIn.TEin[1],P4.enableIn.remTAin[1],P4.enableIn.cumEnablingProb[1],P4.enableIn.arcWeightSum,P4.enableIn.nremTAin,P4.enableIn.nTAin,P4.enableIn.k,P4.enableIn.posTE,P4.enableIn.randNum,P4.enableIn.sumEnablingProbTAin,P4.enableIn.endWhile,P4.enableIn.Index,P4.enableIn.benefitMax,P4.enableIn.valid,P4.enableIn.benefitLimit)
 * Number of discrete states: 214 (P1.firingSumOut.firingSum,P1.firingSumIn.firingSum,P2.firingSumOut.firingSum,P2.firingSumIn.firingSum,P3.firingSumOut.firingSum,P3.firingSumIn.firingSum,P4.firingSumOut.firingSum,P4.firingSumIn.firingSum,P2.tokeninout,P1.tokeninout,P4.t,P3.t,P2.t,P2.activeOut[1],P2.activeOut[2],P1.t,P1.activeOut[1],T4.activation.active,T4.active,P4.delayPassedIn.numtrue,P4.delayPassedIn.anytrue,T3.activation.active,T3.active,P3.delayPassedIn.numtrue,P3.delayPassedIn.anytrue,T1.activation.active,T1.active,P2.delayPassedIn.numtrue,P2.delayPassedIn.anytrue,P2.delayPassedOut.numtrue,P2.delayPassedOut.anytrue,P2.activeConOut.anychange,i,P2.activeConOut.vec[i],P2.enableOut.TEout_[2],P2.enableOut.TEout_[1],P2.enableOut.valid,P2.enableOut.benefitLimit,P2.enableOut.benefitMax,P2.enableOut.posTE,P2.enableOut.k,P2.enableOut.endWhile,P2.enableOut.state128[4],P2.enableOut.state128[3],P2.enableOut.state128[2],P2.enableOut.state128[1],P2.enableOut.randNum,P2.enableOut.cumEnablingProb[2],P2.enableOut.cumEnablingProb[1],P2.enableOut.sumEnablingProbTAout,P2.enableOut.nTAout,P2.enableOut.nremTAout,P2.enableOut.remTAout[2],P2.enableOut.remTAout[1],P2.enableOut.Index,$whenCondition6,P2.enableOut.arcWeightSum,P2.enableOut.TEout[2],P2.enableOut.TEout[1],P4.enableIn.TEin_[1],P4.enableIn.valid,P4.enableIn.benefitLimit,P4.enableIn.benefitMax,P4.enableIn.posTE,P4.enableIn.k,P4.enableIn.endWhile,P4.enableIn.state128[4],P4.enableIn.state128[3],P4.enableIn.state128[2],P4.enableIn.state128[1],P4.enableIn.randNum,P4.enableIn.cumEnablingProb[1],P4.enableIn.sumEnablingProbTAin,P4.enableIn.nTAin,P4.enableIn.nremTAin,P4.enableIn.remTAin[1],P4.enableIn.Index,$whenCondition9,P4.enableIn.arcWeightSum,P4.enableIn.TEin[1],P3.enableIn.TEin_[1],P3.enableIn.valid,P3.enableIn.benefitLimit,P3.enableIn.benefitMax,P3.enableIn.posTE,P3.enableIn.k,P3.enableIn.endWhile,P3.enableIn.state128[4],P3.enableIn.state128[3],P3.enableIn.state128[2],P3.enableIn.state128[1],P3.enableIn.randNum,P3.enableIn.cumEnablingProb[1],P3.enableIn.sumEnablingProbTAin,P3.enableIn.nTAin,P3.enableIn.nremTAin,P3.enableIn.remTAin[1],P3.enableIn.Index,$whenCondition8,P3.enableIn.arcWeightSum,P3.enableIn.TEin[1],T2.eventIndex,$whenCondition5,T2.activation.active,T2.eventPassed,P1.delayPassedIn.numtrue,P1.delayPassedIn.anytrue,P1.enableIn.TEin_[1],P1.enableIn.valid,P1.enableIn.benefitLimit,P1.enableIn.benefitMax,P1.enableIn.posTE,P1.enableIn.k,P1.enableIn.endWhile,P1.enableIn.state128[4],P1.enableIn.state128[3],P1.enableIn.state128[2],P1.enableIn.state128[1],P1.enableIn.randNum,P1.enableIn.cumEnablingProb[1],P1.enableIn.sumEnablingProbTAin,P1.enableIn.nTAin,P1.enableIn.nremTAin,P1.enableIn.remTAin[1],P1.enableIn.Index,$whenCondition4,P1.enableIn.arcWeightSum,P1.enableIn.TEin[1],P1.delayPassedOut.numtrue,P1.delayPassedOut.anytrue,P1.activeConOut.anychange,P1.activeConOut.vec[i],P1.enableOut.TEout_[1],P1.enableOut.valid,P1.enableOut.benefitLimit,P1.enableOut.benefitMax,P1.enableOut.posTE,P1.enableOut.k,P1.enableOut.endWhile,P1.enableOut.state128[4],P1.enableOut.state128[3],P1.enableOut.state128[2],P1.enableOut.state128[1],P1.enableOut.randNum,P1.enableOut.cumEnablingProb[1],P1.enableOut.sumEnablingProbTAout,P1.enableOut.nTAout,P1.enableOut.nremTAout,P1.enableOut.remTAout[1],P1.enableOut.Index,$whenCondition3,P1.enableOut.arcWeightSum,P1.enableOut.TEout[1],P2.enableIn.TEin_[1],P2.enableIn.valid,P2.enableIn.benefitLimit,P2.enableIn.benefitMax,P2.enableIn.posTE,P2.enableIn.k,P2.enableIn.endWhile,P2.enableIn.state128[4],P2.enableIn.state128[3],P2.enableIn.state128[2],P2.enableIn.state128[1],P2.enableIn.randNum,P2.enableIn.cumEnablingProb[1],P2.enableIn.sumEnablingProbTAin,P2.enableIn.nTAin,P2.enableIn.nremTAin,P2.enableIn.remTAin[1],P2.enableIn.Index,$whenCondition7,P2.enableIn.arcWeightSum,P2.enableIn.TEin[1],P4.enableOut.benefitLimit,P4.enableOut.valid,P4.enableOut.benefitMax,P4.enableOut.Index,P4.enableOut.endWhile,P4.enableOut.sumEnablingProbTAout,P4.enableOut.state128[4],P4.enableOut.state128[3],P4.enableOut.state128[2],P4.enableOut.state128[1],P4.enableOut.randNum,P4.enableOut.posTE,P4.enableOut.k,P4.enableOut.nTAout,P4.enableOut.nremTAout,$whenCondition2,P4.enableOut.arcWeightSum,P4.delayPassedOut.numtrue,P4.delayPassedOut.anytrue,P4.activeConOut.anychange,P3.enableOut.benefitLimit,P3.enableOut.valid,P3.enableOut.benefitMax,P3.enableOut.Index,P3.enableOut.endWhile,P3.enableOut.sumEnablingProbTAout,P3.enableOut.state128[4],P3.enableOut.state128[3],P3.enableOut.state128[2],P3.enableOut.state128[1],P3.enableOut.randNum,P3.enableOut.posTE,P3.enableOut.k,P3.enableOut.nTAout,P3.enableOut.nremTAout,$whenCondition1,P3.enableOut.arcWeightSum,P3.delayPassedOut.numtrue,P3.delayPassedOut.anytrue,P3.activeConOut.anychange)
 * Number of clocked states: 0 ()
 * Top-level inputs: 0
Notification: Strong component statistics for simulation (174):
 * Single equations (assignments): 125
 * Array equations: 3
 * Algorithm blocks: 33
 * Record equations: 0
 * When equations: 13
 * If-equations: 0
 * Equation systems (not torn): 0
 * Torn equation systems: 0
 * Mixed (continuous/discrete) equation systems: 0
Notification: Performance of Backend phase and start with SimCode phase: time 0.001498/0.5144, allocations: 0.8937 MB / 0.5881 GB, free: 9.812 MB / 394.7 MB
Notification: Performance of simCode: created initialization part: time 0.01783/0.5323, allocations: 11.22 MB / 0.599 GB, free: 14.1 MB / 410.7 MB
Notification: Performance of simCode: created event and clocks part: time 5.43e-06/0.5323, allocations: 0 / 0.599 GB, free: 14.1 MB / 410.7 MB
Notification: Performance of simCode: created simulation system equations: time 0.01305/0.5453, allocations: 15.57 MB / 0.6142 GB, free: 14.13 MB / 426.7 MB
Notification: Performance of simCode: created of all other equations (e.g. parameter, nominal, assert, etc): time 0.002007/0.5474, allocations: 481.5 kB / 0.6147 GB, free: 13.68 MB / 426.7 MB
Notification: Performance of simCode: created linear, non-linear and system jacobian parts: time 0.01274/0.5601, allocations: 8.304 MB / 0.6228 GB, free: 5.348 MB / 426.7 MB
Notification: Performance of simCode: some other stuff during SimCode phase: time 0.001404/0.5616, allocations: 1.925 MB / 0.6247 GB, free: 3.383 MB / 426.7 MB
Notification: Performance of simCode: alias equations: time 0.001986/0.5636, allocations: 0.7484 MB / 0.6254 GB, free: 2.629 MB / 426.7 MB
Notification: Performance of simCode: all other stuff during SimCode phase: time 0.0003945/0.564, allocations: 179.4 kB / 0.6256 GB, free: 2.457 MB / 426.7 MB
Notification: Performance of SimCode: time 9.32e-07/0.564, allocations: 0 / 0.6256 GB, free: 2.457 MB / 426.7 MB
Notification: Performance of Templates: time 0.2922/0.8562, allocations: 54.67 MB / 0.679 GB, free: 149 MB / 474.7 MB
make -j1 -f PNlib_2.2_PNlib.Examples.DisTest.Ttest.makefile
(rm -f PNlib_2.2_PNlib.Examples.DisTest.Ttest.pipe ; mkfifo PNlib_2.2_PNlib.Examples.DisTest.Ttest.pipe ; head -c 1048576 < PNlib_2.2_PNlib.Examples.DisTest.Ttest.pipe >> ../files/PNlib_2.2_PNlib.Examples.DisTest.Ttest.sim & ./PNlib_2.2_PNlib.Examples.DisTest.Ttest  -abortSlowSimulation -alarm=480  -emit_protected -lv LOG_STATS > PNlib_2.2_PNlib.Examples.DisTest.Ttest.pipe 2>&1)
diffSimulationResults("PNlib_2.2_PNlib.Examples.DisTest.Ttest_res.mat","/home/runner/work/PNlib/PNlib/ReferenceFiles/PNlib.Examples.DisTest.Ttest.mat","../files/PNlib_2.2_PNlib.Examples.DisTest.Ttest.diff",relTol=0.003,relTolDiffMinMax=0.003,rangeDelta=0.001)
Reference file matches
