Running: ./testmodel.py --libraries=/home/runner/.openmodelica/libraries/ --ompython_omhome= PNlib_2.2_PNlib.Examples.DisTest.FiveTimes.conf.json
loadFile("/home/runner/.openmodelica/libraries/ModelicaServices 4.0.0+maint.om/package.mo", uses=false)
loadFile("/home/runner/.openmodelica/libraries/Complex 4.0.0+maint.om/package.mo", uses=false)
loadFile("/home/runner/.openmodelica/libraries/Modelica 4.0.0+maint.om/package.mo", uses=false)
loadFile("/home/runner/work/PNlib/PNlib/PNlib/package.mo", uses=false)
Using package PNlib with version 2.2 (/home/runner/work/PNlib/PNlib/PNlib/package.mo)
Using package Modelica with version 4.0.0 (/home/runner/.openmodelica/libraries/Modelica 4.0.0+maint.om/package.mo)
Using package Complex with version 4.0.0 (/home/runner/.openmodelica/libraries/Complex 4.0.0+maint.om/package.mo)
Using package ModelicaServices with version 4.0.0 (/home/runner/.openmodelica/libraries/ModelicaServices 4.0.0+maint.om/package.mo)
Running command: translateModel(PNlib.Examples.DisTest.FiveTimes,tolerance=1e-06,outputFormat="mat",numberOfIntervals=5000,variableFilter="P1.t|P10.t|P2.t|P3.t|P4.t|P5.t|P6.t|P7.t|P8.t|P9.t|T1.active|T1.fire|T2.active|T2.fire|T3.activeIn|T3.activeOut|T3.fire|T3.fireIn|T3.fireOut|T4.active|T4.fire|T5.fire|T5.instantaneousSpeed|T5.maximumSpeed|T6.active|T6.fire|time",fileNamePrefix="PNlib_2.2_PNlib.Examples.DisTest.FiveTimes")
translateModel(PNlib.Examples.DisTest.FiveTimes,tolerance=1e-06,outputFormat="mat",numberOfIntervals=5000,variableFilter="P1.t|P10.t|P2.t|P3.t|P4.t|P5.t|P6.t|P7.t|P8.t|P9.t|T1.active|T1.fire|T2.active|T2.fire|T3.activeIn|T3.activeOut|T3.fire|T3.fireIn|T3.fireOut|T4.active|T4.fire|T5.fire|T5.instantaneousSpeed|T5.maximumSpeed|T6.active|T6.fire|time",fileNamePrefix="PNlib_2.2_PNlib.Examples.DisTest.FiveTimes")
Notification: Performance of loadFile(/home/runner/.openmodelica/libraries/ModelicaServices 4.0.0+maint.om/package.mo): time 0.001275/0.001275, allocations: 99.56 kB / 15.59 MB, free: 5.234 MB / 13.93 MB
Notification: Performance of loadFile(/home/runner/.openmodelica/libraries/Complex 4.0.0+maint.om/package.mo): time 0.001665/0.001665, allocations: 179.7 kB / 16.51 MB, free: 4.645 MB / 13.93 MB
Notification: Performance of loadFile(/home/runner/.openmodelica/libraries/Modelica 4.0.0+maint.om/package.mo): time 1.622/1.622, allocations: 222.1 MB / 239.4 MB, free: 11.14 MB / 202.7 MB
Notification: Performance of loadFile(/home/runner/work/PNlib/PNlib/PNlib/package.mo): time 0.09501/0.09501, allocations: 16.58 MB / 306.2 MB, free: 10.6 MB / 250.7 MB
Notification: Performance of FrontEnd - loaded program: time 0.000447/0.000447, allocations: 13.5 kB / 370.6 MB, free: 44.89 MB / 298.7 MB
Notification: Performance of FrontEnd - Absyn->SCode: time 0.07156/0.07202, allocations: 53.47 MB / 424.1 MB, free: 5.98 MB / 298.7 MB
Notification: Performance of NFInst.instantiate(PNlib.Examples.DisTest.FiveTimes): time 0.009066/0.08113, allocations: 9.623 MB / 433.7 MB, free: 12.33 MB / 314.7 MB
Notification: Performance of NFInst.instExpressions: time 0.01404/0.09519, allocations: 8.468 MB / 442.2 MB, free: 3.852 MB / 314.7 MB
Notification: Performance of NFInst.updateImplicitVariability: time 0.001629/0.09686, allocations: 63.75 kB / 442.2 MB, free: 3.789 MB / 314.7 MB
Notification: Performance of NFTyping.typeComponents: time 0.001804/0.09871, allocations: 0.9531 MB / 443.2 MB, free: 2.828 MB / 314.7 MB
Notification: Performance of NFTyping.typeBindings: time 0.001902/0.1006, allocations: 0.9725 MB / 444.1 MB, free: 1.848 MB / 314.7 MB
Notification: Performance of NFTyping.typeClassSections: time 0.007217/0.1079, allocations: 4.591 MB / 448.7 MB, free: 13.25 MB / 330.7 MB
Notification: Performance of NFFlatten.flatten: time 0.01149/0.1194, allocations: 13.56 MB / 462.3 MB, free: 15.66 MB / 346.7 MB
Notification: Performance of NFFlatten.resolveConnections: time 0.002773/0.1222, allocations: 1.974 MB / 464.3 MB, free: 13.61 MB / 346.7 MB
Notification: Performance of NFEvalConstants.evaluate: time 0.004428/0.1266, allocations: 4.987 MB / 469.3 MB, free: 8.605 MB / 346.7 MB
Notification: Performance of NFSimplifyModel.simplify: time 0.003349/0.13, allocations: 3.722 MB / 473 MB, free: 4.867 MB / 346.7 MB
Notification: Performance of NFPackage.collectConstants: time 0.001436/0.1314, allocations: 1.004 MB / 474 MB, free: 3.863 MB / 346.7 MB
Notification: Performance of NFFlatten.collectFunctions: time 0.002571/0.134, allocations: 1.885 MB / 475.9 MB, free: 1.977 MB / 346.7 MB
Notification: Performance of NFScalarize.scalarize: time 0.001153/0.1352, allocations: 1.596 MB / 477.5 MB, free: 384 kB / 346.7 MB
Notification: Performance of NFVerifyModel.verify: time 0.00451/0.1397, allocations: 4.305 MB / 481.8 MB, free: 12.05 MB / 362.7 MB
Notification: Performance of NFConvertDAE.convert: time 0.007864/0.1476, allocations: 10.11 MB / 491.9 MB, free: 1.922 MB / 362.7 MB
Notification: Performance of FrontEnd - DAE generated: time 4.939e-06/0.1476, allocations: 0 / 491.9 MB, free: 1.922 MB / 362.7 MB
Notification: Performance of FrontEnd: time 1.303e-06/0.1476, allocations: 0 / 491.9 MB, free: 1.922 MB / 362.7 MB
Notification: Performance of Transformations before backend: time 4.209e-05/0.1477, allocations: 4 kB / 491.9 MB, free: 1.918 MB / 362.7 MB
Notification: Model statistics after passing the front-end and creating the data structures used by the back-end:
 * Number of equations: 1917
 * Number of variables: 1917
Notification: Performance of Generate backend data structure: time 0.01208/0.1597, allocations: 10.33 MB / 0.4904 GB, free: 6.855 MB / 378.7 MB
Notification: Performance of prepare preOptimizeDAE: time 3.547e-05/0.1598, allocations: 11.97 kB / 0.4905 GB, free: 6.844 MB / 378.7 MB
Notification: Performance of preOpt normalInlineFunction (simulation): time 0.004294/0.1641, allocations: 1.101 MB / 0.4915 GB, free: 5.734 MB / 378.7 MB
Notification: Performance of preOpt evaluateParameters (simulation): time 0.004892/0.169, allocations: 2.998 MB / 0.4945 GB, free: 2.672 MB / 378.7 MB
Notification: Performance of preOpt simplifyIfEquations (simulation): time 0.0006952/0.1697, allocations: 1.179 MB / 0.4956 GB, free: 1.363 MB / 378.7 MB
Notification: Performance of preOpt expandDerOperator (simulation): time 0.001611/0.1713, allocations: 0.8669 MB / 0.4965 GB, free: 0.4961 MB / 378.7 MB
Notification: Performance of preOpt clockPartitioning (simulation): time 0.2456/0.417, allocations: 15.1 MB / 0.5112 GB, free: 67.41 MB / 378.7 MB
Notification: Performance of preOpt findStateOrder (simulation): time 0.0001468/0.4172, allocations: 22.44 kB / 0.5112 GB, free: 67.41 MB / 378.7 MB
Notification: Performance of preOpt replaceEdgeChange (simulation): time 0.001117/0.4183, allocations: 434.5 kB / 0.5116 GB, free: 67.25 MB / 378.7 MB
Notification: Performance of preOpt inlineArrayEqn (simulation): time 0.001332/0.4196, allocations: 0.7013 MB / 0.5123 GB, free: 67 MB / 378.7 MB
Notification: Performance of preOpt removeEqualRHS (simulation): time 0.01771/0.4374, allocations: 10.63 MB / 0.5227 GB, free: 60.06 MB / 378.7 MB
Notification: Performance of preOpt removeSimpleEquations (simulation): time 0.03521/0.4726, allocations: 31.64 MB / 0.5536 GB, free: 28.12 MB / 378.7 MB
Notification: Performance of preOpt comSubExp (simulation): time 0.01611/0.4888, allocations: 17.42 MB / 0.5706 GB, free: 10.63 MB / 378.7 MB
Notification: Performance of preOpt resolveLoops (simulation): time 0.01563/0.5044, allocations: 16.55 MB / 0.5868 GB, free: 10.05 MB / 394.7 MB
Notification: Performance of preOpt evalFunc (simulation): time 0.003498/0.5079, allocations: 5.947 MB / 0.5926 GB, free: 2.824 MB / 394.7 MB
Notification: Performance of preOpt encapsulateWhenConditions (simulation): time 0.01527/0.5232, allocations: 9.649 MB / 0.602 GB, free: 8.945 MB / 410.7 MB
Notification: Performance of pre-optimization done (n=794): time 9.448e-06/0.5233, allocations: 0 / 0.602 GB, free: 8.945 MB / 410.7 MB
Notification: Performance of matching and sorting (n=794): time 0.04728/0.5705, allocations: 29.4 MB / 0.6307 GB, free: 10.99 MB / 442.7 MB
Notification: Performance of inlineWhenForInitialization (initialization): time 0.002428/0.573, allocations: 5.515 MB / 0.6361 GB, free: 4.488 MB / 442.7 MB
Notification: Performance of selectInitializationVariablesDAE (initialization): time 0.004117/0.5771, allocations: 3.096 MB / 0.6391 GB, free: 1.379 MB / 442.7 MB
Notification: Performance of collectPreVariables (initialization): time 0.001023/0.5782, allocations: 445.6 kB / 0.6396 GB, free: 0.9375 MB / 442.7 MB
Notification: Performance of collectInitialEqns (initialization): time 0.002542/0.5807, allocations: 2.108 MB / 0.6416 GB, free: 14.86 MB / 458.7 MB
Notification: Performance of collectInitialBindings (initialization): time 0.001962/0.5827, allocations: 1.984 MB / 0.6436 GB, free: 12.85 MB / 458.7 MB
Notification: Performance of simplifyInitialFunctions (initialization): time 0.00318/0.5859, allocations: 2.31 MB / 0.6458 GB, free: 10.53 MB / 458.7 MB
Notification: Performance of setup shared object (initialization): time 3.206e-05/0.586, allocations: 309.1 kB / 0.6461 GB, free: 10.22 MB / 458.7 MB
Notification: Performance of preBalanceInitialSystem (initialization): time 0.006728/0.5927, allocations: 4.217 MB / 0.6502 GB, free: 6 MB / 458.7 MB
Notification: Performance of partitionIndependentBlocks (initialization): time 0.009283/0.602, allocations: 8.1 MB / 0.6581 GB, free: 12.19 MB / 474.7 MB
Notification: Performance of analyzeInitialSystem (initialization): time 0.2524/0.8544, allocations: 25.54 MB / 0.6831 GB, free: 133.2 MB / 474.7 MB
Notification: Performance of solveInitialSystemEqSystem (initialization): time 0.0001528/0.8546, allocations: 32.52 kB / 0.6831 GB, free: 133.2 MB / 474.7 MB
Notification: Performance of matching and sorting (n=1526) (initialization): time 0.02526/0.8799, allocations: 17.93 MB / 0.7006 GB, free: 129 MB / 474.7 MB
Notification: Performance of prepare postOptimizeDAE: time 0.001052/0.881, allocations: 3.233 MB / 0.7038 GB, free: 125.6 MB / 474.7 MB
Notification: Performance of postOpt simplifyComplexFunction (initialization): time 0.01328/0.8942, allocations: 9.335 MB / 0.7129 GB, free: 121.2 MB / 474.7 MB
Notification: Performance of postOpt tearingSystem (initialization): time 0.0009898/0.8953, allocations: 307.9 kB / 0.7132 GB, free: 121.2 MB / 474.7 MB
Notification: Performance of postOpt solveSimpleEquations (initialization): time 0.004575/0.8999, allocations: 1.262 MB / 0.7144 GB, free: 120.3 MB / 474.7 MB
Notification: Performance of postOpt calculateStrongComponentJacobians (initialization): time 0.0006874/0.9006, allocations: 0.9147 MB / 0.7153 GB, free: 119.5 MB / 474.7 MB
Notification: Performance of postOpt simplifyAllExpressions (initialization): time 0.005591/0.9062, allocations: 1.258 MB / 0.7165 GB, free: 118.7 MB / 474.7 MB
Notification: Performance of postOpt collapseArrayExpressions (initialization): time 0.0008587/0.907, allocations: 0.5673 MB / 0.7171 GB, free: 118.2 MB / 474.7 MB
Warning: Assuming fixed start value for the following 228 variables:
         P10.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P10.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P10.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P10.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P10.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P10.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P10.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P10.enableIn.arcWeightSum:DISCRETE(fixed = true protected = true )  "arc weight sum" type: Real
         P9.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P9.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P9.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P9.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P9.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P9.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P9.enableOut.Index:DISCRETE(fixed = true protected = true )  type: Integer
         P9.enableOut.arcWeightSum:DISCRETE(fixed = true protected = true )  "arc weight sum" type: Real
         P9.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P9.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P9.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P9.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P9.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P9.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P9.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P9.enableIn.arcWeightSum:DISCRETE(fixed = true protected = true )  "arc weight sum" type: Real
         P8.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P8.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P8.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P8.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P8.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P8.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P8.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P8.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P8.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P8.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P7.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P7.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P7.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P7.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P7.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P7.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P7.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P7.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P7.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P7.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P7.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P7.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P7.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P7.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P7.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P7.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P7.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P7.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P7.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P7.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P6.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P6.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P6.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P6.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P6.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P6.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P6.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P6.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P6.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P6.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P5.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P5.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P5.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P5.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P5.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P5.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P5.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P5.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P5.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P5.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P5.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P5.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P5.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P5.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P5.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P5.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P5.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P5.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P5.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P5.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P4.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P4.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P4.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P4.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P4.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P4.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P4.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P4.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P4.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P4.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P3.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P3.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P3.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P3.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P3.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P3.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P3.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P3.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P3.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P3.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P3.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P3.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P3.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P3.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P3.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P3.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P3.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P3.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P3.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P3.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P2.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P2.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P2.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P2.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P2.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P2.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P2.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P2.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P2.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P2.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P1.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P1.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P1.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P1.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P1.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P1.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P1.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P1.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P1.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P1.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P1.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P1.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P1.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P1.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P1.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P1.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P1.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P1.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P1.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P1.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P10.disMarksIn.anytrue:DISCRETE(fixed = true protected = true )  type: Boolean
         P10.disMarksOut.anytrue:DISCRETE(fixed = true protected = true )  type: Boolean
         P9.disMarksIn.anytrue:DISCRETE(fixed = true protected = true )  type: Boolean
         P9.disMarksOut.anytrue:DISCRETE(fixed = true protected = true )  type: Boolean
         T6.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T6.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         T4.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T4.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         T3.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T3.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         T2.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T2.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         T1.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T1.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         P8.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P8.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P7.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P7.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P6.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P6.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P5.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P5.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P4.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P4.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P3.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P3.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P2.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P2.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P1.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P1.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P10.enableOut.Index:DISCRETE(fixed = true protected = true )  type: Integer
         P10.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P10.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P10.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P10.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P10.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P10.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P10.enableOut.arcWeightSum:DISCRETE(fixed = true protected = true )  "arc weight sum" type: Real
         P8.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P8.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P8.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P8.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P8.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P8.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P8.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P8.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P8.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P8.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P6.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P6.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P6.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P6.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P6.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P6.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P6.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P6.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P6.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P6.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P4.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P4.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P4.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P4.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P4.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P4.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P4.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P4.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P4.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P4.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P2.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P2.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P2.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P2.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P2.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P2.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P2.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P2.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P2.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P2.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         T6.firingTime:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
         T4.firingTime:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
         T3.firingTimeOut:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
         T3.firingTimeIn:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
         T2.firingTime:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
         T1.firingTime:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
Notification: Model statistics after passing the back-end for initialization:
 * Number of independent subsystems: 513
 * Number of states: 0 ()
 * Number of discrete variables: 1268 ($PRE.P10.enableIn.posTE,P10.enableIn.posTE,$PRE.P10.enableIn.k,P10.enableIn.k,$PRE.P10.enableIn.endWhile,P10.enableIn.endWhile,P10.enableIn.randNum,$PRE.P10.enableIn.randNum,P10.enableIn.state128[4],$PRE.P10.enableIn.state128[4],P10.enableIn.state128[3],$PRE.P10.enableIn.state128[3],P10.enableIn.state128[2],$PRE.P10.enableIn.state128[2],P10.enableIn.state128[1],$PRE.P10.enableIn.state128[1],P10.enableIn.cumEnablingProb[1],$PRE.P10.enableIn.cumEnablingProb[1],$PRE.P10.enableIn.sumEnablingProbTAin,P10.enableIn.sumEnablingProbTAin,$PRE.P10.enableIn.nTAin,P10.enableIn.nTAin,$PRE.P10.enableIn.nremTAin,P10.enableIn.nremTAin,P10.enableIn.remTAin[1],$PRE.P10.enableIn.remTAin[1],$PRE.P10.enableIn.Index,P10.enableIn.Index,$PRE.P10.enableIn.arcWeightSum,P10.enableIn.arcWeightSum,P10.enableIn.disTAin[1],$PRE.P10.enableIn.disTAin[1],$PRE.P9.enableOut.posTE,P9.enableOut.posTE,$PRE.P9.enableOut.k,P9.enableOut.k,$PRE.P9.enableOut.endWhile,P9.enableOut.endWhile,P9.enableOut.randNum,$PRE.P9.enableOut.randNum,P9.enableOut.state128[4],$PRE.P9.enableOut.state128[4],P9.enableOut.state128[3],$PRE.P9.enableOut.state128[3],P9.enableOut.state128[2],$PRE.P9.enableOut.state128[2],P9.enableOut.state128[1],$PRE.P9.enableOut.state128[1],P9.enableOut.cumEnablingProb[1],$PRE.P9.enableOut.cumEnablingProb[1],$PRE.P9.enableOut.sumEnablingProbTAout,P9.enableOut.sumEnablingProbTAout,$PRE.P9.enableOut.nTAout,P9.enableOut.nTAout,$PRE.P9.enableOut.nremTAout,P9.enableOut.nremTAout,P9.enableOut.remTAout[1],$PRE.P9.enableOut.remTAout[1],$PRE.P9.enableOut.Index,P9.enableOut.Index,$PRE.P9.enableOut.arcWeightSum,P9.enableOut.arcWeightSum,P9.enableOut.disTAout[1],$PRE.P9.enableOut.disTAout[1],$PRE.P9.enableIn.posTE,P9.enableIn.posTE,$PRE.P9.enableIn.k,P9.enableIn.k,$PRE.P9.enableIn.endWhile,P9.enableIn.endWhile,P9.enableIn.randNum,$PRE.P9.enableIn.randNum,P9.enableIn.state128[4],$PRE.P9.enableIn.state128[4],P9.enableIn.state128[3],$PRE.P9.enableIn.state128[3],P9.enableIn.state128[2],$PRE.P9.enableIn.state128[2],P9.enableIn.state128[1],$PRE.P9.enableIn.state128[1],P9.enableIn.cumEnablingProb[1],$PRE.P9.enableIn.cumEnablingProb[1],$PRE.P9.enableIn.sumEnablingProbTAin,P9.enableIn.sumEnablingProbTAin,$PRE.P9.enableIn.nTAin,P9.enableIn.nTAin,$PRE.P9.enableIn.nremTAin,P9.enableIn.nremTAin,P9.enableIn.remTAin[1],$PRE.P9.enableIn.remTAin[1],$PRE.P9.enableIn.Index,P9.enableIn.Index,$PRE.P9.enableIn.arcWeightSum,P9.enableIn.arcWeightSum,P9.enableIn.disTAin[1],$PRE.P9.enableIn.disTAin[1],$PRE.P8.enableIn.valid,P8.enableIn.valid,$PRE.P8.enableIn.benefitLimit,P8.enableIn.benefitLimit,$PRE.P8.enableIn.benefitMax,P8.enableIn.benefitMax,$PRE.P8.enableIn.posTE,P8.enableIn.posTE,$PRE.P8.enableIn.k,P8.enableIn.k,$PRE.P8.enableIn.endWhile,P8.enableIn.endWhile,P8.enableIn.randNum,$PRE.P8.enableIn.randNum,P8.enableIn.state128[4],$PRE.P8.enableIn.state128[4],P8.enableIn.state128[3],$PRE.P8.enableIn.state128[3],P8.enableIn.state128[2],$PRE.P8.enableIn.state128[2],P8.enableIn.state128[1],$PRE.P8.enableIn.state128[1],P8.enableIn.cumEnablingProb[1],$PRE.P8.enableIn.cumEnablingProb[1],$PRE.P8.enableIn.sumEnablingProbTAin,P8.enableIn.sumEnablingProbTAin,$PRE.P8.enableIn.nTAin,P8.enableIn.nTAin,$PRE.P8.enableIn.nremTAin,P8.enableIn.nremTAin,P8.enableIn.remTAin[1],$PRE.P8.enableIn.remTAin[1],$PRE.P8.enableIn.Index,P8.enableIn.Index,$PRE.P7.enableIn.valid,P7.enableIn.valid,$PRE.P7.enableIn.benefitLimit,P7.enableIn.benefitLimit,$PRE.P7.enableIn.benefitMax,P7.enableIn.benefitMax,$PRE.P7.enableIn.posTE,P7.enableIn.posTE,$PRE.P7.enableIn.k,P7.enableIn.k,$PRE.P7.enableIn.endWhile,P7.enableIn.endWhile,P7.enableIn.randNum,$PRE.P7.enableIn.randNum,P7.enableIn.state128[4],$PRE.P7.enableIn.state128[4],P7.enableIn.state128[3],$PRE.P7.enableIn.state128[3],P7.enableIn.state128[2],$PRE.P7.enableIn.state128[2],P7.enableIn.state128[1],$PRE.P7.enableIn.state128[1],P7.enableIn.cumEnablingProb[1],$PRE.P7.enableIn.cumEnablingProb[1],$PRE.P7.enableIn.sumEnablingProbTAin,P7.enableIn.sumEnablingProbTAin,$PRE.P7.enableIn.nTAin,P7.enableIn.nTAin,$PRE.P7.enableIn.nremTAin,P7.enableIn.nremTAin,P7.enableIn.remTAin[1],$PRE.P7.enableIn.remTAin[1],$PRE.P7.enableIn.Index,P7.enableIn.Index,$PRE.P7.enableOut.valid,P7.enableOut.valid,$PRE.P7.enableOut.benefitLimit,P7.enableOut.benefitLimit,$PRE.P7.enableOut.benefitMax,P7.enableOut.benefitMax,$PRE.P7.enableOut.posTE,P7.enableOut.posTE,$PRE.P7.enableOut.k,P7.enableOut.k,$PRE.P7.enableOut.endWhile,P7.enableOut.endWhile,P7.enableOut.randNum,$PRE.P7.enableOut.randNum,P7.enableOut.state128[4],$PRE.P7.enableOut.state128[4],P7.enableOut.state128[3],$PRE.P7.enableOut.state128[3],P7.enableOut.state128[2],$PRE.P7.enableOut.state128[2],P7.enableOut.state128[1],$PRE.P7.enableOut.state128[1],P7.enableOut.cumEnablingProb[1],$PRE.P7.enableOut.cumEnablingProb[1],$PRE.P7.enableOut.sumEnablingProbTAout,P7.enableOut.sumEnablingProbTAout,$PRE.P7.enableOut.nTAout,P7.enableOut.nTAout,$PRE.P7.enableOut.nremTAout,P7.enableOut.nremTAout,P7.enableOut.remTAout[1],$PRE.P7.enableOut.remTAout[1],$PRE.P7.enableOut.Index,P7.enableOut.Index,$PRE.P6.enableIn.valid,P6.enableIn.valid,$PRE.P6.enableIn.benefitLimit,P6.enableIn.benefitLimit,$PRE.P6.enableIn.benefitMax,P6.enableIn.benefitMax,$PRE.P6.enableIn.posTE,P6.enableIn.posTE,$PRE.P6.enableIn.k,P6.enableIn.k,$PRE.P6.enableIn.endWhile,P6.enableIn.endWhile,P6.enableIn.randNum,$PRE.P6.enableIn.randNum,P6.enableIn.state128[4],$PRE.P6.enableIn.state128[4],P6.enableIn.state128[3],$PRE.P6.enableIn.state128[3],P6.enableIn.state128[2],$PRE.P6.enableIn.state128[2],P6.enableIn.state128[1],$PRE.P6.enableIn.state128[1],P6.enableIn.cumEnablingProb[1],$PRE.P6.enableIn.cumEnablingProb[1],$PRE.P6.enableIn.sumEnablingProbTAin,P6.enableIn.sumEnablingProbTAin,$PRE.P6.enableIn.nTAin,P6.enableIn.nTAin,$PRE.P6.enableIn.nremTAin,P6.enableIn.nremTAin,P6.enableIn.remTAin[1],$PRE.P6.enableIn.remTAin[1],$PRE.P6.enableIn.Index,P6.enableIn.Index,$PRE.P5.enableIn.valid,P5.enableIn.valid,$PRE.P5.enableIn.benefitLimit,P5.enableIn.benefitLimit,$PRE.P5.enableIn.benefitMax,P5.enableIn.benefitMax,$PRE.P5.enableIn.posTE,P5.enableIn.posTE,$PRE.P5.enableIn.k,P5.enableIn.k,$PRE.P5.enableIn.endWhile,P5.enableIn.endWhile,P5.enableIn.randNum,$PRE.P5.enableIn.randNum,P5.enableIn.state128[4],$PRE.P5.enableIn.state128[4],P5.enableIn.state128[3],$PRE.P5.enableIn.state128[3],P5.enableIn.state128[2],$PRE.P5.enableIn.state128[2],P5.enableIn.state128[1],$PRE.P5.enableIn.state128[1],P5.enableIn.cumEnablingProb[1],$PRE.P5.enableIn.cumEnablingProb[1],$PRE.P5.enableIn.sumEnablingProbTAin,P5.enableIn.sumEnablingProbTAin,$PRE.P5.enableIn.nTAin,P5.enableIn.nTAin,$PRE.P5.enableIn.nremTAin,P5.enableIn.nremTAin,P5.enableIn.remTAin[1],$PRE.P5.enableIn.remTAin[1],$PRE.P5.enableIn.Index,P5.enableIn.Index,$PRE.P5.enableOut.valid,P5.enableOut.valid,$PRE.P5.enableOut.benefitLimit,P5.enableOut.benefitLimit,$PRE.P5.enableOut.benefitMax,P5.enableOut.benefitMax,$PRE.P5.enableOut.posTE,P5.enableOut.posTE,$PRE.P5.enableOut.k,P5.enableOut.k,$PRE.P5.enableOut.endWhile,P5.enableOut.endWhile,P5.enableOut.randNum,$PRE.P5.enableOut.randNum,P5.enableOut.state128[4],$PRE.P5.enableOut.state128[4],P5.enableOut.state128[3],$PRE.P5.enableOut.state128[3],P5.enableOut.state128[2],$PRE.P5.enableOut.state128[2],P5.enableOut.state128[1],$PRE.P5.enableOut.state128[1],P5.enableOut.cumEnablingProb[1],$PRE.P5.enableOut.cumEnablingProb[1],$PRE.P5.enableOut.sumEnablingProbTAout,P5.enableOut.sumEnablingProbTAout,$PRE.P5.enableOut.nTAout,P5.enableOut.nTAout,$PRE.P5.enableOut.nremTAout,P5.enableOut.nremTAout,P5.enableOut.remTAout[1],$PRE.P5.enableOut.remTAout[1],$PRE.P5.enableOut.Index,P5.enableOut.Index,$PRE.P4.enableIn.valid,P4.enableIn.valid,$PRE.P4.enableIn.benefitLimit,P4.enableIn.benefitLimit,$PRE.P4.enableIn.benefitMax,P4.enableIn.benefitMax,$PRE.P4.enableIn.posTE,P4.enableIn.posTE,$PRE.P4.enableIn.k,P4.enableIn.k,$PRE.P4.enableIn.endWhile,P4.enableIn.endWhile,P4.enableIn.randNum,$PRE.P4.enableIn.randNum,P4.enableIn.state128[4],$PRE.P4.enableIn.state128[4],P4.enableIn.state128[3],$PRE.P4.enableIn.state128[3],P4.enableIn.state128[2],$PRE.P4.enableIn.state128[2],P4.enableIn.state128[1],$PRE.P4.enableIn.state128[1],P4.enableIn.cumEnablingProb[1],$PRE.P4.enableIn.cumEnablingProb[1],$PRE.P4.enableIn.sumEnablingProbTAin,P4.enableIn.sumEnablingProbTAin,$PRE.P4.enableIn.nTAin,P4.enableIn.nTAin,$PRE.P4.enableIn.nremTAin,P4.enableIn.nremTAin,P4.enableIn.remTAin[1],$PRE.P4.enableIn.remTAin[1],$PRE.P4.enableIn.Index,P4.enableIn.Index,$PRE.P3.enableIn.valid,P3.enableIn.valid,$PRE.P3.enableIn.benefitLimit,P3.enableIn.benefitLimit,$PRE.P3.enableIn.benefitMax,P3.enableIn.benefitMax,$PRE.P3.enableIn.posTE,P3.enableIn.posTE,$PRE.P3.enableIn.k,P3.enableIn.k,$PRE.P3.enableIn.endWhile,P3.enableIn.endWhile,P3.enableIn.randNum,$PRE.P3.enableIn.randNum,P3.enableIn.state128[4],$PRE.P3.enableIn.state128[4],P3.enableIn.state128[3],$PRE.P3.enableIn.state128[3],P3.enableIn.state128[2],$PRE.P3.enableIn.state128[2],P3.enableIn.state128[1],$PRE.P3.enableIn.state128[1],P3.enableIn.cumEnablingProb[1],$PRE.P3.enableIn.cumEnablingProb[1],$PRE.P3.enableIn.sumEnablingProbTAin,P3.enableIn.sumEnablingProbTAin,$PRE.P3.enableIn.nTAin,P3.enableIn.nTAin,$PRE.P3.enableIn.nremTAin,P3.enableIn.nremTAin,P3.enableIn.remTAin[1],$PRE.P3.enableIn.remTAin[1],$PRE.P3.enableIn.Index,P3.enableIn.Index,$PRE.P3.enableOut.valid,P3.enableOut.valid,$PRE.P3.enableOut.benefitLimit,P3.enableOut.benefitLimit,$PRE.P3.enableOut.benefitMax,P3.enableOut.benefitMax,$PRE.P3.enableOut.posTE,P3.enableOut.posTE,$PRE.P3.enableOut.k,P3.enableOut.k,$PRE.P3.enableOut.endWhile,P3.enableOut.endWhile,P3.enableOut.randNum,$PRE.P3.enableOut.randNum,P3.enableOut.state128[4],$PRE.P3.enableOut.state128[4],P3.enableOut.state128[3],$PRE.P3.enableOut.state128[3],P3.enableOut.state128[2],$PRE.P3.enableOut.state128[2],P3.enableOut.state128[1],$PRE.P3.enableOut.state128[1],P3.enableOut.cumEnablingProb[1],$PRE.P3.enableOut.cumEnablingProb[1],$PRE.P3.enableOut.sumEnablingProbTAout,P3.enableOut.sumEnablingProbTAout,$PRE.P3.enableOut.nTAout,P3.enableOut.nTAout,$PRE.P3.enableOut.nremTAout,P3.enableOut.nremTAout,P3.enableOut.remTAout[1],$PRE.P3.enableOut.remTAout[1],$PRE.P3.enableOut.Index,P3.enableOut.Index,$PRE.P2.enableIn.valid,P2.enableIn.valid,$PRE.P2.enableIn.benefitLimit,P2.enableIn.benefitLimit,$PRE.P2.enableIn.benefitMax,P2.enableIn.benefitMax,$PRE.P2.enableIn.posTE,P2.enableIn.posTE,$PRE.P2.enableIn.k,P2.enableIn.k,$PRE.P2.enableIn.endWhile,P2.enableIn.endWhile,P2.enableIn.randNum,$PRE.P2.enableIn.randNum,P2.enableIn.state128[4],$PRE.P2.enableIn.state128[4],P2.enableIn.state128[3],$PRE.P2.enableIn.state128[3],P2.enableIn.state128[2],$PRE.P2.enableIn.state128[2],P2.enableIn.state128[1],$PRE.P2.enableIn.state128[1],P2.enableIn.cumEnablingProb[1],$PRE.P2.enableIn.cumEnablingProb[1],$PRE.P2.enableIn.sumEnablingProbTAin,P2.enableIn.sumEnablingProbTAin,$PRE.P2.enableIn.nTAin,P2.enableIn.nTAin,$PRE.P2.enableIn.nremTAin,P2.enableIn.nremTAin,P2.enableIn.remTAin[1],$PRE.P2.enableIn.remTAin[1],$PRE.P2.enableIn.Index,P2.enableIn.Index,$PRE.P1.enableIn.valid,P1.enableIn.valid,$PRE.P1.enableIn.benefitLimit,P1.enableIn.benefitLimit,$PRE.P1.enableIn.benefitMax,P1.enableIn.benefitMax,$PRE.P1.enableIn.posTE,P1.enableIn.posTE,$PRE.P1.enableIn.k,P1.enableIn.k,$PRE.P1.enableIn.endWhile,P1.enableIn.endWhile,P1.enableIn.randNum,$PRE.P1.enableIn.randNum,P1.enableIn.state128[4],$PRE.P1.enableIn.state128[4],P1.enableIn.state128[3],$PRE.P1.enableIn.state128[3],P1.enableIn.state128[2],$PRE.P1.enableIn.state128[2],P1.enableIn.state128[1],$PRE.P1.enableIn.state128[1],P1.enableIn.cumEnablingProb[1],$PRE.P1.enableIn.cumEnablingProb[1],$PRE.P1.enableIn.sumEnablingProbTAin,P1.enableIn.sumEnablingProbTAin,$PRE.P1.enableIn.nTAin,P1.enableIn.nTAin,$PRE.P1.enableIn.nremTAin,P1.enableIn.nremTAin,P1.enableIn.remTAin[1],$PRE.P1.enableIn.remTAin[1],$PRE.P1.enableIn.Index,P1.enableIn.Index,$PRE.P1.enableOut.valid,P1.enableOut.valid,$PRE.P1.enableOut.benefitLimit,P1.enableOut.benefitLimit,$PRE.P1.enableOut.benefitMax,P1.enableOut.benefitMax,$PRE.P1.enableOut.posTE,P1.enableOut.posTE,$PRE.P1.enableOut.k,P1.enableOut.k,$PRE.P1.enableOut.endWhile,P1.enableOut.endWhile,P1.enableOut.randNum,$PRE.P1.enableOut.randNum,P1.enableOut.state128[4],$PRE.P1.enableOut.state128[4],P1.enableOut.state128[3],$PRE.P1.enableOut.state128[3],P1.enableOut.state128[2],$PRE.P1.enableOut.state128[2],P1.enableOut.state128[1],$PRE.P1.enableOut.state128[1],P1.enableOut.cumEnablingProb[1],$PRE.P1.enableOut.cumEnablingProb[1],$PRE.P1.enableOut.sumEnablingProbTAout,P1.enableOut.sumEnablingProbTAout,$PRE.P1.enableOut.nTAout,P1.enableOut.nTAout,$PRE.P1.enableOut.nremTAout,P1.enableOut.nremTAout,P1.enableOut.remTAout[1],$PRE.P1.enableOut.remTAout[1],$PRE.P1.enableOut.Index,P1.enableOut.Index,$PRE.P1.reStart,$whenCondition58,$PRE.P2.reStart,$whenCondition55,$PRE.P3.reStart,$whenCondition52,$PRE.P4.reStart,$whenCondition49,$PRE.P5.reStart,$whenCondition46,$PRE.P6.reStart,$whenCondition43,$PRE.P7.reStart,$whenCondition40,$PRE.P8.reStart,$whenCondition37,$PRE.P9.disMarksInOut,P9.outTransition[1].tokenInOut,$PRE.P7.tokeninout,P7.outTransition[1].tokenInOut,$PRE.P5.tokeninout,P5.outTransition[1].tokenInOut,$PRE.P3.tokeninout,P3.outTransition[1].tokenInOut,$PRE.P1.tokeninout,P1.outTransition[1].tokenInOut,$PRE.P10.disMarksIn.anytrue,$PRE.P10.disMarksOut.anytrue,P10.disMarksInOut,$whenCondition60,$PRE.P9.disMarksIn.anytrue,$PRE.P9.disMarksOut.anytrue,P9.disMarksInOut,$whenCondition59,$PRE.T6.ani,$PRE.T6.fireTime,T6.ani,T6.fireTime,$PRE.T4.ani,$PRE.T4.fireTime,T4.ani,T4.fireTime,$PRE.T3.ani,$PRE.T3.fireTime,T3.ani,T3.fireTime,$PRE.T2.ani,$PRE.T2.fireTime,T2.ani,T2.fireTime,$PRE.T1.ani,$PRE.T1.fireTime,T1.ani,T1.fireTime,$PRE.P8.firingSumOut.firingSum,$PRE.P8.firingSumIn.firingSum,P8.tokeninout,$whenCondition35,$whenCondition36,$PRE.P7.firingSumOut.firingSum,$PRE.P7.firingSumIn.firingSum,P7.tokeninout,$whenCondition38,$whenCondition39,$PRE.P6.firingSumOut.firingSum,$PRE.P6.firingSumIn.firingSum,P6.tokeninout,$whenCondition41,$whenCondition42,$PRE.P5.firingSumOut.firingSum,$PRE.P5.firingSumIn.firingSum,P5.tokeninout,$whenCondition44,$whenCondition45,$PRE.P4.firingSumOut.firingSum,$PRE.P4.firingSumIn.firingSum,P4.tokeninout,$whenCondition47,$whenCondition48,$PRE.P3.firingSumOut.firingSum,$PRE.P3.firingSumIn.firingSum,P3.tokeninout,$whenCondition50,$whenCondition51,$PRE.P2.firingSumOut.firingSum,$PRE.P2.firingSumIn.firingSum,P2.tokeninout,$whenCondition53,$whenCondition54,$PRE.P1.firingSumOut.firingSum,$PRE.P1.firingSumIn.firingSum,P1.tokeninout,$whenCondition56,$whenCondition57,P10.disMarksOut.numtrue,P10.disMarksOut.anytrue,T6.eventIndex,$PRE.T6.eventIndex,$whenCondition19,T2.eventIndex,$PRE.T2.eventIndex,$whenCondition18,P8.firingSumOut.firingSum,P6.firingSumOut.firingSum,P4.firingSumOut.firingSum,P2.firingSumOut.firingSum,$PRE.P10.enableOut.Index,P10.enableOut.Index,$PRE.P10.enableOut.endWhile,P10.enableOut.endWhile,$PRE.P10.enableOut.sumEnablingProbTAout,P10.enableOut.sumEnablingProbTAout,P10.enableOut.randNum,$PRE.P10.enableOut.randNum,P10.enableOut.state128[4],$PRE.P10.enableOut.state128[4],P10.enableOut.state128[3],$PRE.P10.enableOut.state128[3],P10.enableOut.state128[2],$PRE.P10.enableOut.state128[2],P10.enableOut.state128[1],$PRE.P10.enableOut.state128[1],$PRE.P10.enableOut.posTE,P10.enableOut.posTE,$PRE.P10.enableOut.k,P10.enableOut.k,$PRE.P10.enableOut.nTAout,P10.enableOut.nTAout,$PRE.P10.enableOut.nremTAout,P10.enableOut.nremTAout,$PRE.P10.enableOut.arcWeightSum,P10.enableOut.arcWeightSum,P10.delayPassedOut.numtrue,P10.delayPassedOut.anytrue,$whenCondition5,$PRE.P8.enableOut.benefitLimit,P8.enableOut.benefitLimit,$PRE.P8.enableOut.valid,P8.enableOut.valid,$PRE.P8.enableOut.benefitMax,P8.enableOut.benefitMax,$PRE.P8.enableOut.Index,P8.enableOut.Index,$PRE.P8.enableOut.endWhile,P8.enableOut.endWhile,$PRE.P8.enableOut.sumEnablingProbTAout,P8.enableOut.sumEnablingProbTAout,P8.enableOut.randNum,$PRE.P8.enableOut.randNum,P8.enableOut.state128[4],$PRE.P8.enableOut.state128[4],P8.enableOut.state128[3],$PRE.P8.enableOut.state128[3],P8.enableOut.state128[2],$PRE.P8.enableOut.state128[2],P8.enableOut.state128[1],$PRE.P8.enableOut.state128[1],$PRE.P8.enableOut.posTE,P8.enableOut.posTE,$PRE.P8.enableOut.k,P8.enableOut.k,$PRE.P8.enableOut.nTAout,P8.enableOut.nTAout,$PRE.P8.enableOut.nremTAout,P8.enableOut.nremTAout,P8.enableOut.arcWeightSum,$PRE.P8.enableOut.arcWeightSum,P8.delayPassedOut.numtrue,P8.delayPassedOut.anytrue,P8.activeConOut.anychange,$whenCondition4,$PRE.P6.enableOut.benefitLimit,P6.enableOut.benefitLimit,$PRE.P6.enableOut.valid,P6.enableOut.valid,$PRE.P6.enableOut.benefitMax,P6.enableOut.benefitMax,$PRE.P6.enableOut.Index,P6.enableOut.Index,$PRE.P6.enableOut.endWhile,P6.enableOut.endWhile,$PRE.P6.enableOut.sumEnablingProbTAout,P6.enableOut.sumEnablingProbTAout,P6.enableOut.randNum,$PRE.P6.enableOut.randNum,P6.enableOut.state128[4],$PRE.P6.enableOut.state128[4],P6.enableOut.state128[3],$PRE.P6.enableOut.state128[3],P6.enableOut.state128[2],$PRE.P6.enableOut.state128[2],P6.enableOut.state128[1],$PRE.P6.enableOut.state128[1],$PRE.P6.enableOut.posTE,P6.enableOut.posTE,$PRE.P6.enableOut.k,P6.enableOut.k,$PRE.P6.enableOut.nTAout,P6.enableOut.nTAout,$PRE.P6.enableOut.nremTAout,P6.enableOut.nremTAout,P6.enableOut.arcWeightSum,$PRE.P6.enableOut.arcWeightSum,P6.delayPassedOut.numtrue,P6.delayPassedOut.anytrue,P6.activeConOut.anychange,$whenCondition3,$PRE.P4.enableOut.benefitLimit,P4.enableOut.benefitLimit,$PRE.P4.enableOut.valid,P4.enableOut.valid,$PRE.P4.enableOut.benefitMax,P4.enableOut.benefitMax,$PRE.P4.enableOut.Index,P4.enableOut.Index,$PRE.P4.enableOut.endWhile,P4.enableOut.endWhile,$PRE.P4.enableOut.sumEnablingProbTAout,P4.enableOut.sumEnablingProbTAout,P4.enableOut.randNum,$PRE.P4.enableOut.randNum,P4.enableOut.state128[4],$PRE.P4.enableOut.state128[4],P4.enableOut.state128[3],$PRE.P4.enableOut.state128[3],P4.enableOut.state128[2],$PRE.P4.enableOut.state128[2],P4.enableOut.state128[1],$PRE.P4.enableOut.state128[1],$PRE.P4.enableOut.posTE,P4.enableOut.posTE,$PRE.P4.enableOut.k,P4.enableOut.k,$PRE.P4.enableOut.nTAout,P4.enableOut.nTAout,$PRE.P4.enableOut.nremTAout,P4.enableOut.nremTAout,P4.enableOut.arcWeightSum,$PRE.P4.enableOut.arcWeightSum,P4.delayPassedOut.numtrue,P4.delayPassedOut.anytrue,P4.activeConOut.anychange,$whenCondition2,$PRE.P2.enableOut.benefitLimit,P2.enableOut.benefitLimit,$PRE.P2.enableOut.valid,P2.enableOut.valid,$PRE.P2.enableOut.benefitMax,P2.enableOut.benefitMax,$PRE.P2.enableOut.Index,P2.enableOut.Index,$PRE.P2.enableOut.endWhile,P2.enableOut.endWhile,$PRE.P2.enableOut.sumEnablingProbTAout,P2.enableOut.sumEnablingProbTAout,P2.enableOut.randNum,$PRE.P2.enableOut.randNum,P2.enableOut.state128[4],$PRE.P2.enableOut.state128[4],P2.enableOut.state128[3],$PRE.P2.enableOut.state128[3],P2.enableOut.state128[2],$PRE.P2.enableOut.state128[2],P2.enableOut.state128[1],$PRE.P2.enableOut.state128[1],$PRE.P2.enableOut.posTE,P2.enableOut.posTE,$PRE.P2.enableOut.k,P2.enableOut.k,$PRE.P2.enableOut.nTAout,P2.enableOut.nTAout,$PRE.P2.enableOut.nremTAout,P2.enableOut.nremTAout,P2.enableOut.arcWeightSum,$PRE.P2.enableOut.arcWeightSum,P2.delayPassedOut.numtrue,P2.delayPassedOut.anytrue,P2.activeConOut.anychange,$whenCondition1,T5.firingCon,T5.outPlaces[1].disTransition,T5.outPlaces[1].enabledByInPlaces,P10.inTransition[1].disPlace,P10.inTransition[1].maxTokensint,P10.inTransition[1].tint,T5.inPlaces[1].disTransition,P9.outTransition[1].normalArc,P9.outTransition[1].testValueint,P9.outTransition[1].arcType,P9.outTransition[1].disPlace,P9.outTransition[1].minTokensint,P9.outTransition[1].tint,P10.reStart,P9.inTransition[1].disPlace,P9.inTransition[1].maxTokensint,P9.inTransition[1].tint,T6.outPlaces[5].disTransition,P9.reStart,T6.firingCon,T6.outPlaces[4].disTransition,P7.inTransition[1].disPlace,T6.outPlaces[3].disTransition,P5.inTransition[1].disPlace,T6.outPlaces[2].disTransition,P3.inTransition[1].disPlace,T6.outPlaces[1].disTransition,P1.inTransition[1].disPlace,T4.firingCon,T4.outPlaces[1].disTransition,P8.inTransition[1].disPlace,T4.inPlaces[1].disTransition,P7.outTransition[1].normalArc,P7.outTransition[1].testValueint,P7.outTransition[1].arcType,P7.outTransition[1].disPlace,T3.firingCon,T3.outPlaces[1].disTransition,T3.outPlaces[1].enabledByInPlaces,P6.inTransition[1].disPlace,T3.inPlaces[1].disTransition,P5.outTransition[1].normalArc,P5.outTransition[1].testValueint,P5.outTransition[1].arcType,P5.outTransition[1].disPlace,T2.firingCon,T2.outPlaces[1].disTransition,P4.inTransition[1].disPlace,T2.inPlaces[1].disTransition,P3.outTransition[1].normalArc,P3.outTransition[1].testValueint,P3.outTransition[1].arcType,P3.outTransition[1].disPlace,T1.firingCon,T1.outPlaces[1].disTransition,P2.inTransition[1].disPlace,T1.inPlaces[1].disTransition,P1.outTransition[1].normalArc,P1.outTransition[1].testValueint,P1.outTransition[1].arcType,P1.outTransition[1].disPlace,P8.reStart,P7.reStart,P6.reStart,P5.reStart,P4.reStart,P3.reStart,P2.reStart,P1.reStart,P9.disMarksOut.vec[1],P9.disMarksOut.numtrue,P9.disMarksOut.anytrue,P10.disMarksIn.vec[1],P10.disMarksIn.numtrue,P10.disMarksIn.anytrue,P7.enableIn.disTransition[1],P5.enableIn.disTransition[1],P3.enableIn.disTransition[1],P1.enableIn.disTransition[1],P8.enableIn.disTransition[1],P6.enableIn.disTransition[1],P4.enableIn.disTransition[1],P2.enableIn.disTransition[1],$PRE.P10.enableIn.TEin[1],$PRE.P9.enableOut.TEout[1],$PRE.P9.enableIn.TEin[1],$PRE.T6.firingTime,$PRE.T4.firingTime,$PRE.T3.firingTimeOut,$PRE.T3.firingTimeIn,$PRE.T2.firingTime,$PRE.T1.firingTime,$PRE.P8.enableIn.arcWeightSum,$PRE.P8.enableIn.TEin[1],$PRE.P7.enableIn.arcWeightSum,$PRE.P7.enableIn.TEin[1],$PRE.P7.enableOut.arcWeightSum,$PRE.P7.enableOut.TEout[1],$PRE.P6.enableIn.arcWeightSum,$PRE.P6.enableIn.TEin[1],$PRE.P5.enableIn.arcWeightSum,$PRE.P5.enableIn.TEin[1],$PRE.P5.enableOut.arcWeightSum,$PRE.P5.enableOut.TEout[1],$PRE.P4.enableIn.arcWeightSum,$PRE.P4.enableIn.TEin[1],$PRE.P3.enableIn.arcWeightSum,$PRE.P3.enableIn.TEin[1],$PRE.P3.enableOut.arcWeightSum,$PRE.P3.enableOut.TEout[1],$PRE.P2.enableIn.arcWeightSum,$PRE.P2.enableIn.TEin[1],$PRE.P1.enableIn.arcWeightSum,$PRE.P1.enableIn.TEin[1],$PRE.P1.enableOut.arcWeightSum,$PRE.P1.enableOut.TEout[1],T6.enabledByInPlaces,P1.enableOut.arcWeight[1],P2.enableIn.arcWeight[1],P3.enableOut.arcWeight[1],P4.enableIn.arcWeight[1],P5.enableOut.arcWeight[1],P6.enableIn.arcWeight[1],P7.enableOut.arcWeight[1],P8.enableIn.arcWeight[1],P1.enableIn.arcWeight[1],P3.enableIn.arcWeight[1],P5.enableIn.arcWeight[1],P7.enableIn.arcWeight[1],T6.activation.arcWeightIntOut[5],P9.delayPassedOut.vec[1],P9.feeding.vec[1],P10.delayPassedIn.vec[1],T5.activation.arcWeightIntIn[1],T5.activation.arcWeightIntOut[1],T5.activation.disPlaceOut[1],T5.activation.maxTokensInt[1],T5.activation.tIntOut[1],T5.activation.normalArc[1],T5.activation.testValueInt[1],T5.activation.arcType[1],T5.activation.disPlaceIn[1],T5.activation.minTokensInt[1],T5.activation.tIntIn[1],T6.activation.disPlaceOut[5],T6.activation.maxTokensInt[5],T6.activation.tIntOut[5],T6.activation.disPlaceOut[4],T6.activation.disPlaceOut[3],T6.activation.disPlaceOut[2],T6.activation.disPlaceOut[1],T4.activation.disPlaceOut[1],P7.enableOut.disTransition[1],T4.activation.normalArc[1],T4.activation.testValueInt[1],T4.activation.arcType[1],T4.activation.disPlaceIn[1],T3.activationOut.disPlaceOut[1],P5.enableOut.disTransition[1],T3.activationIn.normalArc[1],T3.activationIn.testValueInt[1],T3.activationIn.arcType[1],T3.activationIn.disPlaceIn[1],T2.activation.disPlaceOut[1],P3.enableOut.disTransition[1],T2.activation.normalArc[1],T2.activation.testValueInt[1],T2.activation.arcType[1],T2.activation.disPlaceIn[1],T1.activation.disPlaceOut[1],P1.enableOut.disTransition[1],T1.activation.normalArc[1],T1.activation.testValueInt[1],T1.activation.arcType[1],T1.activation.disPlaceIn[1],T5.fire_,T5.activation.NoTokens,T5.activation.weaklyOutputActiveVec[1],T5.activation.weaklyInputActiveVec[1],T5.activation.active,T5.activation.emptied[1],T5.activation.fed[1],P10.emptying.numtrue,P10.emptying.anytrue,P10.feeding.numtrue,P10.feeding.anytrue,P10.feeding.vec[1],P10.delayPassedIn.numtrue,P10.delayPassedIn.anytrue,P10.enableIn.TEin[1],P10.enableIn.TEin_[1],P10.enableIn.active[1],P10.fireIn[1],$PRE.P10.fireIn[1],P9.emptying.numtrue,P9.emptying.anytrue,P9.emptying.vec[1],P9.feeding.numtrue,P9.feeding.anytrue,P9.disMarksIn.numtrue,P9.disMarksIn.anytrue,P9.disMarksIn.vec[1],P9.delayPassedIn.numtrue,P9.delayPassedIn.anytrue,P9.delayPassedIn.vec[1],P9.delayPassedOut.numtrue,P9.delayPassedOut.anytrue,P9.enableOut.TEout[1],P9.enableOut.TEout_[1],P9.enableOut.TAout[1],P9.enableIn.TEin[1],P9.enableIn.TEin_[1],P9.enableIn.active[1],P9.enableIn.TAein[1],P9.fireOut[1],$PRE.P9.fireOut[1],P9.fireIn[1],T6.activation.active,T6.activation.maxTokensInt[4],T6.activation.maxTokensInt[3],T6.activation.maxTokensInt[2],T6.activation.maxTokensInt[1],T6.activation.arcWeightIntOut[4],T6.activation.arcWeightIntOut[3],T6.activation.arcWeightIntOut[2],T6.activation.arcWeightIntOut[1],T6.activation.tIntOut[4],T6.activation.tIntOut[3],T6.activation.tIntOut[2],T6.activation.tIntOut[1],T6.eventPassed,$PRE.T6.eventPassed,T6.firingTime,T6.active,T4.activation.active,T4.activation.maxTokensInt[1],T4.activation.minTokensInt[1],T4.activation.arcWeightIntOut[1],T4.activation.arcWeightIntIn[1],T4.activation.tIntOut[1],T4.activation.tIntIn[1],T4.firingTime,T4.outPlaces[1].enabledByInPlaces,T3.activationOut.active,T3.activationOut.maxTokensInt[1],T3.activationOut.arcWeightIntOut[1],T3.activationOut.tIntOut[1],T3.activationIn.active,T3.activationIn.minTokensInt[1],T3.activationIn.arcWeightIntIn[1],T3.activationIn.tIntIn[1],T3.prefire,T3.durationPassedOut,$PRE.T3.durationPassedOut,T3.durationPassedIn,$PRE.T3.durationPassedIn,T3.firingTimeOut,T3.firingTimeIn,T3.fire,$PRE.T3.fire,T3.activeOut,T3.activeIn,T2.activation.active,T2.activation.maxTokensInt[1],T2.activation.minTokensInt[1],T2.activation.arcWeightIntOut[1],T2.activation.arcWeightIntIn[1],T2.activation.tIntOut[1],T2.activation.tIntIn[1],T2.eventPassed,$PRE.T2.eventPassed,T2.firingTime,T2.outPlaces[1].enabledByInPlaces,T2.active,T1.activation.active,T1.activation.maxTokensInt[1],T1.activation.minTokensInt[1],T1.activation.arcWeightIntOut[1],T1.activation.arcWeightIntIn[1],T1.activation.tIntOut[1],T1.activation.tIntIn[1],T1.delayPassed,$PRE.T1.delayPassed,T1.firingTime,T1.outPlaces[1].enabledByInPlaces,T1.active,P8.enableIn.arcWeightSum,P8.enableIn.TEin[1],P8.enableIn.TEin_[1],P8.enableIn.active[1],P8.enableIn.TAein[1],P8.firingSumIn.firingSum,P8.firingSumIn.arcWeight[1],P8.firingSumIn.fire[1],P8.delayPassedIn.numtrue,P8.delayPassedIn.anytrue,P8.delayPassedIn.vec[1],P8.t,$PRE.P8.t,P7.enableIn.arcWeightSum,P7.enableIn.TEin[1],P7.enableIn.TEin_[1],P7.enableIn.active[1],P7.enableIn.TAein[1],P7.enableOut.arcWeightSum,P7.enableOut.TEout[1],P7.enableOut.TEout_[1],P7.enableOut.TAout[1],P7.firingSumOut.firingSum,P7.firingSumOut.arcWeight[1],P7.firingSumOut.fire[1],P7.firingSumIn.firingSum,P7.firingSumIn.arcWeight[1],P7.firingSumIn.fire[1],P7.delayPassedIn.numtrue,P7.delayPassedIn.anytrue,P7.delayPassedIn.vec[1],P7.delayPassedOut.numtrue,P7.delayPassedOut.anytrue,P7.delayPassedOut.vec[1],P7.activeConOut.anychange,P7.activeConOut.vec[1],P7.activeOut[1],$PRE.P7.activeOut[1],P7.t,$PRE.P7.t,P6.enableIn.arcWeightSum,P6.enableIn.TEin[1],P6.enableIn.TEin_[1],P6.enableIn.active[1],P6.enableIn.TAein[1],P6.firingSumIn.firingSum,P6.firingSumIn.arcWeight[1],P6.firingSumIn.fire[1],P6.delayPassedIn.numtrue,P6.delayPassedIn.anytrue,P6.delayPassedIn.vec[1],P6.t,$PRE.P6.t,P5.enableIn.arcWeightSum,P5.enableIn.TEin[1],P5.enableIn.TEin_[1],P5.enableIn.active[1],P5.enableIn.TAein[1],P5.enableOut.arcWeightSum,P5.enableOut.TEout[1],P5.enableOut.TEout_[1],P5.enableOut.TAout[1],P5.firingSumOut.firingSum,P5.firingSumOut.arcWeight[1],P5.firingSumOut.fire[1],P5.firingSumIn.firingSum,P5.firingSumIn.arcWeight[1],P5.firingSumIn.fire[1],P5.delayPassedIn.numtrue,P5.delayPassedIn.anytrue,P5.delayPassedIn.vec[1],P5.delayPassedOut.numtrue,P5.delayPassedOut.anytrue,P5.delayPassedOut.vec[1],P5.activeConOut.anychange,P5.activeConOut.vec[1],P5.activeOut[1],$PRE.P5.activeOut[1],P5.t,$PRE.P5.t,P4.enableIn.arcWeightSum,P4.enableIn.TEin[1],P4.enableIn.TEin_[1],P4.enableIn.active[1],P4.enableIn.TAein[1],P4.firingSumIn.firingSum,P4.firingSumIn.arcWeight[1],P4.firingSumIn.fire[1],P4.delayPassedIn.numtrue,P4.delayPassedIn.anytrue,P4.delayPassedIn.vec[1],P4.t,$PRE.P4.t,P3.enableIn.arcWeightSum,P3.enableIn.TEin[1],P3.enableIn.TEin_[1],P3.enableIn.active[1],P3.enableIn.TAein[1],P3.enableOut.arcWeightSum,P3.enableOut.TEout[1],P3.enableOut.TEout_[1],P3.enableOut.TAout[1],P3.firingSumOut.firingSum,P3.firingSumOut.arcWeight[1],P3.firingSumOut.fire[1],P3.firingSumIn.firingSum,P3.firingSumIn.arcWeight[1],P3.firingSumIn.fire[1],P3.delayPassedIn.numtrue,P3.delayPassedIn.anytrue,P3.delayPassedIn.vec[1],P3.delayPassedOut.numtrue,P3.delayPassedOut.anytrue,P3.delayPassedOut.vec[1],P3.activeConOut.anychange,P3.activeConOut.vec[1],P3.activeOut[1],$PRE.P3.activeOut[1],P3.t,$PRE.P3.t,P2.enableIn.arcWeightSum,P2.enableIn.TEin[1],P2.enableIn.TEin_[1],P2.enableIn.active[1],P2.enableIn.TAein[1],P2.firingSumIn.firingSum,P2.firingSumIn.arcWeight[1],P2.firingSumIn.fire[1],P2.delayPassedIn.numtrue,P2.delayPassedIn.anytrue,P2.delayPassedIn.vec[1],P2.t,$PRE.P2.t,P1.enableIn.arcWeightSum,P1.enableIn.TEin[1],P1.enableIn.TEin_[1],P1.enableIn.active[1],P1.enableIn.TAein[1],P1.enableOut.arcWeightSum,P1.enableOut.TEout[1],P1.enableOut.TEout_[1],P1.enableOut.TAout[1],P1.firingSumOut.firingSum,P1.firingSumOut.arcWeight[1],P1.firingSumOut.fire[1],P1.firingSumIn.firingSum,P1.firingSumIn.arcWeight[1],P1.firingSumIn.fire[1],P1.delayPassedIn.numtrue,P1.delayPassedIn.anytrue,P1.delayPassedIn.vec[1],P1.delayPassedOut.numtrue,P1.delayPassedOut.anytrue,P1.delayPassedOut.vec[1],P1.activeConOut.anychange,P1.activeConOut.vec[1],P1.activeOut[1],$PRE.P1.activeOut[1],P1.t,$PRE.P1.t,$whenCondition22,$whenCondition21,$whenCondition20,$whenCondition17,$whenCondition16,$whenCondition15,$whenCondition14,$whenCondition13,$whenCondition12,$whenCondition11,$whenCondition10,$whenCondition9,$whenCondition8,$whenCondition7,$whenCondition6,$whenCondition23,$whenCondition24,$whenCondition25,$whenCondition26,$whenCondition27,$whenCondition28,$whenCondition29,$whenCondition30,$whenCondition31,$whenCondition32,$whenCondition33,$whenCondition34,P8.inTransition[1].emptied,P7.outTransition[1].fed,P7.inTransition[1].emptied,P6.inTransition[1].emptied,P5.outTransition[1].fed,P5.inTransition[1].emptied,P4.inTransition[1].emptied,P3.outTransition[1].fed,P3.inTransition[1].emptied,P2.inTransition[1].emptied,P1.outTransition[1].fed,P1.inTransition[1].emptied)
 * Number of discrete states: 0 ()
 * Number of clocked states: 0 ()
 * Top-level inputs: 0
Notification: Strong component statistics for initialization (1358):
 * Single equations (assignments): 1250
 * Array equations: 6
 * Algorithm blocks: 101
 * Record equations: 0
 * When equations: 0
 * If-equations: 0
 * Equation systems (not torn): 0
 * Torn equation systems: 1
 * Mixed (continuous/discrete) equation systems: 0
Notification: Torn system details for strict tearing set:
 * Linear torn systems (#iteration vars, #inner vars, density): 0 systems
 * Non-linear torn systems (#iteration vars, #inner vars): 1 system
   {(1,6)}
Notification: Performance of prepare postOptimizeDAE: time 0.007524/0.9146, allocations: 6.905 MB / 0.7238 GB, free: 111.1 MB / 474.7 MB
Notification: Performance of postOpt lateInlineFunction (simulation): time 0.001663/0.9163, allocations: 0.728 MB / 0.7245 GB, free: 110.6 MB / 474.7 MB
Notification: Performance of postOpt wrapFunctionCalls (simulation): time 0.03274/0.949, allocations: 23.87 MB / 0.7479 GB, free: 86.32 MB / 474.7 MB
Notification: Performance of postOpt inlineArrayEqn (simulation): time 7.324e-05/0.9491, allocations: 48.92 kB / 0.7479 GB, free: 86.27 MB / 474.7 MB
Notification: Performance of postOpt constantLinearSystem (simulation): time 1.415e-05/0.9491, allocations: 0 / 0.7479 GB, free: 86.27 MB / 474.7 MB
Notification: Performance of postOpt simplifysemiLinear (simulation): time 3.303e-05/0.9492, allocations: 27.86 kB / 0.7479 GB, free: 86.24 MB / 474.7 MB
Notification: Performance of postOpt removeSimpleEquations (simulation): time 0.04538/0.9946, allocations: 33.49 MB / 0.7806 GB, free: 52.46 MB / 474.7 MB
Notification: Performance of postOpt simplifyComplexFunction (simulation): time 0.03177/1.026, allocations: 23.25 MB / 0.8033 GB, free: 28.76 MB / 474.7 MB
Notification: Performance of postOpt solveSimpleEquations (simulation): time 0.001284/1.028, allocations: 299.4 kB / 0.8036 GB, free: 28.46 MB / 474.7 MB
Notification: Performance of postOpt tearingSystem (simulation): time 0.0003469/1.028, allocations: 128.8 kB / 0.8037 GB, free: 28.34 MB / 474.7 MB
Notification: Performance of postOpt inputDerivativesUsed (simulation): time 0.0009989/1.029, allocations: 448.4 kB / 0.8042 GB, free: 27.9 MB / 474.7 MB
Notification: Performance of postOpt calculateStrongComponentJacobians (simulation): time 0.000504/1.03, allocations: 0.7035 MB / 0.8049 GB, free: 27.18 MB / 474.7 MB
Notification: Performance of postOpt calculateStateSetsJacobians (simulation): time 2.635e-06/1.03, allocations: 8.062 kB / 0.8049 GB, free: 27.17 MB / 474.7 MB
Notification: Performance of postOpt symbolicJacobian (simulation): time 0.05043/1.08, allocations: 35.16 MB / 0.8392 GB, free: 7.664 MB / 490.7 MB
Notification: Performance of postOpt removeConstants (simulation): time 0.0006232/1.081, allocations: 0.5642 MB / 0.8398 GB, free: 7.105 MB / 490.7 MB
Notification: Performance of postOpt simplifyTimeIndepFuncCalls (simulation): time 0.002092/1.083, allocations: 0.7692 MB / 0.8405 GB, free: 6.336 MB / 490.7 MB
Notification: Performance of postOpt simplifyAllExpressions (simulation): time 0.005565/1.088, allocations: 0.7289 MB / 0.8412 GB, free: 5.613 MB / 490.7 MB
Notification: Performance of postOpt findZeroCrossings (simulation): time 0.003462/1.092, allocations: 2.077 MB / 0.8432 GB, free: 3.543 MB / 490.7 MB
Notification: Performance of postOpt collapseArrayExpressions (simulation): time 0.001098/1.093, allocations: 0.5107 MB / 0.8437 GB, free: 3.039 MB / 490.7 MB
Notification: Performance of sorting global known variables: time 0.002154/1.095, allocations: 1.588 MB / 0.8453 GB, free: 1.445 MB / 490.7 MB
Notification: Performance of sort global known variables: time 2.3e-07/1.095, allocations: 0 / 0.8453 GB, free: 1.445 MB / 490.7 MB
Notification: Performance of remove unused functions: time 0.2298/1.325, allocations: 2.669 MB / 0.8479 GB, free: 159.3 MB / 490.7 MB
Notification: Model statistics after passing the back-end for simulation:
 * Number of independent subsystems: 6
 * Number of states: 2 (P9.t_,P10.t_)
 * Number of discrete variables: 692 ($whenCondition1,P2.activeConOut.anychange,P2.delayPassedOut.anytrue,P2.delayPassedOut.numtrue,P2.enableOut.state128[1],P2.enableOut.state128[2],P2.enableOut.state128[3],P2.enableOut.state128[4],P2.enableOut.arcWeightSum,P2.enableOut.nremTAout,P2.enableOut.nTAout,P2.enableOut.k,P2.enableOut.posTE,P2.enableOut.randNum,P2.enableOut.sumEnablingProbTAout,P2.enableOut.endWhile,P2.enableOut.Index,P2.enableOut.benefitMax,P2.enableOut.valid,P2.enableOut.benefitLimit,$whenCondition2,P4.activeConOut.anychange,P4.delayPassedOut.anytrue,P4.delayPassedOut.numtrue,P4.enableOut.state128[1],P4.enableOut.state128[2],P4.enableOut.state128[3],P4.enableOut.state128[4],P4.enableOut.arcWeightSum,P4.enableOut.nremTAout,P4.enableOut.nTAout,P4.enableOut.k,P4.enableOut.posTE,P4.enableOut.randNum,P4.enableOut.sumEnablingProbTAout,P4.enableOut.endWhile,P4.enableOut.Index,P4.enableOut.benefitMax,P4.enableOut.valid,P4.enableOut.benefitLimit,$whenCondition3,P6.activeConOut.anychange,P6.delayPassedOut.anytrue,P6.delayPassedOut.numtrue,P6.enableOut.state128[1],P6.enableOut.state128[2],P6.enableOut.state128[3],P6.enableOut.state128[4],P6.enableOut.arcWeightSum,P6.enableOut.nremTAout,P6.enableOut.nTAout,P6.enableOut.k,P6.enableOut.posTE,P6.enableOut.randNum,P6.enableOut.sumEnablingProbTAout,P6.enableOut.endWhile,P6.enableOut.Index,P6.enableOut.benefitMax,P6.enableOut.valid,P6.enableOut.benefitLimit,$whenCondition4,P8.activeConOut.anychange,P8.delayPassedOut.anytrue,P8.delayPassedOut.numtrue,P8.enableOut.state128[1],P8.enableOut.state128[2],P8.enableOut.state128[3],P8.enableOut.state128[4],P8.enableOut.arcWeightSum,P8.enableOut.nremTAout,P8.enableOut.nTAout,P8.enableOut.k,P8.enableOut.posTE,P8.enableOut.randNum,P8.enableOut.sumEnablingProbTAout,P8.enableOut.endWhile,P8.enableOut.Index,P8.enableOut.benefitMax,P8.enableOut.valid,P8.enableOut.benefitLimit,$whenCondition5,P10.enableOut.state128[1],P10.enableOut.state128[2],P10.enableOut.state128[3],P10.enableOut.state128[4],P10.enableOut.arcWeightSum,P10.enableOut.nremTAout,P10.enableOut.nTAout,P10.enableOut.k,P10.enableOut.posTE,P10.enableOut.randNum,P10.enableOut.sumEnablingProbTAout,P10.enableOut.endWhile,P10.enableOut.Index,P10.delayPassedOut.anytrue,P10.delayPassedOut.numtrue,P9.fireIn[1],T1.active,T2.active,T3.activeIn,T3.activeOut,T6.active,P10.disMarksInOut,$cse2[1],$whenCondition60,$whenCondition59,$whenCondition57,$whenCondition56,$whenCondition58,$whenCondition54,$whenCondition53,$whenCondition55,$whenCondition51,$whenCondition50,$whenCondition52,$whenCondition48,$whenCondition47,$whenCondition49,$whenCondition45,$whenCondition44,$whenCondition46,$whenCondition42,$whenCondition41,$whenCondition43,$whenCondition39,$whenCondition38,$whenCondition40,$whenCondition36,$whenCondition35,$whenCondition37,$whenCondition34,$whenCondition33,$whenCondition32,$whenCondition31,$whenCondition30,$whenCondition29,$whenCondition28,$whenCondition27,$whenCondition26,$whenCondition25,$whenCondition24,$whenCondition23,$whenCondition6,$whenCondition7,$whenCondition8,$whenCondition9,$whenCondition10,$whenCondition11,$whenCondition12,$whenCondition13,$whenCondition14,$whenCondition15,$whenCondition16,$whenCondition17,$whenCondition18,$whenCondition19,$whenCondition20,$whenCondition21,$whenCondition22,P1.t,P1.outTransition[1].tokenInOut,P1.tokeninout,P1.activeOut[1],P1.activeConOut.vec[1],P1.activeConOut.anychange,P1.delayPassedOut.vec[1],P1.delayPassedOut.anytrue,P1.delayPassedOut.numtrue,P1.delayPassedIn.vec[1],P1.delayPassedIn.anytrue,P1.delayPassedIn.numtrue,P1.firingSumIn.fire[1],P1.firingSumIn.arcWeight[1],P1.firingSumIn.firingSum,P1.firingSumOut.fire[1],P1.firingSumOut.arcWeight[1],P1.firingSumOut.firingSum,P1.enableOut.TAout[1],P1.enableOut.TEout_[1],P1.enableOut.state128[1],P1.enableOut.state128[2],P1.enableOut.state128[3],P1.enableOut.state128[4],P1.enableOut.TEout[1],P1.enableOut.remTAout[1],P1.enableOut.cumEnablingProb[1],P1.enableOut.arcWeightSum,P1.enableOut.nremTAout,P1.enableOut.nTAout,P1.enableOut.k,P1.enableOut.posTE,P1.enableOut.randNum,P1.enableOut.sumEnablingProbTAout,P1.enableOut.endWhile,P1.enableOut.Index,P1.enableOut.benefitMax,P1.enableOut.valid,P1.enableOut.benefitLimit,P1.enableIn.TAein[1],P1.enableIn.active[1],P1.enableIn.TEin_[1],P1.enableIn.state128[1],P1.enableIn.state128[2],P1.enableIn.state128[3],P1.enableIn.state128[4],P1.enableIn.TEin[1],P1.enableIn.remTAin[1],P1.enableIn.cumEnablingProb[1],P1.enableIn.arcWeightSum,P1.enableIn.nremTAin,P1.enableIn.nTAin,P1.enableIn.k,P1.enableIn.posTE,P1.enableIn.randNum,P1.enableIn.sumEnablingProbTAin,P1.enableIn.endWhile,P1.enableIn.Index,P1.enableIn.benefitMax,P1.enableIn.valid,P1.enableIn.benefitLimit,P2.t,P2.tokeninout,P2.delayPassedIn.vec[1],P2.delayPassedIn.anytrue,P2.delayPassedIn.numtrue,P2.firingSumIn.fire[1],P2.firingSumIn.arcWeight[1],P2.firingSumIn.firingSum,P2.firingSumOut.firingSum,P2.enableIn.TAein[1],P2.enableIn.active[1],P2.enableIn.TEin_[1],P2.enableIn.state128[1],P2.enableIn.state128[2],P2.enableIn.state128[3],P2.enableIn.state128[4],P2.enableIn.TEin[1],P2.enableIn.remTAin[1],P2.enableIn.cumEnablingProb[1],P2.enableIn.arcWeightSum,P2.enableIn.nremTAin,P2.enableIn.nTAin,P2.enableIn.k,P2.enableIn.posTE,P2.enableIn.randNum,P2.enableIn.sumEnablingProbTAin,P2.enableIn.endWhile,P2.enableIn.Index,P2.enableIn.benefitMax,P2.enableIn.valid,P2.enableIn.benefitLimit,P3.t,P3.outTransition[1].tokenInOut,P3.tokeninout,P3.activeOut[1],P3.activeConOut.vec[1],P3.activeConOut.anychange,P3.delayPassedOut.vec[1],P3.delayPassedOut.anytrue,P3.delayPassedOut.numtrue,P3.delayPassedIn.vec[1],P3.delayPassedIn.anytrue,P3.delayPassedIn.numtrue,P3.firingSumIn.fire[1],P3.firingSumIn.arcWeight[1],P3.firingSumIn.firingSum,P3.firingSumOut.fire[1],P3.firingSumOut.arcWeight[1],P3.firingSumOut.firingSum,P3.enableOut.TAout[1],P3.enableOut.TEout_[1],P3.enableOut.state128[1],P3.enableOut.state128[2],P3.enableOut.state128[3],P3.enableOut.state128[4],P3.enableOut.TEout[1],P3.enableOut.remTAout[1],P3.enableOut.cumEnablingProb[1],P3.enableOut.arcWeightSum,P3.enableOut.nremTAout,P3.enableOut.nTAout,P3.enableOut.k,P3.enableOut.posTE,P3.enableOut.randNum,P3.enableOut.sumEnablingProbTAout,P3.enableOut.endWhile,P3.enableOut.Index,P3.enableOut.benefitMax,P3.enableOut.valid,P3.enableOut.benefitLimit,P3.enableIn.TAein[1],P3.enableIn.active[1],P3.enableIn.TEin_[1],P3.enableIn.state128[1],P3.enableIn.state128[2],P3.enableIn.state128[3],P3.enableIn.state128[4],P3.enableIn.TEin[1],P3.enableIn.remTAin[1],P3.enableIn.cumEnablingProb[1],P3.enableIn.arcWeightSum,P3.enableIn.nremTAin,P3.enableIn.nTAin,P3.enableIn.k,P3.enableIn.posTE,P3.enableIn.randNum,P3.enableIn.sumEnablingProbTAin,P3.enableIn.endWhile,P3.enableIn.Index,P3.enableIn.benefitMax,P3.enableIn.valid,P3.enableIn.benefitLimit,P4.t,P4.tokeninout,P4.delayPassedIn.vec[1],P4.delayPassedIn.anytrue,P4.delayPassedIn.numtrue,P4.firingSumIn.fire[1],P4.firingSumIn.arcWeight[1],P4.firingSumIn.firingSum,P4.firingSumOut.firingSum,P4.enableIn.TAein[1],P4.enableIn.active[1],P4.enableIn.TEin_[1],P4.enableIn.state128[1],P4.enableIn.state128[2],P4.enableIn.state128[3],P4.enableIn.state128[4],P4.enableIn.TEin[1],P4.enableIn.remTAin[1],P4.enableIn.cumEnablingProb[1],P4.enableIn.arcWeightSum,P4.enableIn.nremTAin,P4.enableIn.nTAin,P4.enableIn.k,P4.enableIn.posTE,P4.enableIn.randNum,P4.enableIn.sumEnablingProbTAin,P4.enableIn.endWhile,P4.enableIn.Index,P4.enableIn.benefitMax,P4.enableIn.valid,P4.enableIn.benefitLimit,P5.t,P5.outTransition[1].tokenInOut,P5.tokeninout,P5.activeOut[1],P5.activeConOut.vec[1],P5.activeConOut.anychange,P5.delayPassedOut.vec[1],P5.delayPassedOut.anytrue,P5.delayPassedOut.numtrue,P5.delayPassedIn.vec[1],P5.delayPassedIn.anytrue,P5.delayPassedIn.numtrue,P5.firingSumIn.fire[1],P5.firingSumIn.arcWeight[1],P5.firingSumIn.firingSum,P5.firingSumOut.fire[1],P5.firingSumOut.arcWeight[1],P5.firingSumOut.firingSum,P5.enableOut.TAout[1],P5.enableOut.TEout_[1],P5.enableOut.state128[1],P5.enableOut.state128[2],P5.enableOut.state128[3],P5.enableOut.state128[4],P5.enableOut.TEout[1],P5.enableOut.remTAout[1],P5.enableOut.cumEnablingProb[1],P5.enableOut.arcWeightSum,P5.enableOut.nremTAout,P5.enableOut.nTAout,P5.enableOut.k,P5.enableOut.posTE,P5.enableOut.randNum,P5.enableOut.sumEnablingProbTAout,P5.enableOut.endWhile,P5.enableOut.Index,P5.enableOut.benefitMax,P5.enableOut.valid,P5.enableOut.benefitLimit,P5.enableIn.TAein[1],P5.enableIn.active[1],P5.enableIn.TEin_[1],P5.enableIn.state128[1],P5.enableIn.state128[2],P5.enableIn.state128[3],P5.enableIn.state128[4],P5.enableIn.TEin[1],P5.enableIn.remTAin[1],P5.enableIn.cumEnablingProb[1],P5.enableIn.arcWeightSum,P5.enableIn.nremTAin,P5.enableIn.nTAin,P5.enableIn.k,P5.enableIn.posTE,P5.enableIn.randNum,P5.enableIn.sumEnablingProbTAin,P5.enableIn.endWhile,P5.enableIn.Index,P5.enableIn.benefitMax,P5.enableIn.valid,P5.enableIn.benefitLimit,P6.t,P6.tokeninout,P6.delayPassedIn.vec[1],P6.delayPassedIn.anytrue,P6.delayPassedIn.numtrue,P6.firingSumIn.fire[1],P6.firingSumIn.arcWeight[1],P6.firingSumIn.firingSum,P6.firingSumOut.firingSum,P6.enableIn.TAein[1],P6.enableIn.active[1],P6.enableIn.TEin_[1],P6.enableIn.state128[1],P6.enableIn.state128[2],P6.enableIn.state128[3],P6.enableIn.state128[4],P6.enableIn.TEin[1],P6.enableIn.remTAin[1],P6.enableIn.cumEnablingProb[1],P6.enableIn.arcWeightSum,P6.enableIn.nremTAin,P6.enableIn.nTAin,P6.enableIn.k,P6.enableIn.posTE,P6.enableIn.randNum,P6.enableIn.sumEnablingProbTAin,P6.enableIn.endWhile,P6.enableIn.Index,P6.enableIn.benefitMax,P6.enableIn.valid,P6.enableIn.benefitLimit,P7.t,P7.outTransition[1].tokenInOut,P7.tokeninout,P7.activeOut[1],P7.activeConOut.vec[1],P7.activeConOut.anychange,P7.delayPassedOut.vec[1],P7.delayPassedOut.anytrue,P7.delayPassedOut.numtrue,P7.delayPassedIn.vec[1],P7.delayPassedIn.anytrue,P7.delayPassedIn.numtrue,P7.firingSumIn.fire[1],P7.firingSumIn.arcWeight[1],P7.firingSumIn.firingSum,P7.firingSumOut.fire[1],P7.firingSumOut.arcWeight[1],P7.firingSumOut.firingSum,P7.enableOut.TAout[1],P7.enableOut.TEout_[1],P7.enableOut.state128[1],P7.enableOut.state128[2],P7.enableOut.state128[3],P7.enableOut.state128[4],P7.enableOut.TEout[1],P7.enableOut.remTAout[1],P7.enableOut.cumEnablingProb[1],P7.enableOut.arcWeightSum,P7.enableOut.nremTAout,P7.enableOut.nTAout,P7.enableOut.k,P7.enableOut.posTE,P7.enableOut.randNum,P7.enableOut.sumEnablingProbTAout,P7.enableOut.endWhile,P7.enableOut.Index,P7.enableOut.benefitMax,P7.enableOut.valid,P7.enableOut.benefitLimit,P7.enableIn.TAein[1],P7.enableIn.active[1],P7.enableIn.TEin_[1],P7.enableIn.state128[1],P7.enableIn.state128[2],P7.enableIn.state128[3],P7.enableIn.state128[4],P7.enableIn.TEin[1],P7.enableIn.remTAin[1],P7.enableIn.cumEnablingProb[1],P7.enableIn.arcWeightSum,P7.enableIn.nremTAin,P7.enableIn.nTAin,P7.enableIn.k,P7.enableIn.posTE,P7.enableIn.randNum,P7.enableIn.sumEnablingProbTAin,P7.enableIn.endWhile,P7.enableIn.Index,P7.enableIn.benefitMax,P7.enableIn.valid,P7.enableIn.benefitLimit,P8.t,P8.tokeninout,P8.delayPassedIn.vec[1],P8.delayPassedIn.anytrue,P8.delayPassedIn.numtrue,P8.firingSumIn.fire[1],P8.firingSumIn.arcWeight[1],P8.firingSumIn.firingSum,P8.firingSumOut.firingSum,P8.enableIn.TAein[1],P8.enableIn.active[1],P8.enableIn.TEin_[1],P8.enableIn.state128[1],P8.enableIn.state128[2],P8.enableIn.state128[3],P8.enableIn.state128[4],P8.enableIn.TEin[1],P8.enableIn.remTAin[1],P8.enableIn.cumEnablingProb[1],P8.enableIn.arcWeightSum,P8.enableIn.nremTAin,P8.enableIn.nTAin,P8.enableIn.k,P8.enableIn.posTE,P8.enableIn.randNum,P8.enableIn.sumEnablingProbTAin,P8.enableIn.endWhile,P8.enableIn.Index,P8.enableIn.benefitMax,P8.enableIn.valid,P8.enableIn.benefitLimit,T1.outPlaces[1].enabledByInPlaces,T1.firingTime,T1.fireTime,T1.delayPassed,T1.ani,T1.activation.tIntIn[1],T1.activation.tIntOut[1],T1.activation.arcWeightIntIn[1],T1.activation.arcWeightIntOut[1],T1.activation.minTokensInt[1],T1.activation.maxTokensInt[1],T1.activation.active,T2.outPlaces[1].enabledByInPlaces,T2.firingTime,T2.fireTime,T2.eventPassed,T2.ani,T2.eventIndex,T2.activation.tIntIn[1],T2.activation.tIntOut[1],T2.activation.arcWeightIntIn[1],T2.activation.arcWeightIntOut[1],T2.activation.minTokensInt[1],T2.activation.maxTokensInt[1],T2.activation.active,T3.fire,T3.firingTimeIn,T3.firingTimeOut,T3.fireTime,T3.durationPassedIn,T3.durationPassedOut,T3.ani,T3.prefire,T3.activationIn.tIntIn[1],T3.activationIn.arcWeightIntIn[1],T3.activationIn.minTokensInt[1],T3.activationIn.active,T3.activationOut.tIntOut[1],T3.activationOut.arcWeightIntOut[1],T3.activationOut.maxTokensInt[1],T3.activationOut.active,T4.outPlaces[1].enabledByInPlaces,T4.firingTime,T4.fireTime,T4.ani,T4.activation.tIntIn[1],T4.activation.tIntOut[1],T4.activation.arcWeightIntIn[1],T4.activation.arcWeightIntOut[1],T4.activation.minTokensInt[1],T4.activation.maxTokensInt[1],T4.activation.active,T6.firingTime,T6.fireTime,T6.eventPassed,T6.ani,T6.eventIndex,T6.activation.tIntOut[1],T6.activation.tIntOut[2],T6.activation.tIntOut[3],T6.activation.tIntOut[4],T6.activation.arcWeightIntOut[1],T6.activation.arcWeightIntOut[2],T6.activation.arcWeightIntOut[3],T6.activation.arcWeightIntOut[4],T6.activation.maxTokensInt[1],T6.activation.maxTokensInt[2],T6.activation.maxTokensInt[3],T6.activation.maxTokensInt[4],T6.activation.active,P9.outTransition[1].tokenInOut,P9.disMarksInOut,P9.fireOut[1],P9.enableIn.TAein[1],P9.enableIn.active[1],P9.enableIn.TEin_[1],P9.enableIn.state128[1],P9.enableIn.state128[2],P9.enableIn.state128[3],P9.enableIn.state128[4],P9.enableIn.TEin[1],P9.enableIn.disTAin[1],P9.enableIn.remTAin[1],P9.enableIn.cumEnablingProb[1],P9.enableIn.arcWeightSum,P9.enableIn.nremTAin,P9.enableIn.nTAin,P9.enableIn.k,P9.enableIn.posTE,P9.enableIn.randNum,P9.enableIn.sumEnablingProbTAin,P9.enableIn.endWhile,P9.enableIn.Index,P9.enableOut.TAout[1],P9.enableOut.TEout_[1],P9.enableOut.state128[1],P9.enableOut.state128[2],P9.enableOut.state128[3],P9.enableOut.state128[4],P9.enableOut.TEout[1],P9.enableOut.disTAout[1],P9.enableOut.remTAout[1],P9.enableOut.cumEnablingProb[1],P9.enableOut.arcWeightSum,P9.enableOut.nremTAout,P9.enableOut.nTAout,P9.enableOut.k,P9.enableOut.posTE,P9.enableOut.randNum,P9.enableOut.sumEnablingProbTAout,P9.enableOut.endWhile,P9.enableOut.Index,P9.delayPassedOut.anytrue,P9.delayPassedOut.numtrue,P9.delayPassedIn.vec[1],P9.delayPassedIn.anytrue,P9.delayPassedIn.numtrue,P9.disMarksOut.anytrue,P9.disMarksOut.numtrue,P9.disMarksIn.vec[1],P9.disMarksIn.anytrue,P9.disMarksIn.numtrue,P9.feeding.anytrue,P9.feeding.numtrue,P9.emptying.vec[1],P9.emptying.anytrue,P9.emptying.numtrue,P10.fireIn[1],P10.enableIn.active[1],P10.enableIn.TEin_[1],P10.enableIn.state128[1],P10.enableIn.state128[2],P10.enableIn.state128[3],P10.enableIn.state128[4],P10.enableIn.TEin[1],P10.enableIn.disTAin[1],P10.enableIn.remTAin[1],P10.enableIn.cumEnablingProb[1],P10.enableIn.arcWeightSum,P10.enableIn.nremTAin,P10.enableIn.nTAin,P10.enableIn.k,P10.enableIn.posTE,P10.enableIn.randNum,P10.enableIn.sumEnablingProbTAin,P10.enableIn.endWhile,P10.enableIn.Index,P10.delayPassedIn.anytrue,P10.delayPassedIn.numtrue,P10.disMarksOut.anytrue,P10.disMarksOut.numtrue,P10.disMarksIn.anytrue,P10.disMarksIn.numtrue,P10.feeding.vec[1],P10.feeding.anytrue,P10.feeding.numtrue,P10.emptying.anytrue,P10.emptying.numtrue,T5.activation.fed[1],T5.activation.emptied[1],T5.activation.active,T5.activation.weaklyInputActiveVec[1],T5.activation.weaklyOutputActiveVec[1],T5.activation.NoTokens,T5.fire_)
 * Number of discrete states: 516 (P1.firingSumOut.firingSum,P1.firingSumIn.firingSum,P2.firingSumOut.firingSum,P2.firingSumIn.firingSum,P3.firingSumOut.firingSum,P3.firingSumIn.firingSum,P4.firingSumOut.firingSum,P4.firingSumIn.firingSum,P5.firingSumOut.firingSum,P5.firingSumIn.firingSum,P6.firingSumOut.firingSum,P6.firingSumIn.firingSum,P7.firingSumOut.firingSum,P7.firingSumIn.firingSum,P8.firingSumOut.firingSum,P8.firingSumIn.firingSum,P9.disMarksInOut,P7.tokeninout,P5.tokeninout,P3.tokeninout,P1.tokeninout,P10.fireIn[1],P10.disMarksOut.anytrue,P10.disMarksIn.anytrue,P9.fireOut[1],P9.disMarksOut.anytrue,P9.disMarksIn.anytrue,T3.fire,P8.t,P7.t,P7.activeOut[1],P6.t,P5.t,P5.activeOut[1],P4.t,P3.t,P3.activeOut[1],P2.t,P1.t,P1.activeOut[1],P10.emptying.numtrue,P10.emptying.anytrue,P10.feeding.numtrue,P10.feeding.anytrue,P10.disMarksIn.numtrue,P10.disMarksOut.numtrue,P10.delayPassedIn.numtrue,P10.delayPassedIn.anytrue,P9.emptying.numtrue,P9.emptying.anytrue,P9.feeding.numtrue,P9.feeding.anytrue,T5.activation.weaklyOutputActiveVec[1],T5.activation.weaklyInputActiveVec[1],T5.activation.active,T5.activation.NoTokens,P10.enableIn.TEin_[1],P10.enableIn.posTE,P10.enableIn.k,P10.enableIn.endWhile,P10.enableIn.state128[4],P10.enableIn.state128[3],P10.enableIn.state128[2],P10.enableIn.state128[1],P10.enableIn.randNum,P10.enableIn.cumEnablingProb[1],P10.enableIn.sumEnablingProbTAin,P10.enableIn.nTAin,P10.enableIn.nremTAin,P10.enableIn.remTAin[1],P10.enableIn.Index,P10.enableIn.arcWeightSum,P10.enableIn.disTAin[1],$whenCondition22,P10.enableIn.TEin[1],P9.disMarksOut.numtrue,P9.delayPassedOut.numtrue,P9.delayPassedOut.anytrue,P9.enableOut.TEout_[1],P9.enableOut.posTE,P9.enableOut.k,P9.enableOut.endWhile,P9.enableOut.state128[4],P9.enableOut.state128[3],P9.enableOut.state128[2],P9.enableOut.state128[1],P9.enableOut.randNum,P9.enableOut.cumEnablingProb[1],P9.enableOut.sumEnablingProbTAout,P9.enableOut.nTAout,P9.enableOut.nremTAout,P9.enableOut.remTAout[1],P9.enableOut.Index,P9.enableOut.arcWeightSum,P9.enableOut.disTAout[1],$whenCondition21,P9.enableOut.TEout[1],T6.eventIndex,$whenCondition19,T6.activation.active,T6.eventPassed,P9.delayPassedIn.numtrue,P9.delayPassedIn.anytrue,P9.enableIn.TEin_[1],P9.enableIn.posTE,P9.enableIn.k,P9.enableIn.endWhile,P9.enableIn.state128[4],P9.enableIn.state128[3],P9.enableIn.state128[2],P9.enableIn.state128[1],P9.enableIn.randNum,P9.enableIn.cumEnablingProb[1],P9.enableIn.sumEnablingProbTAin,P9.enableIn.nTAin,P9.enableIn.nremTAin,P9.enableIn.remTAin[1],P9.enableIn.Index,P9.enableIn.arcWeightSum,P9.enableIn.disTAin[1],$whenCondition20,P9.enableIn.TEin[1],T4.activation.active,T3.activationOut.active,T3.durationPassedOut,T3.activationIn.active,T3.durationPassedIn,T2.eventIndex,$whenCondition18,T2.activation.active,T2.eventPassed,T1.activation.active,T1.delayPassed,P8.delayPassedIn.numtrue,P8.delayPassedIn.anytrue,P7.delayPassedIn.numtrue,P7.delayPassedIn.anytrue,P7.enableIn.TEin_[1],P7.enableIn.valid,P7.enableIn.benefitLimit,P7.enableIn.benefitMax,P7.enableIn.posTE,P7.enableIn.k,P7.enableIn.endWhile,P7.enableIn.state128[4],P7.enableIn.state128[3],P7.enableIn.state128[2],P7.enableIn.state128[1],P7.enableIn.randNum,P7.enableIn.cumEnablingProb[1],P7.enableIn.sumEnablingProbTAin,P7.enableIn.nTAin,P7.enableIn.nremTAin,P7.enableIn.remTAin[1],P7.enableIn.Index,$whenCondition16,P7.enableIn.arcWeightSum,P7.enableIn.TEin[1],P7.delayPassedOut.numtrue,P7.delayPassedOut.anytrue,P7.activeConOut.anychange,i,P7.activeConOut.vec[i],P7.enableOut.TEout_[1],P7.enableOut.valid,P7.enableOut.benefitLimit,P7.enableOut.benefitMax,P7.enableOut.posTE,P7.enableOut.k,P7.enableOut.endWhile,P7.enableOut.state128[4],P7.enableOut.state128[3],P7.enableOut.state128[2],P7.enableOut.state128[1],P7.enableOut.randNum,P7.enableOut.cumEnablingProb[1],P7.enableOut.sumEnablingProbTAout,P7.enableOut.nTAout,P7.enableOut.nremTAout,P7.enableOut.remTAout[1],P7.enableOut.Index,$whenCondition15,P7.enableOut.arcWeightSum,P7.enableOut.TEout[1],P8.enableIn.TEin_[1],P8.enableIn.valid,P8.enableIn.benefitLimit,P8.enableIn.benefitMax,P8.enableIn.posTE,P8.enableIn.k,P8.enableIn.endWhile,P8.enableIn.state128[4],P8.enableIn.state128[3],P8.enableIn.state128[2],P8.enableIn.state128[1],P8.enableIn.randNum,P8.enableIn.cumEnablingProb[1],P8.enableIn.sumEnablingProbTAin,P8.enableIn.nTAin,P8.enableIn.nremTAin,P8.enableIn.remTAin[1],P8.enableIn.Index,$whenCondition17,P8.enableIn.arcWeightSum,P8.enableIn.TEin[1],P6.delayPassedIn.numtrue,P6.delayPassedIn.anytrue,P6.enableIn.TEin_[1],P6.enableIn.valid,P6.enableIn.benefitLimit,P6.enableIn.benefitMax,P6.enableIn.posTE,P6.enableIn.k,P6.enableIn.endWhile,P6.enableIn.state128[4],P6.enableIn.state128[3],P6.enableIn.state128[2],P6.enableIn.state128[1],P6.enableIn.randNum,P6.enableIn.cumEnablingProb[1],P6.enableIn.sumEnablingProbTAin,P6.enableIn.nTAin,P6.enableIn.nremTAin,P6.enableIn.remTAin[1],P6.enableIn.Index,$whenCondition14,P6.enableIn.arcWeightSum,P6.enableIn.TEin[1],P5.delayPassedIn.numtrue,P5.delayPassedIn.anytrue,P5.enableIn.TEin_[1],P5.enableIn.valid,P5.enableIn.benefitLimit,P5.enableIn.benefitMax,P5.enableIn.posTE,P5.enableIn.k,P5.enableIn.endWhile,P5.enableIn.state128[4],P5.enableIn.state128[3],P5.enableIn.state128[2],P5.enableIn.state128[1],P5.enableIn.randNum,P5.enableIn.cumEnablingProb[1],P5.enableIn.sumEnablingProbTAin,P5.enableIn.nTAin,P5.enableIn.nremTAin,P5.enableIn.remTAin[1],P5.enableIn.Index,$whenCondition13,P5.enableIn.arcWeightSum,P5.enableIn.TEin[1],P5.delayPassedOut.numtrue,P5.delayPassedOut.anytrue,P5.activeConOut.anychange,P5.activeConOut.vec[i],P5.enableOut.TEout_[1],P5.enableOut.valid,P5.enableOut.benefitLimit,P5.enableOut.benefitMax,P5.enableOut.posTE,P5.enableOut.k,P5.enableOut.endWhile,P5.enableOut.state128[4],P5.enableOut.state128[3],P5.enableOut.state128[2],P5.enableOut.state128[1],P5.enableOut.randNum,P5.enableOut.cumEnablingProb[1],P5.enableOut.sumEnablingProbTAout,P5.enableOut.nTAout,P5.enableOut.nremTAout,P5.enableOut.remTAout[1],P5.enableOut.Index,$whenCondition12,P5.enableOut.arcWeightSum,P5.enableOut.TEout[1],P4.delayPassedIn.numtrue,P4.delayPassedIn.anytrue,P3.delayPassedIn.numtrue,P3.delayPassedIn.anytrue,P3.enableIn.TEin_[1],P3.enableIn.valid,P3.enableIn.benefitLimit,P3.enableIn.benefitMax,P3.enableIn.posTE,P3.enableIn.k,P3.enableIn.endWhile,P3.enableIn.state128[4],P3.enableIn.state128[3],P3.enableIn.state128[2],P3.enableIn.state128[1],P3.enableIn.randNum,P3.enableIn.cumEnablingProb[1],P3.enableIn.sumEnablingProbTAin,P3.enableIn.nTAin,P3.enableIn.nremTAin,P3.enableIn.remTAin[1],P3.enableIn.Index,$whenCondition10,P3.enableIn.arcWeightSum,P3.enableIn.TEin[1],P3.delayPassedOut.numtrue,P3.delayPassedOut.anytrue,P3.activeConOut.anychange,P3.activeConOut.vec[i],P3.enableOut.TEout_[1],P3.enableOut.valid,P3.enableOut.benefitLimit,P3.enableOut.benefitMax,P3.enableOut.posTE,P3.enableOut.k,P3.enableOut.endWhile,P3.enableOut.state128[4],P3.enableOut.state128[3],P3.enableOut.state128[2],P3.enableOut.state128[1],P3.enableOut.randNum,P3.enableOut.cumEnablingProb[1],P3.enableOut.sumEnablingProbTAout,P3.enableOut.nTAout,P3.enableOut.nremTAout,P3.enableOut.remTAout[1],P3.enableOut.Index,$whenCondition9,P3.enableOut.arcWeightSum,P3.enableOut.TEout[1],P4.enableIn.TEin_[1],P4.enableIn.valid,P4.enableIn.benefitLimit,P4.enableIn.benefitMax,P4.enableIn.posTE,P4.enableIn.k,P4.enableIn.endWhile,P4.enableIn.state128[4],P4.enableIn.state128[3],P4.enableIn.state128[2],P4.enableIn.state128[1],P4.enableIn.randNum,P4.enableIn.cumEnablingProb[1],P4.enableIn.sumEnablingProbTAin,P4.enableIn.nTAin,P4.enableIn.nremTAin,P4.enableIn.remTAin[1],P4.enableIn.Index,$whenCondition11,P4.enableIn.arcWeightSum,P4.enableIn.TEin[1],P2.delayPassedIn.numtrue,P2.delayPassedIn.anytrue,P1.delayPassedIn.numtrue,P1.delayPassedIn.anytrue,P1.enableIn.TEin_[1],P1.enableIn.valid,P1.enableIn.benefitLimit,P1.enableIn.benefitMax,P1.enableIn.posTE,P1.enableIn.k,P1.enableIn.endWhile,P1.enableIn.state128[4],P1.enableIn.state128[3],P1.enableIn.state128[2],P1.enableIn.state128[1],P1.enableIn.randNum,P1.enableIn.cumEnablingProb[1],P1.enableIn.sumEnablingProbTAin,P1.enableIn.nTAin,P1.enableIn.nremTAin,P1.enableIn.remTAin[1],P1.enableIn.Index,$whenCondition7,P1.enableIn.arcWeightSum,P1.enableIn.TEin[1],P9.disMarksIn.numtrue,P1.delayPassedOut.numtrue,P1.delayPassedOut.anytrue,P1.activeConOut.anychange,P1.activeConOut.vec[i],P1.enableOut.TEout_[1],P1.enableOut.valid,P1.enableOut.benefitLimit,P1.enableOut.benefitMax,P1.enableOut.posTE,P1.enableOut.k,P1.enableOut.endWhile,P1.enableOut.state128[4],P1.enableOut.state128[3],P1.enableOut.state128[2],P1.enableOut.state128[1],P1.enableOut.randNum,P1.enableOut.cumEnablingProb[1],P1.enableOut.sumEnablingProbTAout,P1.enableOut.nTAout,P1.enableOut.nremTAout,P1.enableOut.remTAout[1],P1.enableOut.Index,$whenCondition6,P1.enableOut.arcWeightSum,P1.enableOut.TEout[1],P2.enableIn.TEin_[1],P2.enableIn.valid,P2.enableIn.benefitLimit,P2.enableIn.benefitMax,P2.enableIn.posTE,P2.enableIn.k,P2.enableIn.endWhile,P2.enableIn.state128[4],P2.enableIn.state128[3],P2.enableIn.state128[2],P2.enableIn.state128[1],P2.enableIn.randNum,P2.enableIn.cumEnablingProb[1],P2.enableIn.sumEnablingProbTAin,P2.enableIn.nTAin,P2.enableIn.nremTAin,P2.enableIn.remTAin[1],P2.enableIn.Index,$whenCondition8,P2.enableIn.arcWeightSum,P2.enableIn.TEin[1],P9.disMarkChange,P10.delayPassedOut.numtrue,P10.delayPassedOut.anytrue,P10.enableOut.Index,P10.enableOut.endWhile,P10.enableOut.sumEnablingProbTAout,P10.enableOut.state128[4],P10.enableOut.state128[3],P10.enableOut.state128[2],P10.enableOut.state128[1],P10.enableOut.randNum,P10.enableOut.posTE,P10.enableOut.k,P10.enableOut.nTAout,P10.enableOut.nremTAout,P10.enableOut.arcWeightSum,$whenCondition5,P8.enableOut.benefitLimit,P8.enableOut.valid,P8.enableOut.benefitMax,P8.enableOut.Index,P8.enableOut.endWhile,P8.enableOut.sumEnablingProbTAout,P8.enableOut.state128[4],P8.enableOut.state128[3],P8.enableOut.state128[2],P8.enableOut.state128[1],P8.enableOut.randNum,P8.enableOut.posTE,P8.enableOut.k,P8.enableOut.nTAout,P8.enableOut.nremTAout,$whenCondition4,P8.enableOut.arcWeightSum,P8.delayPassedOut.numtrue,P8.delayPassedOut.anytrue,P8.activeConOut.anychange,P6.enableOut.benefitLimit,P6.enableOut.valid,P6.enableOut.benefitMax,P6.enableOut.Index,P6.enableOut.endWhile,P6.enableOut.sumEnablingProbTAout,P6.enableOut.state128[4],P6.enableOut.state128[3],P6.enableOut.state128[2],P6.enableOut.state128[1],P6.enableOut.randNum,P6.enableOut.posTE,P6.enableOut.k,P6.enableOut.nTAout,P6.enableOut.nremTAout,$whenCondition3,P6.enableOut.arcWeightSum,P6.delayPassedOut.numtrue,P6.delayPassedOut.anytrue,P6.activeConOut.anychange,P4.enableOut.benefitLimit,P4.enableOut.valid,P4.enableOut.benefitMax,P4.enableOut.Index,P4.enableOut.endWhile,P4.enableOut.sumEnablingProbTAout,P4.enableOut.state128[4],P4.enableOut.state128[3],P4.enableOut.state128[2],P4.enableOut.state128[1],P4.enableOut.randNum,P4.enableOut.posTE,P4.enableOut.k,P4.enableOut.nTAout,P4.enableOut.nremTAout,$whenCondition2,P4.enableOut.arcWeightSum,P4.delayPassedOut.numtrue,P4.delayPassedOut.anytrue,P4.activeConOut.anychange,P2.enableOut.benefitLimit,P2.enableOut.valid,P2.enableOut.benefitMax,P2.enableOut.Index,P2.enableOut.endWhile,P2.enableOut.sumEnablingProbTAout,P2.enableOut.state128[4],P2.enableOut.state128[3],P2.enableOut.state128[2],P2.enableOut.state128[1],P2.enableOut.randNum,P2.enableOut.posTE,P2.enableOut.k,P2.enableOut.nTAout,P2.enableOut.nremTAout,$whenCondition1,P2.enableOut.arcWeightSum,P2.delayPassedOut.numtrue,P2.delayPassedOut.anytrue,P2.activeConOut.anychange)
 * Number of clocked states: 0 ()
 * Top-level inputs: 0
Notification: Strong component statistics for simulation (380):
 * Single equations (assignments): 266
 * Array equations: 7
 * Algorithm blocks: 81
 * Record equations: 0
 * When equations: 25
 * If-equations: 0
 * Equation systems (not torn): 0
 * Torn equation systems: 1
 * Mixed (continuous/discrete) equation systems: 0
Notification: Torn system details for strict tearing set:
 * Linear torn systems (#iteration vars, #inner vars, density): 0 systems
 * Non-linear torn systems (#iteration vars, #inner vars): 1 system
   {(1,7)}
Notification: Performance of Backend phase and start with SimCode phase: time 0.003294/1.328, allocations: 1.723 MB / 0.8496 GB, free: 159.1 MB / 490.7 MB
Notification: Performance of simCode: created initialization part: time 0.05702/1.385, allocations: 29.26 MB / 0.8782 GB, free: 152.3 MB / 490.7 MB
Notification: Performance of simCode: created event and clocks part: time 8.787e-06/1.385, allocations: 4.531 kB / 0.8782 GB, free: 152.3 MB / 490.7 MB
Notification: Performance of simCode: created simulation system equations: time 0.02518/1.411, allocations: 35.05 MB / 0.9124 GB, free: 119.2 MB / 490.7 MB
Notification: Performance of simCode: created of all other equations (e.g. parameter, nominal, assert, etc): time 0.004486/1.415, allocations: 1.066 MB / 0.9134 GB, free: 118.3 MB / 490.7 MB
Notification: Performance of simCode: created linear, non-linear and system jacobian parts: time 0.02931/1.444, allocations: 17.59 MB / 0.9306 GB, free: 102.1 MB / 490.7 MB
Notification: Performance of simCode: some other stuff during SimCode phase: time 0.003184/1.448, allocations: 3.491 MB / 0.934 GB, free: 98.68 MB / 490.7 MB
Notification: Performance of simCode: alias equations: time 0.003881/1.451, allocations: 1.544 MB / 0.9355 GB, free: 97.12 MB / 490.7 MB
Notification: Performance of simCode: all other stuff during SimCode phase: time 0.001032/1.453, allocations: 387.4 kB / 0.9359 GB, free: 96.75 MB / 490.7 MB
Notification: Performance of SimCode: time 4.91e-07/1.453, allocations: 0.7656 kB / 0.9359 GB, free: 96.75 MB / 490.7 MB
Notification: Performance of Templates: time 0.3848/1.837, allocations: 122.4 MB / 1.055 GB, free: 140.9 MB / 490.7 MB
make -j1 -f PNlib_2.2_PNlib.Examples.DisTest.FiveTimes.makefile
(rm -f PNlib_2.2_PNlib.Examples.DisTest.FiveTimes.pipe ; mkfifo PNlib_2.2_PNlib.Examples.DisTest.FiveTimes.pipe ; head -c 1048576 < PNlib_2.2_PNlib.Examples.DisTest.FiveTimes.pipe >> ../files/PNlib_2.2_PNlib.Examples.DisTest.FiveTimes.sim & ./PNlib_2.2_PNlib.Examples.DisTest.FiveTimes  -abortSlowSimulation -alarm=480  -emit_protected -lv LOG_STATS > PNlib_2.2_PNlib.Examples.DisTest.FiveTimes.pipe 2>&1)
diffSimulationResults("PNlib_2.2_PNlib.Examples.DisTest.FiveTimes_res.mat","/home/runner/work/PNlib/PNlib/ReferenceFiles/PNlib.Examples.DisTest.FiveTimes.mat","../files/PNlib_2.2_PNlib.Examples.DisTest.FiveTimes.diff",relTol=0.003,relTolDiffMinMax=0.003,rangeDelta=0.001)
Reference file matches
