Running: ./testmodel.py --libraries=/home/runner/.openmodelica/libraries/ --ompython_omhome= PNlib_2.2_PNlib.Examples.DisTest.ConflictBeneBaB.conf.json
loadFile("/home/runner/.openmodelica/libraries/ModelicaServices 4.0.0+maint.om/package.mo", uses=false)
loadFile("/home/runner/.openmodelica/libraries/Complex 4.0.0+maint.om/package.mo", uses=false)
loadFile("/home/runner/.openmodelica/libraries/Modelica 4.0.0+maint.om/package.mo", uses=false)
loadFile("/home/runner/work/PNlib/PNlib/PNlib/package.mo", uses=false)
Using package PNlib with version 2.2 (/home/runner/work/PNlib/PNlib/PNlib/package.mo)
Using package Modelica with version 4.0.0 (/home/runner/.openmodelica/libraries/Modelica 4.0.0+maint.om/package.mo)
Using package Complex with version 4.0.0 (/home/runner/.openmodelica/libraries/Complex 4.0.0+maint.om/package.mo)
Using package ModelicaServices with version 4.0.0 (/home/runner/.openmodelica/libraries/ModelicaServices 4.0.0+maint.om/package.mo)
Running command: translateModel(PNlib.Examples.DisTest.ConflictBeneBaB,tolerance=1e-06,outputFormat="mat",numberOfIntervals=5000,variableFilter="P1.t|P2.t|P3.t|P4.t|P5.t|P6.t|P7.t|T1.active|T1.fire|T2.active|T2.fire|T3.active|T3.fire|T4.active|T4.fire|T5.active|T5.fire|T6.active|T6.fire|T7.active|T7.fire|time",fileNamePrefix="PNlib_2.2_PNlib.Examples.DisTest.ConflictBeneBaB")
translateModel(PNlib.Examples.DisTest.ConflictBeneBaB,tolerance=1e-06,outputFormat="mat",numberOfIntervals=5000,variableFilter="P1.t|P2.t|P3.t|P4.t|P5.t|P6.t|P7.t|T1.active|T1.fire|T2.active|T2.fire|T3.active|T3.fire|T4.active|T4.fire|T5.active|T5.fire|T6.active|T6.fire|T7.active|T7.fire|time",fileNamePrefix="PNlib_2.2_PNlib.Examples.DisTest.ConflictBeneBaB")
Notification: Performance of loadFile(/home/runner/.openmodelica/libraries/ModelicaServices 4.0.0+maint.om/package.mo): time 0.001021/0.001021, allocations: 96.2 kB / 15.59 MB, free: 5.273 MB / 13.93 MB
Notification: Performance of loadFile(/home/runner/.openmodelica/libraries/Complex 4.0.0+maint.om/package.mo): time 0.001674/0.001674, allocations: 175.8 kB / 16.51 MB, free: 4.668 MB / 13.93 MB
Notification: Performance of loadFile(/home/runner/.openmodelica/libraries/Modelica 4.0.0+maint.om/package.mo): time 1.675/1.675, allocations: 222.1 MB / 239.4 MB, free: 11.09 MB / 202.7 MB
Notification: Performance of loadFile(/home/runner/work/PNlib/PNlib/PNlib/package.mo): time 0.09436/0.09436, allocations: 16.58 MB / 306.2 MB, free: 10.57 MB / 250.7 MB
Notification: Performance of FrontEnd - loaded program: time 0.0004573/0.0004573, allocations: 16.12 kB / 370.6 MB, free: 44.85 MB / 298.7 MB
Notification: Performance of FrontEnd - Absyn->SCode: time 0.0756/0.07607, allocations: 53.46 MB / 424.1 MB, free: 5.914 MB / 298.7 MB
Notification: Performance of NFInst.instantiate(PNlib.Examples.DisTest.ConflictBeneBaB): time 0.007611/0.08373, allocations: 7.653 MB / 431.7 MB, free: 14.23 MB / 314.7 MB
Notification: Performance of NFInst.instExpressions: time 0.01075/0.0945, allocations: 6.405 MB / 438.1 MB, free: 7.816 MB / 314.7 MB
Notification: Performance of NFInst.updateImplicitVariability: time 0.001155/0.09568, allocations: 55.75 kB / 438.2 MB, free: 7.762 MB / 314.7 MB
Notification: Performance of NFTyping.typeComponents: time 0.001276/0.09699, allocations: 0.7477 MB / 438.9 MB, free: 7.008 MB / 314.7 MB
Notification: Performance of NFTyping.typeBindings: time 0.00169/0.09869, allocations: 0.7982 MB / 439.7 MB, free: 6.203 MB / 314.7 MB
Notification: Performance of NFTyping.typeClassSections: time 0.005389/0.1041, allocations: 3.437 MB / 443.2 MB, free: 2.762 MB / 314.7 MB
Notification: Performance of NFFlatten.flatten: time 0.009008/0.1131, allocations: 10.39 MB / 453.5 MB, free: 8.355 MB / 330.7 MB
Notification: Performance of NFFlatten.resolveConnections: time 0.001936/0.1151, allocations: 1.806 MB / 455.4 MB, free: 6.48 MB / 330.7 MB
Notification: Performance of NFEvalConstants.evaluate: time 0.003704/0.1188, allocations: 3.953 MB / 459.3 MB, free: 2.52 MB / 330.7 MB
Notification: Performance of NFSimplifyModel.simplify: time 0.002964/0.1218, allocations: 2.847 MB / 462.2 MB, free: 15.66 MB / 346.7 MB
Notification: Performance of NFPackage.collectConstants: time 0.001475/0.1233, allocations: 0.7539 MB / 462.9 MB, free: 14.91 MB / 346.7 MB
Notification: Performance of NFFlatten.collectFunctions: time 0.001821/0.1251, allocations: 1.39 MB / 464.3 MB, free: 13.52 MB / 346.7 MB
Notification: Performance of NFScalarize.scalarize: time 0.001114/0.1262, allocations: 1.319 MB / 465.6 MB, free: 12.19 MB / 346.7 MB
Notification: Performance of NFVerifyModel.verify: time 0.003133/0.1294, allocations: 3.358 MB / 469 MB, free: 8.82 MB / 346.7 MB
Notification: Performance of NFConvertDAE.convert: time 0.006921/0.1364, allocations: 7.932 MB / 476.9 MB, free: 0.8672 MB / 346.7 MB
Notification: Performance of FrontEnd - DAE generated: time 5.23e-06/0.1364, allocations: 0 / 476.9 MB, free: 0.8672 MB / 346.7 MB
Notification: Performance of FrontEnd: time 4.118e-06/0.1364, allocations: 0 / 476.9 MB, free: 0.8672 MB / 346.7 MB
Notification: Performance of Transformations before backend: time 4.659e-05/0.1365, allocations: 3.938 kB / 476.9 MB, free: 0.8633 MB / 346.7 MB
Notification: Model statistics after passing the front-end and creating the data structures used by the back-end:
 * Number of equations: 1645
 * Number of variables: 1645
Notification: Performance of Generate backend data structure: time 0.01073/0.1472, allocations: 8.223 MB / 485.1 MB, free: 8.105 MB / 362.7 MB
Notification: Performance of prepare preOptimizeDAE: time 4.252e-05/0.1473, allocations: 16.02 kB / 485.2 MB, free: 8.09 MB / 362.7 MB
Notification: Performance of preOpt normalInlineFunction (simulation): time 0.002534/0.1498, allocations: 0.7666 MB / 485.9 MB, free: 7.316 MB / 362.7 MB
Notification: Performance of preOpt evaluateParameters (simulation): time 0.003913/0.1537, allocations: 2.41 MB / 488.3 MB, free: 4.859 MB / 362.7 MB
Notification: Performance of preOpt simplifyIfEquations (simulation): time 0.0007447/0.1545, allocations: 0.8769 MB / 489.2 MB, free: 3.895 MB / 362.7 MB
Notification: Performance of preOpt expandDerOperator (simulation): time 0.0009634/0.1555, allocations: 0.7068 MB / 489.9 MB, free: 3.188 MB / 362.7 MB
Notification: Performance of preOpt clockPartitioning (simulation): time 0.02059/0.1761, allocations: 12.89 MB / 0.491 GB, free: 5.707 MB / 378.7 MB
Notification: Performance of preOpt findStateOrder (simulation): time 0.0001188/0.1762, allocations: 23.81 kB / 0.491 GB, free: 5.684 MB / 378.7 MB
Notification: Performance of preOpt replaceEdgeChange (simulation): time 0.0008606/0.1771, allocations: 343.8 kB / 0.4914 GB, free: 5.348 MB / 378.7 MB
Notification: Performance of preOpt inlineArrayEqn (simulation): time 0.001092/0.1782, allocations: 0.6173 MB / 0.492 GB, free: 4.727 MB / 378.7 MB
Notification: Performance of preOpt removeEqualRHS (simulation): time 0.2318/0.41, allocations: 9.134 MB / 0.5009 GB, free: 71.21 MB / 378.7 MB
Notification: Performance of preOpt removeSimpleEquations (simulation): time 0.03309/0.4432, allocations: 27.88 MB / 0.5281 GB, free: 52.25 MB / 378.7 MB
Notification: Performance of preOpt comSubExp (simulation): time 0.0132/0.4564, allocations: 14.81 MB / 0.5426 GB, free: 39.86 MB / 378.7 MB
Notification: Performance of preOpt resolveLoops (simulation): time 0.01167/0.4681, allocations: 14.13 MB / 0.5564 GB, free: 25.7 MB / 378.7 MB
Notification: Performance of preOpt evalFunc (simulation): time 0.0001985/0.4683, allocations: 120.8 kB / 0.5565 GB, free: 25.56 MB / 378.7 MB
Notification: Performance of preOpt encapsulateWhenConditions (simulation): time 0.009701/0.478, allocations: 7.927 MB / 0.5642 GB, free: 17.44 MB / 378.7 MB
Notification: Performance of pre-optimization done (n=637): time 7.775e-06/0.4781, allocations: 4 kB / 0.5642 GB, free: 17.44 MB / 378.7 MB
Notification: Performance of matching and sorting (n=637): time 0.03166/0.5097, allocations: 22.92 MB / 0.5866 GB, free: 10.1 MB / 394.7 MB
Notification: Performance of inlineWhenForInitialization (initialization): time 0.001757/0.5115, allocations: 4.002 MB / 0.5905 GB, free: 5.406 MB / 394.7 MB
Notification: Performance of selectInitializationVariablesDAE (initialization): time 0.003526/0.5151, allocations: 2.796 MB / 0.5933 GB, free: 2.586 MB / 394.7 MB
Notification: Performance of collectPreVariables (initialization): time 0.0006495/0.5157, allocations: 353.6 kB / 0.5936 GB, free: 2.234 MB / 394.7 MB
Notification: Performance of collectInitialEqns (initialization): time 0.001778/0.5175, allocations: 1.898 MB / 0.5954 GB, free: 408 kB / 394.7 MB
Notification: Performance of collectInitialBindings (initialization): time 0.001963/0.5195, allocations: 1.579 MB / 0.597 GB, free: 14.84 MB / 410.7 MB
Notification: Performance of simplifyInitialFunctions (initialization): time 0.002522/0.522, allocations: 1.946 MB / 0.5989 GB, free: 12.89 MB / 410.7 MB
Notification: Performance of setup shared object (initialization): time 3.253e-05/0.5221, allocations: 301.1 kB / 0.5992 GB, free: 12.59 MB / 410.7 MB
Notification: Performance of preBalanceInitialSystem (initialization): time 0.005849/0.5279, allocations: 3.734 MB / 0.6028 GB, free: 8.852 MB / 410.7 MB
Notification: Performance of partitionIndependentBlocks (initialization): time 0.007833/0.5358, allocations: 6.941 MB / 0.6096 GB, free: 0.5078 MB / 410.7 MB
Notification: Performance of analyzeInitialSystem (initialization): time 0.02407/0.5599, allocations: 20.6 MB / 0.6297 GB, free: 9.344 MB / 442.7 MB
Notification: Performance of solveInitialSystemEqSystem (initialization): time 0.0001136/0.56, allocations: 28 kB / 0.6297 GB, free: 9.316 MB / 442.7 MB
Notification: Performance of matching and sorting (n=1262) (initialization): time 0.02259/0.5826, allocations: 14.73 MB / 0.6441 GB, free: 10.13 MB / 458.7 MB
Notification: Performance of prepare postOptimizeDAE: time 0.001156/0.5838, allocations: 2.307 MB / 0.6464 GB, free: 7.395 MB / 458.7 MB
Notification: Performance of postOpt simplifyComplexFunction (initialization): time 9.717e-05/0.5839, allocations: 92 kB / 0.6465 GB, free: 7.305 MB / 458.7 MB
Notification: Performance of postOpt tearingSystem (initialization): time 0.0001489/0.5841, allocations: 152 kB / 0.6466 GB, free: 7.156 MB / 458.7 MB
Notification: Performance of postOpt solveSimpleEquations (initialization): time 0.003629/0.5877, allocations: 1.079 MB / 0.6477 GB, free: 6.074 MB / 458.7 MB
Notification: Performance of postOpt calculateStrongComponentJacobians (initialization): time 0.000142/0.5879, allocations: 207.2 kB / 0.6479 GB, free: 5.871 MB / 458.7 MB
Notification: Performance of postOpt simplifyAllExpressions (initialization): time 0.004927/0.5928, allocations: 1.081 MB / 0.6489 GB, free: 4.781 MB / 458.7 MB
Notification: Performance of postOpt collapseArrayExpressions (initialization): time 0.000656/0.5935, allocations: 476 kB / 0.6494 GB, free: 4.316 MB / 458.7 MB
Warning: Assuming fixed start value for the following 175 variables:
         P6.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P6.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P6.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P6.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P6.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P6.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P6.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P6.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P6.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P6.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P7.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P7.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P7.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P7.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P7.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P7.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P7.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P7.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P7.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P7.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P7.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P7.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P7.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P7.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P7.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P7.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P7.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P7.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P7.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P7.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P5.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P5.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P5.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P5.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P5.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P5.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P5.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P5.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P5.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P5.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P5.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P5.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P5.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P5.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P5.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P5.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P5.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P5.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P5.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P5.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P4.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P4.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P4.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P4.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P4.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P4.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P4.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P4.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P4.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P4.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P3.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P3.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P3.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P3.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P3.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P3.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P3.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P3.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P3.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P3.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P2.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P2.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P2.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P2.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P2.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P2.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P2.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P2.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P2.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P2.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P1.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P1.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P1.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P1.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P1.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P1.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P1.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P1.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P1.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P1.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P6.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P6.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         T6.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T6.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         T7.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T7.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         P7.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P7.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P5.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P5.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P4.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P4.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         T5.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T5.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         T4.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T4.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         T3.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T3.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         P3.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P3.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P2.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P2.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         T2.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T2.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         T1.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T1.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         P1.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P1.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P6.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P6.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P6.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P6.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P6.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P6.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P6.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P6.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P6.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P6.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P4.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P4.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P4.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P4.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P4.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P4.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P4.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P4.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P4.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P4.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P3.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P3.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P3.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P3.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P3.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P3.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P3.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P3.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P3.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P3.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P2.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P2.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P2.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P2.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P2.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P2.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P2.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P2.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P2.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P2.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P1.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P1.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P1.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P1.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P1.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P1.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P1.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P1.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P1.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P1.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         T6.firingTime:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
         T7.firingTime:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
         T5.firingTime:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
         T4.firingTime:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
         T3.firingTime:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
         T2.firingTime:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
         T1.firingTime:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
Notification: Model statistics after passing the back-end for initialization:
 * Number of independent subsystems: 433
 * Number of states: 0 ()
 * Number of discrete variables: 1038 ($PRE.P6.enableIn.valid,P6.enableIn.valid,$PRE.P6.enableIn.benefitLimit,P6.enableIn.benefitLimit,$PRE.P6.enableIn.benefitMax,P6.enableIn.benefitMax,$PRE.P6.enableIn.posTE,P6.enableIn.posTE,$PRE.P6.enableIn.k,P6.enableIn.k,$PRE.P6.enableIn.endWhile,P6.enableIn.endWhile,P6.enableIn.randNum,$PRE.P6.enableIn.randNum,P6.enableIn.state128[4],$PRE.P6.enableIn.state128[4],P6.enableIn.state128[3],$PRE.P6.enableIn.state128[3],P6.enableIn.state128[2],$PRE.P6.enableIn.state128[2],P6.enableIn.state128[1],$PRE.P6.enableIn.state128[1],P6.enableIn.cumEnablingProb[1],$PRE.P6.enableIn.cumEnablingProb[1],$PRE.P6.enableIn.sumEnablingProbTAin,P6.enableIn.sumEnablingProbTAin,$PRE.P6.enableIn.nTAin,P6.enableIn.nTAin,$PRE.P6.enableIn.nremTAin,P6.enableIn.nremTAin,P6.enableIn.remTAin[1],$PRE.P6.enableIn.remTAin[1],$PRE.P6.enableIn.Index,P6.enableIn.Index,$PRE.P7.enableIn.valid,P7.enableIn.valid,$PRE.P7.enableIn.benefitLimit,P7.enableIn.benefitLimit,$PRE.P7.enableIn.benefitMax,P7.enableIn.benefitMax,$PRE.P7.enableIn.posTE,P7.enableIn.posTE,$PRE.P7.enableIn.k,P7.enableIn.k,$PRE.P7.enableIn.endWhile,P7.enableIn.endWhile,P7.enableIn.randNum,$PRE.P7.enableIn.randNum,P7.enableIn.state128[4],$PRE.P7.enableIn.state128[4],P7.enableIn.state128[3],$PRE.P7.enableIn.state128[3],P7.enableIn.state128[2],$PRE.P7.enableIn.state128[2],P7.enableIn.state128[1],$PRE.P7.enableIn.state128[1],P7.enableIn.cumEnablingProb[1],$PRE.P7.enableIn.cumEnablingProb[1],$PRE.P7.enableIn.sumEnablingProbTAin,P7.enableIn.sumEnablingProbTAin,$PRE.P7.enableIn.nTAin,P7.enableIn.nTAin,$PRE.P7.enableIn.nremTAin,P7.enableIn.nremTAin,P7.enableIn.remTAin[1],$PRE.P7.enableIn.remTAin[1],$PRE.P7.enableIn.Index,P7.enableIn.Index,$PRE.P7.enableOut.valid,P7.enableOut.valid,$PRE.P7.enableOut.benefitLimit,P7.enableOut.benefitLimit,$PRE.P7.enableOut.benefitMax,P7.enableOut.benefitMax,$PRE.P7.enableOut.posTE,P7.enableOut.posTE,$PRE.P7.enableOut.k,P7.enableOut.k,$PRE.P7.enableOut.endWhile,P7.enableOut.endWhile,P7.enableOut.randNum,$PRE.P7.enableOut.randNum,P7.enableOut.state128[4],$PRE.P7.enableOut.state128[4],P7.enableOut.state128[3],$PRE.P7.enableOut.state128[3],P7.enableOut.state128[2],$PRE.P7.enableOut.state128[2],P7.enableOut.state128[1],$PRE.P7.enableOut.state128[1],P7.enableOut.cumEnablingProb[6],$PRE.P7.enableOut.cumEnablingProb[6],P7.enableOut.cumEnablingProb[5],$PRE.P7.enableOut.cumEnablingProb[5],P7.enableOut.cumEnablingProb[4],$PRE.P7.enableOut.cumEnablingProb[4],P7.enableOut.cumEnablingProb[3],$PRE.P7.enableOut.cumEnablingProb[3],P7.enableOut.cumEnablingProb[2],$PRE.P7.enableOut.cumEnablingProb[2],P7.enableOut.cumEnablingProb[1],$PRE.P7.enableOut.cumEnablingProb[1],$PRE.P7.enableOut.sumEnablingProbTAout,P7.enableOut.sumEnablingProbTAout,$PRE.P7.enableOut.nTAout,P7.enableOut.nTAout,$PRE.P7.enableOut.nremTAout,P7.enableOut.nremTAout,P7.enableOut.remTAout[6],$PRE.P7.enableOut.remTAout[6],P7.enableOut.remTAout[5],$PRE.P7.enableOut.remTAout[5],P7.enableOut.remTAout[4],$PRE.P7.enableOut.remTAout[4],P7.enableOut.remTAout[3],$PRE.P7.enableOut.remTAout[3],P7.enableOut.remTAout[2],$PRE.P7.enableOut.remTAout[2],P7.enableOut.remTAout[1],$PRE.P7.enableOut.remTAout[1],$PRE.P7.enableOut.Index,P7.enableOut.Index,$PRE.P5.enableIn.valid,P5.enableIn.valid,$PRE.P5.enableIn.benefitLimit,P5.enableIn.benefitLimit,$PRE.P5.enableIn.benefitMax,P5.enableIn.benefitMax,$PRE.P5.enableIn.posTE,P5.enableIn.posTE,$PRE.P5.enableIn.k,P5.enableIn.k,$PRE.P5.enableIn.endWhile,P5.enableIn.endWhile,P5.enableIn.randNum,$PRE.P5.enableIn.randNum,P5.enableIn.state128[4],$PRE.P5.enableIn.state128[4],P5.enableIn.state128[3],$PRE.P5.enableIn.state128[3],P5.enableIn.state128[2],$PRE.P5.enableIn.state128[2],P5.enableIn.state128[1],$PRE.P5.enableIn.state128[1],P5.enableIn.cumEnablingProb[1],$PRE.P5.enableIn.cumEnablingProb[1],$PRE.P5.enableIn.sumEnablingProbTAin,P5.enableIn.sumEnablingProbTAin,$PRE.P5.enableIn.nTAin,P5.enableIn.nTAin,$PRE.P5.enableIn.nremTAin,P5.enableIn.nremTAin,P5.enableIn.remTAin[1],$PRE.P5.enableIn.remTAin[1],$PRE.P5.enableIn.Index,P5.enableIn.Index,$PRE.P5.enableOut.valid,P5.enableOut.valid,$PRE.P5.enableOut.benefitLimit,P5.enableOut.benefitLimit,$PRE.P5.enableOut.benefitMax,P5.enableOut.benefitMax,$PRE.P5.enableOut.posTE,P5.enableOut.posTE,$PRE.P5.enableOut.k,P5.enableOut.k,$PRE.P5.enableOut.endWhile,P5.enableOut.endWhile,P5.enableOut.randNum,$PRE.P5.enableOut.randNum,P5.enableOut.state128[4],$PRE.P5.enableOut.state128[4],P5.enableOut.state128[3],$PRE.P5.enableOut.state128[3],P5.enableOut.state128[2],$PRE.P5.enableOut.state128[2],P5.enableOut.state128[1],$PRE.P5.enableOut.state128[1],P5.enableOut.cumEnablingProb[1],$PRE.P5.enableOut.cumEnablingProb[1],$PRE.P5.enableOut.sumEnablingProbTAout,P5.enableOut.sumEnablingProbTAout,$PRE.P5.enableOut.nTAout,P5.enableOut.nTAout,$PRE.P5.enableOut.nremTAout,P5.enableOut.nremTAout,P5.enableOut.remTAout[1],$PRE.P5.enableOut.remTAout[1],$PRE.P5.enableOut.Index,P5.enableOut.Index,$PRE.P4.enableIn.valid,P4.enableIn.valid,$PRE.P4.enableIn.benefitLimit,P4.enableIn.benefitLimit,$PRE.P4.enableIn.benefitMax,P4.enableIn.benefitMax,$PRE.P4.enableIn.posTE,P4.enableIn.posTE,$PRE.P4.enableIn.k,P4.enableIn.k,$PRE.P4.enableIn.endWhile,P4.enableIn.endWhile,P4.enableIn.randNum,$PRE.P4.enableIn.randNum,P4.enableIn.state128[4],$PRE.P4.enableIn.state128[4],P4.enableIn.state128[3],$PRE.P4.enableIn.state128[3],P4.enableIn.state128[2],$PRE.P4.enableIn.state128[2],P4.enableIn.state128[1],$PRE.P4.enableIn.state128[1],P4.enableIn.cumEnablingProb[1],$PRE.P4.enableIn.cumEnablingProb[1],$PRE.P4.enableIn.sumEnablingProbTAin,P4.enableIn.sumEnablingProbTAin,$PRE.P4.enableIn.nTAin,P4.enableIn.nTAin,$PRE.P4.enableIn.nremTAin,P4.enableIn.nremTAin,P4.enableIn.remTAin[1],$PRE.P4.enableIn.remTAin[1],$PRE.P4.enableIn.Index,P4.enableIn.Index,$PRE.P3.enableIn.valid,P3.enableIn.valid,$PRE.P3.enableIn.benefitLimit,P3.enableIn.benefitLimit,$PRE.P3.enableIn.benefitMax,P3.enableIn.benefitMax,$PRE.P3.enableIn.posTE,P3.enableIn.posTE,$PRE.P3.enableIn.k,P3.enableIn.k,$PRE.P3.enableIn.endWhile,P3.enableIn.endWhile,P3.enableIn.randNum,$PRE.P3.enableIn.randNum,P3.enableIn.state128[4],$PRE.P3.enableIn.state128[4],P3.enableIn.state128[3],$PRE.P3.enableIn.state128[3],P3.enableIn.state128[2],$PRE.P3.enableIn.state128[2],P3.enableIn.state128[1],$PRE.P3.enableIn.state128[1],P3.enableIn.cumEnablingProb[1],$PRE.P3.enableIn.cumEnablingProb[1],$PRE.P3.enableIn.sumEnablingProbTAin,P3.enableIn.sumEnablingProbTAin,$PRE.P3.enableIn.nTAin,P3.enableIn.nTAin,$PRE.P3.enableIn.nremTAin,P3.enableIn.nremTAin,P3.enableIn.remTAin[1],$PRE.P3.enableIn.remTAin[1],$PRE.P3.enableIn.Index,P3.enableIn.Index,$PRE.P2.enableIn.valid,P2.enableIn.valid,$PRE.P2.enableIn.benefitLimit,P2.enableIn.benefitLimit,$PRE.P2.enableIn.benefitMax,P2.enableIn.benefitMax,$PRE.P2.enableIn.posTE,P2.enableIn.posTE,$PRE.P2.enableIn.k,P2.enableIn.k,$PRE.P2.enableIn.endWhile,P2.enableIn.endWhile,P2.enableIn.randNum,$PRE.P2.enableIn.randNum,P2.enableIn.state128[4],$PRE.P2.enableIn.state128[4],P2.enableIn.state128[3],$PRE.P2.enableIn.state128[3],P2.enableIn.state128[2],$PRE.P2.enableIn.state128[2],P2.enableIn.state128[1],$PRE.P2.enableIn.state128[1],P2.enableIn.cumEnablingProb[1],$PRE.P2.enableIn.cumEnablingProb[1],$PRE.P2.enableIn.sumEnablingProbTAin,P2.enableIn.sumEnablingProbTAin,$PRE.P2.enableIn.nTAin,P2.enableIn.nTAin,$PRE.P2.enableIn.nremTAin,P2.enableIn.nremTAin,P2.enableIn.remTAin[1],$PRE.P2.enableIn.remTAin[1],$PRE.P2.enableIn.Index,P2.enableIn.Index,$PRE.P1.enableIn.valid,P1.enableIn.valid,$PRE.P1.enableIn.benefitLimit,P1.enableIn.benefitLimit,$PRE.P1.enableIn.benefitMax,P1.enableIn.benefitMax,$PRE.P1.enableIn.posTE,P1.enableIn.posTE,$PRE.P1.enableIn.k,P1.enableIn.k,$PRE.P1.enableIn.endWhile,P1.enableIn.endWhile,P1.enableIn.randNum,$PRE.P1.enableIn.randNum,P1.enableIn.state128[4],$PRE.P1.enableIn.state128[4],P1.enableIn.state128[3],$PRE.P1.enableIn.state128[3],P1.enableIn.state128[2],$PRE.P1.enableIn.state128[2],P1.enableIn.state128[1],$PRE.P1.enableIn.state128[1],P1.enableIn.cumEnablingProb[1],$PRE.P1.enableIn.cumEnablingProb[1],$PRE.P1.enableIn.sumEnablingProbTAin,P1.enableIn.sumEnablingProbTAin,$PRE.P1.enableIn.nTAin,P1.enableIn.nTAin,$PRE.P1.enableIn.nremTAin,P1.enableIn.nremTAin,P1.enableIn.remTAin[1],$PRE.P1.enableIn.remTAin[1],$PRE.P1.enableIn.Index,P1.enableIn.Index,$PRE.P1.reStart,$whenCondition49,$PRE.P2.reStart,$whenCondition42,$PRE.P3.reStart,$whenCondition39,$PRE.P4.reStart,$whenCondition30,$PRE.P5.reStart,$whenCondition27,$PRE.P7.reStart,$whenCondition24,$PRE.P6.reStart,$whenCondition17,T6.inPlaces[1].tokenInOut,$PRE.P7.tokeninout,P7.outTransition[5].tokenInOut,P7.outTransition[4].tokenInOut,P7.outTransition[3].tokenInOut,P7.outTransition[2].tokenInOut,P7.outTransition[1].tokenInOut,T7.inPlaces[1].tokenInOut,$PRE.P5.tokeninout,$PRE.P6.firingSumOut.firingSum,$PRE.P6.firingSumIn.firingSum,P6.tokeninout,$whenCondition15,$whenCondition16,$PRE.T6.ani,$PRE.T6.fireTime,T6.ani,T6.fireTime,$PRE.T7.ani,$PRE.T7.fireTime,T7.ani,T7.fireTime,$PRE.P7.firingSumOut.firingSum,$PRE.P7.firingSumIn.firingSum,P7.tokeninout,$whenCondition22,$whenCondition23,$PRE.P5.firingSumOut.firingSum,$PRE.P5.firingSumIn.firingSum,P5.tokeninout,$whenCondition25,$whenCondition26,$PRE.P4.firingSumOut.firingSum,$PRE.P4.firingSumIn.firingSum,P4.tokeninout,$whenCondition28,$whenCondition29,$PRE.T5.ani,$PRE.T5.fireTime,T5.ani,T5.fireTime,$PRE.T4.ani,$PRE.T4.fireTime,T4.ani,T4.fireTime,$PRE.T3.ani,$PRE.T3.fireTime,T3.ani,T3.fireTime,$PRE.P3.firingSumOut.firingSum,$PRE.P3.firingSumIn.firingSum,P3.tokeninout,$whenCondition37,$whenCondition38,$PRE.P2.firingSumOut.firingSum,$PRE.P2.firingSumIn.firingSum,P2.tokeninout,$whenCondition40,$whenCondition41,$PRE.T2.ani,$PRE.T2.fireTime,T2.ani,T2.fireTime,$PRE.T1.ani,$PRE.T1.fireTime,T1.ani,T1.fireTime,$PRE.P1.firingSumOut.firingSum,$PRE.P1.firingSumIn.firingSum,P1.tokeninout,$whenCondition47,$whenCondition48,P6.firingSumOut.firingSum,P4.firingSumOut.firingSum,P3.firingSumOut.firingSum,P2.firingSumOut.firingSum,P1.firingSumOut.firingSum,$PRE.P6.enableOut.benefitLimit,P6.enableOut.benefitLimit,$PRE.P6.enableOut.valid,P6.enableOut.valid,$PRE.P6.enableOut.benefitMax,P6.enableOut.benefitMax,$PRE.P6.enableOut.Index,P6.enableOut.Index,$PRE.P6.enableOut.endWhile,P6.enableOut.endWhile,$PRE.P6.enableOut.sumEnablingProbTAout,P6.enableOut.sumEnablingProbTAout,P6.enableOut.randNum,$PRE.P6.enableOut.randNum,P6.enableOut.state128[4],$PRE.P6.enableOut.state128[4],P6.enableOut.state128[3],$PRE.P6.enableOut.state128[3],P6.enableOut.state128[2],$PRE.P6.enableOut.state128[2],P6.enableOut.state128[1],$PRE.P6.enableOut.state128[1],$PRE.P6.enableOut.posTE,P6.enableOut.posTE,$PRE.P6.enableOut.k,P6.enableOut.k,$PRE.P6.enableOut.nTAout,P6.enableOut.nTAout,$PRE.P6.enableOut.nremTAout,P6.enableOut.nremTAout,P6.enableOut.arcWeightSum,$PRE.P6.enableOut.arcWeightSum,P6.delayPassedOut.numtrue,P6.delayPassedOut.anytrue,P6.activeConOut.anychange,$whenCondition5,$PRE.P4.enableOut.benefitLimit,P4.enableOut.benefitLimit,$PRE.P4.enableOut.valid,P4.enableOut.valid,$PRE.P4.enableOut.benefitMax,P4.enableOut.benefitMax,$PRE.P4.enableOut.Index,P4.enableOut.Index,$PRE.P4.enableOut.endWhile,P4.enableOut.endWhile,$PRE.P4.enableOut.sumEnablingProbTAout,P4.enableOut.sumEnablingProbTAout,P4.enableOut.randNum,$PRE.P4.enableOut.randNum,P4.enableOut.state128[4],$PRE.P4.enableOut.state128[4],P4.enableOut.state128[3],$PRE.P4.enableOut.state128[3],P4.enableOut.state128[2],$PRE.P4.enableOut.state128[2],P4.enableOut.state128[1],$PRE.P4.enableOut.state128[1],$PRE.P4.enableOut.posTE,P4.enableOut.posTE,$PRE.P4.enableOut.k,P4.enableOut.k,$PRE.P4.enableOut.nTAout,P4.enableOut.nTAout,$PRE.P4.enableOut.nremTAout,P4.enableOut.nremTAout,P4.enableOut.arcWeightSum,$PRE.P4.enableOut.arcWeightSum,P4.delayPassedOut.numtrue,P4.delayPassedOut.anytrue,P4.activeConOut.anychange,$whenCondition4,$PRE.P3.enableOut.benefitLimit,P3.enableOut.benefitLimit,$PRE.P3.enableOut.valid,P3.enableOut.valid,$PRE.P3.enableOut.benefitMax,P3.enableOut.benefitMax,$PRE.P3.enableOut.Index,P3.enableOut.Index,$PRE.P3.enableOut.endWhile,P3.enableOut.endWhile,$PRE.P3.enableOut.sumEnablingProbTAout,P3.enableOut.sumEnablingProbTAout,P3.enableOut.randNum,$PRE.P3.enableOut.randNum,P3.enableOut.state128[4],$PRE.P3.enableOut.state128[4],P3.enableOut.state128[3],$PRE.P3.enableOut.state128[3],P3.enableOut.state128[2],$PRE.P3.enableOut.state128[2],P3.enableOut.state128[1],$PRE.P3.enableOut.state128[1],$PRE.P3.enableOut.posTE,P3.enableOut.posTE,$PRE.P3.enableOut.k,P3.enableOut.k,$PRE.P3.enableOut.nTAout,P3.enableOut.nTAout,$PRE.P3.enableOut.nremTAout,P3.enableOut.nremTAout,P3.enableOut.arcWeightSum,$PRE.P3.enableOut.arcWeightSum,P3.delayPassedOut.numtrue,P3.delayPassedOut.anytrue,P3.activeConOut.anychange,$whenCondition3,$PRE.P2.enableOut.benefitLimit,P2.enableOut.benefitLimit,$PRE.P2.enableOut.valid,P2.enableOut.valid,$PRE.P2.enableOut.benefitMax,P2.enableOut.benefitMax,$PRE.P2.enableOut.Index,P2.enableOut.Index,$PRE.P2.enableOut.endWhile,P2.enableOut.endWhile,$PRE.P2.enableOut.sumEnablingProbTAout,P2.enableOut.sumEnablingProbTAout,P2.enableOut.randNum,$PRE.P2.enableOut.randNum,P2.enableOut.state128[4],$PRE.P2.enableOut.state128[4],P2.enableOut.state128[3],$PRE.P2.enableOut.state128[3],P2.enableOut.state128[2],$PRE.P2.enableOut.state128[2],P2.enableOut.state128[1],$PRE.P2.enableOut.state128[1],$PRE.P2.enableOut.posTE,P2.enableOut.posTE,$PRE.P2.enableOut.k,P2.enableOut.k,$PRE.P2.enableOut.nTAout,P2.enableOut.nTAout,$PRE.P2.enableOut.nremTAout,P2.enableOut.nremTAout,P2.enableOut.arcWeightSum,$PRE.P2.enableOut.arcWeightSum,P2.delayPassedOut.numtrue,P2.delayPassedOut.anytrue,P2.activeConOut.anychange,$whenCondition2,$PRE.P1.enableOut.benefitLimit,P1.enableOut.benefitLimit,$PRE.P1.enableOut.valid,P1.enableOut.valid,$PRE.P1.enableOut.benefitMax,P1.enableOut.benefitMax,$PRE.P1.enableOut.Index,P1.enableOut.Index,$PRE.P1.enableOut.endWhile,P1.enableOut.endWhile,$PRE.P1.enableOut.sumEnablingProbTAout,P1.enableOut.sumEnablingProbTAout,P1.enableOut.randNum,$PRE.P1.enableOut.randNum,P1.enableOut.state128[4],$PRE.P1.enableOut.state128[4],P1.enableOut.state128[3],$PRE.P1.enableOut.state128[3],P1.enableOut.state128[2],$PRE.P1.enableOut.state128[2],P1.enableOut.state128[1],$PRE.P1.enableOut.state128[1],$PRE.P1.enableOut.posTE,P1.enableOut.posTE,$PRE.P1.enableOut.k,P1.enableOut.k,$PRE.P1.enableOut.nTAout,P1.enableOut.nTAout,$PRE.P1.enableOut.nremTAout,P1.enableOut.nremTAout,P1.enableOut.arcWeightSum,$PRE.P1.enableOut.arcWeightSum,P1.delayPassedOut.numtrue,P1.delayPassedOut.anytrue,P1.activeConOut.anychange,$whenCondition1,P6.inTransition[1].disPlace,T6.outPlaces[1].disTransition,P6.reStart,T6.firingCon,T6.inPlaces[1].disTransition,P7.outTransition[6].normalArc,P7.outTransition[6].testValueint,P7.outTransition[6].arcType,P7.outTransition[6].disPlace,T7.firingCon,T7.outPlaces[1].disTransition,P7.inTransition[1].disPlace,T7.inPlaces[1].disTransition,P5.outTransition[1].normalArc,P5.outTransition[1].testValueint,P5.outTransition[1].arcType,P5.outTransition[1].disPlace,P7.outTransition[5].normalArc,P7.outTransition[5].testValueint,P7.outTransition[5].arcType,P7.outTransition[5].disPlace,T4.inPlaces[1].disTransition,P7.outTransition[4].normalArc,P7.outTransition[4].testValueint,P7.outTransition[4].arcType,P7.outTransition[4].disPlace,T5.inPlaces[1].disTransition,P7.outTransition[3].normalArc,P7.outTransition[3].testValueint,P7.outTransition[3].arcType,P7.outTransition[3].disPlace,T3.inPlaces[1].disTransition,P7.outTransition[2].normalArc,P7.outTransition[2].testValueint,P7.outTransition[2].arcType,P7.outTransition[2].disPlace,T2.inPlaces[1].disTransition,P7.outTransition[1].normalArc,P7.outTransition[1].testValueint,P7.outTransition[1].arcType,P7.outTransition[1].disPlace,T1.inPlaces[1].disTransition,P7.reStart,P5.inTransition[1].disPlace,T4.outPlaces[1].disTransition,P5.reStart,P4.inTransition[1].disPlace,T5.outPlaces[1].disTransition,P4.reStart,T5.firingCon,T4.firingCon,T3.firingCon,T3.outPlaces[1].disTransition,P3.inTransition[1].disPlace,P3.reStart,P2.inTransition[1].disPlace,T2.outPlaces[1].disTransition,P2.reStart,T2.firingCon,T1.firingCon,T1.outPlaces[1].disTransition,P1.inTransition[1].disPlace,P1.reStart,P6.enableIn.disTransition[1],P7.enableIn.disTransition[1],P5.enableIn.disTransition[1],P4.enableIn.disTransition[1],P3.enableIn.disTransition[1],P2.enableIn.disTransition[1],P1.enableIn.disTransition[1],$PRE.P6.enableIn.arcWeightSum,$PRE.P6.enableIn.TEin[1],$PRE.T6.firingTime,$PRE.T7.firingTime,$PRE.P7.enableIn.arcWeightSum,$PRE.P7.enableIn.TEin[1],$PRE.P7.enableOut.arcWeightSum,$PRE.P7.enableOut.TEout[6],$PRE.P7.enableOut.TEout[5],$PRE.P7.enableOut.TEout[4],$PRE.P7.enableOut.TEout[3],$PRE.P7.enableOut.TEout[2],$PRE.P7.enableOut.TEout[1],$PRE.P5.enableIn.arcWeightSum,$PRE.P5.enableIn.TEin[1],$PRE.P5.enableOut.arcWeightSum,$PRE.P5.enableOut.TEout[1],$PRE.P4.enableIn.arcWeightSum,$PRE.P4.enableIn.TEin[1],$PRE.T5.firingTime,$PRE.T4.firingTime,$PRE.T3.firingTime,$PRE.P3.enableIn.arcWeightSum,$PRE.P3.enableIn.TEin[1],$PRE.P2.enableIn.arcWeightSum,$PRE.P2.enableIn.TEin[1],$PRE.T2.firingTime,$PRE.T1.firingTime,$PRE.P1.enableIn.arcWeightSum,$PRE.P1.enableIn.TEin[1],T1.activation.arcWeightIntIn[1],P1.enableIn.arcWeight[1],T2.activation.arcWeightIntIn[1],T2.activation.arcWeightIntOut[1],T3.activation.arcWeightIntIn[1],P3.enableIn.arcWeight[1],T4.activation.arcWeightIntIn[1],T4.activation.arcWeightIntOut[1],T5.activation.arcWeightIntIn[1],T5.activation.arcWeightIntOut[1],P5.enableOut.arcWeight[1],P7.enableIn.arcWeight[1],P7.enableOut.arcWeight[6],T6.activation.arcWeightIntOut[1],T6.activation.disPlaceOut[1],P7.enableOut.disTransition[6],T6.activation.normalArc[1],T6.activation.testValueInt[1],T6.activation.arcType[1],T6.activation.disPlaceIn[1],T7.activation.disPlaceOut[1],P5.enableOut.disTransition[1],T7.activation.normalArc[1],T7.activation.testValueInt[1],T7.activation.arcType[1],T7.activation.disPlaceIn[1],T4.activation.normalArc[1],T4.activation.testValueInt[1],T4.activation.arcType[1],T4.activation.disPlaceIn[1],P7.enableOut.disTransition[5],T5.activation.normalArc[1],T5.activation.testValueInt[1],T5.activation.arcType[1],T5.activation.disPlaceIn[1],P7.enableOut.disTransition[4],T3.activation.normalArc[1],T3.activation.testValueInt[1],T3.activation.arcType[1],T3.activation.disPlaceIn[1],P7.enableOut.disTransition[3],T2.activation.normalArc[1],T2.activation.testValueInt[1],T2.activation.arcType[1],T2.activation.disPlaceIn[1],P7.enableOut.disTransition[2],T1.activation.normalArc[1],T1.activation.testValueInt[1],T1.activation.arcType[1],T1.activation.disPlaceIn[1],P7.enableOut.disTransition[1],T4.activation.disPlaceOut[1],T5.activation.disPlaceOut[1],T3.activation.disPlaceOut[1],T2.activation.disPlaceOut[1],T1.activation.disPlaceOut[1],P6.enableIn.arcWeightSum,P6.enableIn.TEin[1],P6.enableIn.TEin_[1],P6.enableIn.active[1],P6.enableIn.TAein[1],P6.enableIn.arcWeight[1],P6.firingSumIn.firingSum,P6.firingSumIn.arcWeight[1],P6.firingSumIn.fire[1],P6.delayPassedIn.numtrue,P6.delayPassedIn.anytrue,P6.delayPassedIn.vec[1],P6.inTransition[1].enabledByInPlaces,P6.t,$PRE.P6.t,T6.activation.active,T6.activation.maxTokensInt[1],T6.activation.minTokensInt[1],T6.activation.arcWeightIntIn[1],T6.activation.tIntOut[1],T6.activation.tIntIn[1],T6.delayPassed,$PRE.T6.delayPassed,T6.firingTime,T6.active,T7.activation.active,T7.activation.maxTokensInt[1],T7.activation.minTokensInt[1],T7.activation.arcWeightIntOut[1],T7.activation.arcWeightIntIn[1],T7.activation.tIntOut[1],T7.activation.tIntIn[1],T7.delayPassed,$PRE.T7.delayPassed,T7.firingTime,T7.outPlaces[1].enabledByInPlaces,T7.active,P7.enableIn.arcWeightSum,P7.enableIn.TEin[1],P7.enableIn.TEin_[1],P7.enableIn.active[1],P7.enableIn.TAein[1],P7.enableOut.arcWeightSum,P7.enableOut.TEout[6],P7.enableOut.TEout[5],P7.enableOut.TEout[4],P7.enableOut.TEout[3],P7.enableOut.TEout[2],P7.enableOut.TEout[1],P7.enableOut.TEout_[6],P7.enableOut.TEout_[5],P7.enableOut.TEout_[4],P7.enableOut.TEout_[3],P7.enableOut.TEout_[2],P7.enableOut.TEout_[1],P7.enableOut.TAout[6],P7.enableOut.TAout[5],P7.enableOut.TAout[4],P7.enableOut.TAout[3],P7.enableOut.TAout[2],P7.enableOut.TAout[1],P7.enableOut.arcWeight[5],P7.enableOut.arcWeight[4],P7.enableOut.arcWeight[3],P7.enableOut.arcWeight[2],P7.enableOut.arcWeight[1],P7.firingSumOut.firingSum,P7.firingSumOut.arcWeight[6],P7.firingSumOut.arcWeight[5],P7.firingSumOut.arcWeight[4],P7.firingSumOut.arcWeight[3],P7.firingSumOut.arcWeight[2],P7.firingSumOut.arcWeight[1],P7.firingSumOut.fire[6],P7.firingSumOut.fire[5],P7.firingSumOut.fire[4],P7.firingSumOut.fire[3],P7.firingSumOut.fire[2],P7.firingSumOut.fire[1],P7.firingSumIn.firingSum,P7.firingSumIn.arcWeight[1],P7.firingSumIn.fire[1],P7.delayPassedIn.numtrue,P7.delayPassedIn.anytrue,P7.delayPassedIn.vec[1],P7.delayPassedOut.numtrue,P7.delayPassedOut.anytrue,P7.delayPassedOut.vec[6],P7.delayPassedOut.vec[5],P7.delayPassedOut.vec[4],P7.delayPassedOut.vec[3],P7.delayPassedOut.vec[2],P7.delayPassedOut.vec[1],P7.activeConOut.anychange,P7.activeConOut.vec[6],P7.activeConOut.vec[5],P7.activeConOut.vec[4],P7.activeConOut.vec[3],P7.activeConOut.vec[2],P7.activeConOut.vec[1],P7.activeOut[6],$PRE.P7.activeOut[6],P7.activeOut[5],$PRE.P7.activeOut[5],P7.activeOut[4],$PRE.P7.activeOut[4],P7.activeOut[3],$PRE.P7.activeOut[3],P7.activeOut[2],$PRE.P7.activeOut[2],P7.activeOut[1],$PRE.P7.activeOut[1],P7.t,$PRE.P7.t,P5.enableIn.arcWeightSum,P5.enableIn.TEin[1],P5.enableIn.TEin_[1],P5.enableIn.active[1],P5.enableIn.TAein[1],P5.enableIn.arcWeight[1],P5.enableOut.arcWeightSum,P5.enableOut.TEout[1],P5.enableOut.TEout_[1],P5.enableOut.TAout[1],P5.firingSumOut.firingSum,P5.firingSumOut.arcWeight[1],P5.firingSumOut.fire[1],P5.firingSumIn.firingSum,P5.firingSumIn.arcWeight[1],P5.firingSumIn.fire[1],P5.delayPassedIn.numtrue,P5.delayPassedIn.anytrue,P5.delayPassedIn.vec[1],P5.delayPassedOut.numtrue,P5.delayPassedOut.anytrue,P5.delayPassedOut.vec[1],P5.activeConOut.anychange,P5.activeConOut.vec[1],P5.activeOut[1],$PRE.P5.activeOut[1],P5.inTransition[1].enabledByInPlaces,P5.t,$PRE.P5.t,P4.enableIn.arcWeightSum,P4.enableIn.TEin[1],P4.enableIn.TEin_[1],P4.enableIn.active[1],P4.enableIn.TAein[1],P4.enableIn.arcWeight[1],P4.firingSumIn.firingSum,P4.firingSumIn.arcWeight[1],P4.firingSumIn.fire[1],P4.delayPassedIn.numtrue,P4.delayPassedIn.anytrue,P4.delayPassedIn.vec[1],P4.inTransition[1].enabledByInPlaces,P4.t,$PRE.P4.t,T5.activation.active,T5.activation.maxTokensInt[1],T5.activation.minTokensInt[1],T5.activation.tIntOut[1],T5.activation.tIntIn[1],T5.delayPassed,$PRE.T5.delayPassed,T5.firingTime,T5.active,T4.activation.active,T4.activation.maxTokensInt[1],T4.activation.minTokensInt[1],T4.activation.tIntOut[1],T4.activation.tIntIn[1],T4.delayPassed,$PRE.T4.delayPassed,T4.firingTime,T4.active,T3.activation.active,T3.activation.maxTokensInt[1],T3.activation.minTokensInt[1],T3.activation.arcWeightIntOut[1],T3.activation.tIntOut[1],T3.activation.tIntIn[1],T3.delayPassed,$PRE.T3.delayPassed,T3.firingTime,T3.outPlaces[1].enabledByInPlaces,T3.active,P3.enableIn.arcWeightSum,P3.enableIn.TEin[1],P3.enableIn.TEin_[1],P3.enableIn.active[1],P3.enableIn.TAein[1],P3.firingSumIn.firingSum,P3.firingSumIn.arcWeight[1],P3.firingSumIn.fire[1],P3.delayPassedIn.numtrue,P3.delayPassedIn.anytrue,P3.delayPassedIn.vec[1],P3.t,$PRE.P3.t,P2.enableIn.arcWeightSum,P2.enableIn.TEin[1],P2.enableIn.TEin_[1],P2.enableIn.active[1],P2.enableIn.TAein[1],P2.enableIn.arcWeight[1],P2.firingSumIn.firingSum,P2.firingSumIn.arcWeight[1],P2.firingSumIn.fire[1],P2.delayPassedIn.numtrue,P2.delayPassedIn.anytrue,P2.delayPassedIn.vec[1],P2.inTransition[1].enabledByInPlaces,P2.t,$PRE.P2.t,T2.activation.active,T2.activation.maxTokensInt[1],T2.activation.minTokensInt[1],T2.activation.tIntOut[1],T2.activation.tIntIn[1],T2.delayPassed,$PRE.T2.delayPassed,T2.firingTime,T2.active,T1.activation.active,T1.activation.maxTokensInt[1],T1.activation.minTokensInt[1],T1.activation.arcWeightIntOut[1],T1.activation.tIntOut[1],T1.activation.tIntIn[1],T1.delayPassed,$PRE.T1.delayPassed,T1.firingTime,T1.outPlaces[1].enabledByInPlaces,T1.active,P1.enableIn.arcWeightSum,P1.enableIn.TEin[1],P1.enableIn.TEin_[1],P1.enableIn.active[1],P1.enableIn.TAein[1],P1.firingSumIn.firingSum,P1.firingSumIn.arcWeight[1],P1.firingSumIn.fire[1],P1.delayPassedIn.numtrue,P1.delayPassedIn.anytrue,P1.delayPassedIn.vec[1],P1.t,$PRE.P1.t,$whenCondition14,$whenCondition13,$whenCondition12,$whenCondition11,$whenCondition10,$whenCondition9,$whenCondition8,$whenCondition7,$whenCondition6,$whenCondition18,$whenCondition19,$whenCondition20,$whenCondition21,$whenCondition31,$whenCondition32,$whenCondition33,$whenCondition34,$whenCondition35,$whenCondition36,$whenCondition43,$whenCondition44,$whenCondition45,$whenCondition46,P6.inTransition[1].emptied,P7.outTransition[6].fed,P7.outTransition[5].fed,P7.outTransition[4].fed,P7.outTransition[3].fed,P7.outTransition[2].fed,P7.outTransition[1].fed,P7.inTransition[1].emptied,P5.outTransition[1].fed,P5.inTransition[1].emptied,P4.inTransition[1].emptied,P3.inTransition[1].emptied,P2.inTransition[1].emptied,P1.inTransition[1].emptied)
 * Number of discrete states: 0 ()
 * Number of clocked states: 0 ()
 * Top-level inputs: 0
Notification: Strong component statistics for initialization (1145):
 * Single equations (assignments): 1073
 * Array equations: 2
 * Algorithm blocks: 70
 * Record equations: 0
 * When equations: 0
 * If-equations: 0
 * Equation systems (not torn): 0
 * Torn equation systems: 0
 * Mixed (continuous/discrete) equation systems: 0
Notification: Performance of prepare postOptimizeDAE: time 0.007364/0.6009, allocations: 5.372 MB / 0.6546 GB, free: 14.62 MB / 474.7 MB
Notification: Performance of postOpt lateInlineFunction (simulation): time 0.0014/0.6023, allocations: 0.5772 MB / 0.6552 GB, free: 14.04 MB / 474.7 MB
Notification: Performance of postOpt wrapFunctionCalls (simulation): time 0.2566/0.8589, allocations: 17.74 MB / 0.6725 GB, free: 154.6 MB / 474.7 MB
Notification: Performance of postOpt inlineArrayEqn (simulation): time 6.187e-05/0.859, allocations: 47.14 kB / 0.6726 GB, free: 154.6 MB / 474.7 MB
Notification: Performance of postOpt constantLinearSystem (simulation): time 1.429e-05/0.859, allocations: 0 / 0.6726 GB, free: 154.6 MB / 474.7 MB
Notification: Performance of postOpt simplifysemiLinear (simulation): time 3.001e-05/0.8591, allocations: 18.2 kB / 0.6726 GB, free: 154.6 MB / 474.7 MB
Notification: Performance of postOpt removeSimpleEquations (simulation): time 0.03822/0.8973, allocations: 25.37 MB / 0.6973 GB, free: 148 MB / 474.7 MB
Notification: Performance of postOpt simplifyComplexFunction (simulation): time 1.922e-05/0.8973, allocations: 0 / 0.6973 GB, free: 148 MB / 474.7 MB
Notification: Performance of postOpt solveSimpleEquations (simulation): time 0.001123/0.8985, allocations: 270 kB / 0.6976 GB, free: 147.9 MB / 474.7 MB
Notification: Performance of postOpt tearingSystem (simulation): time 1.654e-05/0.8985, allocations: 10.12 kB / 0.6976 GB, free: 147.9 MB / 474.7 MB
Notification: Performance of postOpt inputDerivativesUsed (simulation): time 0.0007764/0.8993, allocations: 314.5 kB / 0.6979 GB, free: 147.8 MB / 474.7 MB
Notification: Performance of postOpt calculateStrongComponentJacobians (simulation): time 1.754e-05/0.8993, allocations: 23.36 kB / 0.6979 GB, free: 147.8 MB / 474.7 MB
Notification: Performance of postOpt calculateStateSetsJacobians (simulation): time 2.956e-06/0.8993, allocations: 4 kB / 0.6979 GB, free: 147.8 MB / 474.7 MB
Notification: Performance of postOpt symbolicJacobian (simulation): time 0.02615/0.9255, allocations: 19.6 MB / 0.7171 GB, free: 127.9 MB / 474.7 MB
Notification: Performance of postOpt removeConstants (simulation): time 0.0006445/0.9262, allocations: 488.7 kB / 0.7175 GB, free: 127.6 MB / 474.7 MB
Notification: Performance of postOpt simplifyTimeIndepFuncCalls (simulation): time 0.001587/0.9278, allocations: 0.5736 MB / 0.7181 GB, free: 127 MB / 474.7 MB
Notification: Performance of postOpt simplifyAllExpressions (simulation): time 0.003946/0.9317, allocations: 0.5498 MB / 0.7186 GB, free: 126.5 MB / 474.7 MB
Notification: Performance of postOpt findZeroCrossings (simulation): time 0.003999/0.9357, allocations: 2.474 MB / 0.7211 GB, free: 124 MB / 474.7 MB
Notification: Performance of postOpt collapseArrayExpressions (simulation): time 0.0008263/0.9366, allocations: 384.7 kB / 0.7214 GB, free: 123.7 MB / 474.7 MB
Notification: Performance of sorting global known variables: time 0.002309/0.9389, allocations: 1.445 MB / 0.7228 GB, free: 122.2 MB / 474.7 MB
Notification: Performance of sort global known variables: time 3.91e-07/0.9389, allocations: 3.5 kB / 0.7228 GB, free: 122.2 MB / 474.7 MB
Notification: Performance of remove unused functions: time 0.006244/0.9452, allocations: 2.116 MB / 0.7249 GB, free: 120.1 MB / 474.7 MB
Notification: Model statistics after passing the back-end for simulation:
 * Number of independent subsystems: 6
 * Number of states: 0 ()
 * Number of discrete variables: 567 ($whenCondition1,P1.activeConOut.anychange,P1.delayPassedOut.anytrue,P1.delayPassedOut.numtrue,P1.enableOut.state128[1],P1.enableOut.state128[2],P1.enableOut.state128[3],P1.enableOut.state128[4],P1.enableOut.arcWeightSum,P1.enableOut.nremTAout,P1.enableOut.nTAout,P1.enableOut.k,P1.enableOut.posTE,P1.enableOut.randNum,P1.enableOut.sumEnablingProbTAout,P1.enableOut.endWhile,P1.enableOut.Index,P1.enableOut.benefitMax,P1.enableOut.valid,P1.enableOut.benefitLimit,$whenCondition2,P2.activeConOut.anychange,P2.delayPassedOut.anytrue,P2.delayPassedOut.numtrue,P2.enableOut.state128[1],P2.enableOut.state128[2],P2.enableOut.state128[3],P2.enableOut.state128[4],P2.enableOut.arcWeightSum,P2.enableOut.nremTAout,P2.enableOut.nTAout,P2.enableOut.k,P2.enableOut.posTE,P2.enableOut.randNum,P2.enableOut.sumEnablingProbTAout,P2.enableOut.endWhile,P2.enableOut.Index,P2.enableOut.benefitMax,P2.enableOut.valid,P2.enableOut.benefitLimit,$whenCondition3,P3.activeConOut.anychange,P3.delayPassedOut.anytrue,P3.delayPassedOut.numtrue,P3.enableOut.state128[1],P3.enableOut.state128[2],P3.enableOut.state128[3],P3.enableOut.state128[4],P3.enableOut.arcWeightSum,P3.enableOut.nremTAout,P3.enableOut.nTAout,P3.enableOut.k,P3.enableOut.posTE,P3.enableOut.randNum,P3.enableOut.sumEnablingProbTAout,P3.enableOut.endWhile,P3.enableOut.Index,P3.enableOut.benefitMax,P3.enableOut.valid,P3.enableOut.benefitLimit,$whenCondition4,P4.activeConOut.anychange,P4.delayPassedOut.anytrue,P4.delayPassedOut.numtrue,P4.enableOut.state128[1],P4.enableOut.state128[2],P4.enableOut.state128[3],P4.enableOut.state128[4],P4.enableOut.arcWeightSum,P4.enableOut.nremTAout,P4.enableOut.nTAout,P4.enableOut.k,P4.enableOut.posTE,P4.enableOut.randNum,P4.enableOut.sumEnablingProbTAout,P4.enableOut.endWhile,P4.enableOut.Index,P4.enableOut.benefitMax,P4.enableOut.valid,P4.enableOut.benefitLimit,$whenCondition5,P6.activeConOut.anychange,P6.delayPassedOut.anytrue,P6.delayPassedOut.numtrue,P6.enableOut.state128[1],P6.enableOut.state128[2],P6.enableOut.state128[3],P6.enableOut.state128[4],P6.enableOut.arcWeightSum,P6.enableOut.nremTAout,P6.enableOut.nTAout,P6.enableOut.k,P6.enableOut.posTE,P6.enableOut.randNum,P6.enableOut.sumEnablingProbTAout,P6.enableOut.endWhile,P6.enableOut.Index,P6.enableOut.benefitMax,P6.enableOut.valid,P6.enableOut.benefitLimit,T1.active,T2.active,T3.active,T4.active,T5.active,T7.active,T6.active,$whenCondition48,$whenCondition47,$whenCondition49,$whenCondition46,$whenCondition45,$whenCondition44,$whenCondition43,$whenCondition41,$whenCondition40,$whenCondition42,$whenCondition38,$whenCondition37,$whenCondition39,$whenCondition36,$whenCondition35,$whenCondition34,$whenCondition33,$whenCondition32,$whenCondition31,$whenCondition29,$whenCondition28,$whenCondition30,$whenCondition26,$whenCondition25,$whenCondition27,$whenCondition23,$whenCondition22,$whenCondition24,$whenCondition21,$whenCondition20,$whenCondition19,$whenCondition18,$whenCondition16,$whenCondition15,$whenCondition17,$whenCondition6,$whenCondition7,$whenCondition8,$whenCondition9,$whenCondition10,$whenCondition11,$whenCondition12,$whenCondition13,$whenCondition14,P1.t,P1.tokeninout,P1.delayPassedIn.vec[1],P1.delayPassedIn.anytrue,P1.delayPassedIn.numtrue,P1.firingSumIn.fire[1],P1.firingSumIn.arcWeight[1],P1.firingSumIn.firingSum,P1.firingSumOut.firingSum,P1.enableIn.TAein[1],P1.enableIn.active[1],P1.enableIn.TEin_[1],P1.enableIn.state128[1],P1.enableIn.state128[2],P1.enableIn.state128[3],P1.enableIn.state128[4],P1.enableIn.TEin[1],P1.enableIn.remTAin[1],P1.enableIn.cumEnablingProb[1],P1.enableIn.arcWeightSum,P1.enableIn.nremTAin,P1.enableIn.nTAin,P1.enableIn.k,P1.enableIn.posTE,P1.enableIn.randNum,P1.enableIn.sumEnablingProbTAin,P1.enableIn.endWhile,P1.enableIn.Index,P1.enableIn.benefitMax,P1.enableIn.valid,P1.enableIn.benefitLimit,T1.outPlaces[1].enabledByInPlaces,T1.firingTime,T1.fireTime,T1.delayPassed,T1.ani,T1.activation.tIntIn[1],T1.activation.tIntOut[1],T1.activation.arcWeightIntOut[1],T1.activation.minTokensInt[1],T1.activation.maxTokensInt[1],T1.activation.active,T2.firingTime,T2.fireTime,T2.delayPassed,T2.ani,T2.activation.tIntIn[1],T2.activation.tIntOut[1],T2.activation.minTokensInt[1],T2.activation.maxTokensInt[1],T2.activation.active,P2.t,P2.inTransition[1].enabledByInPlaces,P2.tokeninout,P2.delayPassedIn.vec[1],P2.delayPassedIn.anytrue,P2.delayPassedIn.numtrue,P2.firingSumIn.fire[1],P2.firingSumIn.arcWeight[1],P2.firingSumIn.firingSum,P2.firingSumOut.firingSum,P2.enableIn.arcWeight[1],P2.enableIn.TAein[1],P2.enableIn.active[1],P2.enableIn.TEin_[1],P2.enableIn.state128[1],P2.enableIn.state128[2],P2.enableIn.state128[3],P2.enableIn.state128[4],P2.enableIn.TEin[1],P2.enableIn.remTAin[1],P2.enableIn.cumEnablingProb[1],P2.enableIn.arcWeightSum,P2.enableIn.nremTAin,P2.enableIn.nTAin,P2.enableIn.k,P2.enableIn.posTE,P2.enableIn.randNum,P2.enableIn.sumEnablingProbTAin,P2.enableIn.endWhile,P2.enableIn.Index,P2.enableIn.benefitMax,P2.enableIn.valid,P2.enableIn.benefitLimit,P3.t,P3.tokeninout,P3.delayPassedIn.vec[1],P3.delayPassedIn.anytrue,P3.delayPassedIn.numtrue,P3.firingSumIn.fire[1],P3.firingSumIn.arcWeight[1],P3.firingSumIn.firingSum,P3.firingSumOut.firingSum,P3.enableIn.TAein[1],P3.enableIn.active[1],P3.enableIn.TEin_[1],P3.enableIn.state128[1],P3.enableIn.state128[2],P3.enableIn.state128[3],P3.enableIn.state128[4],P3.enableIn.TEin[1],P3.enableIn.remTAin[1],P3.enableIn.cumEnablingProb[1],P3.enableIn.arcWeightSum,P3.enableIn.nremTAin,P3.enableIn.nTAin,P3.enableIn.k,P3.enableIn.posTE,P3.enableIn.randNum,P3.enableIn.sumEnablingProbTAin,P3.enableIn.endWhile,P3.enableIn.Index,P3.enableIn.benefitMax,P3.enableIn.valid,P3.enableIn.benefitLimit,T3.outPlaces[1].enabledByInPlaces,T3.firingTime,T3.fireTime,T3.delayPassed,T3.ani,T3.activation.tIntIn[1],T3.activation.tIntOut[1],T3.activation.arcWeightIntOut[1],T3.activation.minTokensInt[1],T3.activation.maxTokensInt[1],T3.activation.active,T4.firingTime,T4.fireTime,T4.delayPassed,T4.ani,T4.activation.tIntIn[1],T4.activation.tIntOut[1],T4.activation.minTokensInt[1],T4.activation.maxTokensInt[1],T4.activation.active,T5.firingTime,T5.fireTime,T5.delayPassed,T5.ani,T5.activation.tIntIn[1],T5.activation.tIntOut[1],T5.activation.minTokensInt[1],T5.activation.maxTokensInt[1],T5.activation.active,P4.t,P4.inTransition[1].enabledByInPlaces,P4.tokeninout,P4.delayPassedIn.vec[1],P4.delayPassedIn.anytrue,P4.delayPassedIn.numtrue,P4.firingSumIn.fire[1],P4.firingSumIn.arcWeight[1],P4.firingSumIn.firingSum,P4.firingSumOut.firingSum,P4.enableIn.arcWeight[1],P4.enableIn.TAein[1],P4.enableIn.active[1],P4.enableIn.TEin_[1],P4.enableIn.state128[1],P4.enableIn.state128[2],P4.enableIn.state128[3],P4.enableIn.state128[4],P4.enableIn.TEin[1],P4.enableIn.remTAin[1],P4.enableIn.cumEnablingProb[1],P4.enableIn.arcWeightSum,P4.enableIn.nremTAin,P4.enableIn.nTAin,P4.enableIn.k,P4.enableIn.posTE,P4.enableIn.randNum,P4.enableIn.sumEnablingProbTAin,P4.enableIn.endWhile,P4.enableIn.Index,P4.enableIn.benefitMax,P4.enableIn.valid,P4.enableIn.benefitLimit,P5.t,P5.inTransition[1].enabledByInPlaces,P5.tokeninout,P5.activeOut[1],P5.activeConOut.vec[1],P5.activeConOut.anychange,P5.delayPassedOut.vec[1],P5.delayPassedOut.anytrue,P5.delayPassedOut.numtrue,P5.delayPassedIn.vec[1],P5.delayPassedIn.anytrue,P5.delayPassedIn.numtrue,P5.firingSumIn.fire[1],P5.firingSumIn.arcWeight[1],P5.firingSumIn.firingSum,P5.firingSumOut.fire[1],P5.firingSumOut.arcWeight[1],P5.firingSumOut.firingSum,P5.enableOut.TAout[1],P5.enableOut.TEout_[1],P5.enableOut.state128[1],P5.enableOut.state128[2],P5.enableOut.state128[3],P5.enableOut.state128[4],P5.enableOut.TEout[1],P5.enableOut.remTAout[1],P5.enableOut.cumEnablingProb[1],P5.enableOut.arcWeightSum,P5.enableOut.nremTAout,P5.enableOut.nTAout,P5.enableOut.k,P5.enableOut.posTE,P5.enableOut.randNum,P5.enableOut.sumEnablingProbTAout,P5.enableOut.endWhile,P5.enableOut.Index,P5.enableOut.benefitMax,P5.enableOut.valid,P5.enableOut.benefitLimit,P5.enableIn.arcWeight[1],P5.enableIn.TAein[1],P5.enableIn.active[1],P5.enableIn.TEin_[1],P5.enableIn.state128[1],P5.enableIn.state128[2],P5.enableIn.state128[3],P5.enableIn.state128[4],P5.enableIn.TEin[1],P5.enableIn.remTAin[1],P5.enableIn.cumEnablingProb[1],P5.enableIn.arcWeightSum,P5.enableIn.nremTAin,P5.enableIn.nTAin,P5.enableIn.k,P5.enableIn.posTE,P5.enableIn.randNum,P5.enableIn.sumEnablingProbTAin,P5.enableIn.endWhile,P5.enableIn.Index,P5.enableIn.benefitMax,P5.enableIn.valid,P5.enableIn.benefitLimit,P7.t,P7.outTransition[1].tokenInOut,P7.outTransition[2].tokenInOut,P7.outTransition[3].tokenInOut,P7.outTransition[4].tokenInOut,P7.outTransition[5].tokenInOut,P7.tokeninout,P7.activeOut[1],P7.activeOut[2],P7.activeOut[3],P7.activeOut[4],P7.activeOut[5],P7.activeOut[6],P7.activeConOut.vec[1],P7.activeConOut.vec[2],P7.activeConOut.vec[3],P7.activeConOut.vec[4],P7.activeConOut.vec[5],P7.activeConOut.vec[6],P7.activeConOut.anychange,P7.delayPassedOut.vec[1],P7.delayPassedOut.vec[2],P7.delayPassedOut.vec[3],P7.delayPassedOut.vec[4],P7.delayPassedOut.vec[5],P7.delayPassedOut.vec[6],P7.delayPassedOut.anytrue,P7.delayPassedOut.numtrue,P7.delayPassedIn.vec[1],P7.delayPassedIn.anytrue,P7.delayPassedIn.numtrue,P7.firingSumIn.fire[1],P7.firingSumIn.arcWeight[1],P7.firingSumIn.firingSum,P7.firingSumOut.fire[1],P7.firingSumOut.fire[2],P7.firingSumOut.fire[3],P7.firingSumOut.fire[4],P7.firingSumOut.fire[5],P7.firingSumOut.fire[6],P7.firingSumOut.arcWeight[1],P7.firingSumOut.arcWeight[2],P7.firingSumOut.arcWeight[3],P7.firingSumOut.arcWeight[4],P7.firingSumOut.arcWeight[5],P7.firingSumOut.arcWeight[6],P7.firingSumOut.firingSum,P7.enableOut.arcWeight[1],P7.enableOut.arcWeight[2],P7.enableOut.arcWeight[3],P7.enableOut.arcWeight[4],P7.enableOut.arcWeight[5],P7.enableOut.TAout[1],P7.enableOut.TAout[2],P7.enableOut.TAout[3],P7.enableOut.TAout[4],P7.enableOut.TAout[5],P7.enableOut.TAout[6],P7.enableOut.TEout_[1],P7.enableOut.TEout_[2],P7.enableOut.TEout_[3],P7.enableOut.TEout_[4],P7.enableOut.TEout_[5],P7.enableOut.TEout_[6],P7.enableOut.state128[1],P7.enableOut.state128[2],P7.enableOut.state128[3],P7.enableOut.state128[4],P7.enableOut.TEout[1],P7.enableOut.TEout[2],P7.enableOut.TEout[3],P7.enableOut.TEout[4],P7.enableOut.TEout[5],P7.enableOut.TEout[6],P7.enableOut.remTAout[1],P7.enableOut.remTAout[2],P7.enableOut.remTAout[3],P7.enableOut.remTAout[4],P7.enableOut.remTAout[5],P7.enableOut.remTAout[6],P7.enableOut.cumEnablingProb[1],P7.enableOut.cumEnablingProb[2],P7.enableOut.cumEnablingProb[3],P7.enableOut.cumEnablingProb[4],P7.enableOut.cumEnablingProb[5],P7.enableOut.cumEnablingProb[6],P7.enableOut.arcWeightSum,P7.enableOut.nremTAout,P7.enableOut.nTAout,P7.enableOut.k,P7.enableOut.posTE,P7.enableOut.randNum,P7.enableOut.sumEnablingProbTAout,P7.enableOut.endWhile,P7.enableOut.Index,P7.enableOut.benefitMax,P7.enableOut.valid,P7.enableOut.benefitLimit,P7.enableIn.TAein[1],P7.enableIn.active[1],P7.enableIn.TEin_[1],P7.enableIn.state128[1],P7.enableIn.state128[2],P7.enableIn.state128[3],P7.enableIn.state128[4],P7.enableIn.TEin[1],P7.enableIn.remTAin[1],P7.enableIn.cumEnablingProb[1],P7.enableIn.arcWeightSum,P7.enableIn.nremTAin,P7.enableIn.nTAin,P7.enableIn.k,P7.enableIn.posTE,P7.enableIn.randNum,P7.enableIn.sumEnablingProbTAin,P7.enableIn.endWhile,P7.enableIn.Index,P7.enableIn.benefitMax,P7.enableIn.valid,P7.enableIn.benefitLimit,T7.inPlaces[1].tokenInOut,T7.outPlaces[1].enabledByInPlaces,T7.firingTime,T7.fireTime,T7.delayPassed,T7.ani,T7.activation.tIntIn[1],T7.activation.tIntOut[1],T7.activation.arcWeightIntIn[1],T7.activation.arcWeightIntOut[1],T7.activation.minTokensInt[1],T7.activation.maxTokensInt[1],T7.activation.active,T6.inPlaces[1].tokenInOut,T6.firingTime,T6.fireTime,T6.delayPassed,T6.ani,T6.activation.tIntIn[1],T6.activation.tIntOut[1],T6.activation.arcWeightIntIn[1],T6.activation.minTokensInt[1],T6.activation.maxTokensInt[1],T6.activation.active,P6.t,P6.inTransition[1].enabledByInPlaces,P6.tokeninout,P6.delayPassedIn.vec[1],P6.delayPassedIn.anytrue,P6.delayPassedIn.numtrue,P6.firingSumIn.fire[1],P6.firingSumIn.arcWeight[1],P6.firingSumIn.firingSum,P6.firingSumOut.firingSum,P6.enableIn.arcWeight[1],P6.enableIn.TAein[1],P6.enableIn.active[1],P6.enableIn.TEin_[1],P6.enableIn.state128[1],P6.enableIn.state128[2],P6.enableIn.state128[3],P6.enableIn.state128[4],P6.enableIn.TEin[1],P6.enableIn.remTAin[1],P6.enableIn.cumEnablingProb[1],P6.enableIn.arcWeightSum,P6.enableIn.nremTAin,P6.enableIn.nTAin,P6.enableIn.k,P6.enableIn.posTE,P6.enableIn.randNum,P6.enableIn.sumEnablingProbTAin,P6.enableIn.endWhile,P6.enableIn.Index,P6.enableIn.benefitMax,P6.enableIn.valid,P6.enableIn.benefitLimit)
 * Number of discrete states: 376 (P1.firingSumOut.firingSum,P1.firingSumIn.firingSum,P2.firingSumOut.firingSum,P2.firingSumIn.firingSum,P3.firingSumOut.firingSum,P3.firingSumIn.firingSum,P4.firingSumOut.firingSum,P4.firingSumIn.firingSum,P5.firingSumOut.firingSum,P5.firingSumIn.firingSum,P7.firingSumOut.firingSum,P7.firingSumIn.firingSum,P6.firingSumOut.firingSum,P6.firingSumIn.firingSum,P7.tokeninout,P5.tokeninout,P6.t,P7.t,P7.activeOut[1],P7.activeOut[2],P7.activeOut[3],P7.activeOut[4],P7.activeOut[5],P7.activeOut[6],P5.t,P5.activeOut[1],P4.t,P3.t,P2.t,P1.t,T6.activation.active,T6.delayPassed,P6.delayPassedIn.numtrue,P6.delayPassedIn.anytrue,T7.activation.active,T7.delayPassed,P7.delayPassedIn.numtrue,P7.delayPassedIn.anytrue,P7.activeConOut.anychange,i,P7.activeConOut.vec[i],P5.delayPassedOut.numtrue,P5.delayPassedOut.anytrue,P5.activeConOut.anychange,P5.activeConOut.vec[i],P5.enableOut.TEout_[1],P5.enableOut.valid,P5.enableOut.benefitLimit,P5.enableOut.benefitMax,P5.enableOut.posTE,P5.enableOut.k,P5.enableOut.endWhile,P5.enableOut.state128[4],P5.enableOut.state128[3],P5.enableOut.state128[2],P5.enableOut.state128[1],P5.enableOut.randNum,P5.enableOut.cumEnablingProb[1],P5.enableOut.sumEnablingProbTAout,P5.enableOut.nTAout,P5.enableOut.nremTAout,P5.enableOut.remTAout[1],P5.enableOut.Index,$whenCondition10,P5.enableOut.arcWeightSum,P5.enableOut.TEout[1],P7.enableIn.TEin_[1],P7.enableIn.valid,P7.enableIn.benefitLimit,P7.enableIn.benefitMax,P7.enableIn.posTE,P7.enableIn.k,P7.enableIn.endWhile,P7.enableIn.state128[4],P7.enableIn.state128[3],P7.enableIn.state128[2],P7.enableIn.state128[1],P7.enableIn.randNum,P7.enableIn.cumEnablingProb[1],P7.enableIn.sumEnablingProbTAin,P7.enableIn.nTAin,P7.enableIn.nremTAin,P7.enableIn.remTAin[1],P7.enableIn.Index,$whenCondition13,P7.enableIn.arcWeightSum,P7.enableIn.TEin[1],T5.activation.active,T5.delayPassed,P4.delayPassedIn.numtrue,P4.delayPassedIn.anytrue,T4.activation.active,T4.delayPassed,P5.delayPassedIn.numtrue,P5.delayPassedIn.anytrue,T3.activation.active,T3.delayPassed,P3.delayPassedIn.numtrue,P3.delayPassedIn.anytrue,T2.activation.active,T2.delayPassed,P2.delayPassedIn.numtrue,P2.delayPassedIn.anytrue,T1.activation.active,T1.delayPassed,P7.delayPassedOut.numtrue,P7.delayPassedOut.anytrue,P7.enableOut.TEout_[6],P7.enableOut.TEout_[5],P7.enableOut.TEout_[4],P7.enableOut.TEout_[3],P7.enableOut.TEout_[2],P7.enableOut.TEout_[1],P7.enableOut.valid,P7.enableOut.benefitLimit,P7.enableOut.benefitMax,P7.enableOut.posTE,P7.enableOut.k,P7.enableOut.endWhile,P7.enableOut.state128[4],P7.enableOut.state128[3],P7.enableOut.state128[2],P7.enableOut.state128[1],P7.enableOut.randNum,P7.enableOut.cumEnablingProb[6],P7.enableOut.cumEnablingProb[5],P7.enableOut.cumEnablingProb[4],P7.enableOut.cumEnablingProb[3],P7.enableOut.cumEnablingProb[2],P7.enableOut.cumEnablingProb[1],P7.enableOut.sumEnablingProbTAout,P7.enableOut.nTAout,P7.enableOut.nremTAout,P7.enableOut.remTAout[6],P7.enableOut.remTAout[5],P7.enableOut.remTAout[4],P7.enableOut.remTAout[3],P7.enableOut.remTAout[2],P7.enableOut.remTAout[1],P7.enableOut.Index,$whenCondition12,P7.enableOut.arcWeightSum,P7.enableOut.TEout[6],P7.enableOut.TEout[5],P7.enableOut.TEout[4],P7.enableOut.TEout[3],P7.enableOut.TEout[2],P7.enableOut.TEout[1],P5.enableIn.TEin_[1],P5.enableIn.valid,P5.enableIn.benefitLimit,P5.enableIn.benefitMax,P5.enableIn.posTE,P5.enableIn.k,P5.enableIn.endWhile,P5.enableIn.state128[4],P5.enableIn.state128[3],P5.enableIn.state128[2],P5.enableIn.state128[1],P5.enableIn.randNum,P5.enableIn.cumEnablingProb[1],P5.enableIn.sumEnablingProbTAin,P5.enableIn.nTAin,P5.enableIn.nremTAin,P5.enableIn.remTAin[1],P5.enableIn.Index,$whenCondition11,P5.enableIn.arcWeightSum,P5.enableIn.TEin[1],P3.enableIn.TEin_[1],P3.enableIn.valid,P3.enableIn.benefitLimit,P3.enableIn.benefitMax,P3.enableIn.posTE,P3.enableIn.k,P3.enableIn.endWhile,P3.enableIn.state128[4],P3.enableIn.state128[3],P3.enableIn.state128[2],P3.enableIn.state128[1],P3.enableIn.randNum,P3.enableIn.cumEnablingProb[1],P3.enableIn.sumEnablingProbTAin,P3.enableIn.nTAin,P3.enableIn.nremTAin,P3.enableIn.remTAin[1],P3.enableIn.Index,$whenCondition8,P3.enableIn.arcWeightSum,P3.enableIn.TEin[1],P2.enableIn.TEin_[1],P2.enableIn.valid,P2.enableIn.benefitLimit,P2.enableIn.benefitMax,P2.enableIn.posTE,P2.enableIn.k,P2.enableIn.endWhile,P2.enableIn.state128[4],P2.enableIn.state128[3],P2.enableIn.state128[2],P2.enableIn.state128[1],P2.enableIn.randNum,P2.enableIn.cumEnablingProb[1],P2.enableIn.sumEnablingProbTAin,P2.enableIn.nTAin,P2.enableIn.nremTAin,P2.enableIn.remTAin[1],P2.enableIn.Index,$whenCondition7,P2.enableIn.arcWeightSum,P2.enableIn.TEin[1],P6.enableIn.TEin_[1],P6.enableIn.valid,P6.enableIn.benefitLimit,P6.enableIn.benefitMax,P6.enableIn.posTE,P6.enableIn.k,P6.enableIn.endWhile,P6.enableIn.state128[4],P6.enableIn.state128[3],P6.enableIn.state128[2],P6.enableIn.state128[1],P6.enableIn.randNum,P6.enableIn.cumEnablingProb[1],P6.enableIn.sumEnablingProbTAin,P6.enableIn.nTAin,P6.enableIn.nremTAin,P6.enableIn.remTAin[1],P6.enableIn.Index,$whenCondition14,P6.enableIn.arcWeightSum,P6.enableIn.TEin[1],P4.enableIn.TEin_[1],P4.enableIn.valid,P4.enableIn.benefitLimit,P4.enableIn.benefitMax,P4.enableIn.posTE,P4.enableIn.k,P4.enableIn.endWhile,P4.enableIn.state128[4],P4.enableIn.state128[3],P4.enableIn.state128[2],P4.enableIn.state128[1],P4.enableIn.randNum,P4.enableIn.cumEnablingProb[1],P4.enableIn.sumEnablingProbTAin,P4.enableIn.nTAin,P4.enableIn.nremTAin,P4.enableIn.remTAin[1],P4.enableIn.Index,$whenCondition9,P4.enableIn.arcWeightSum,P4.enableIn.TEin[1],P1.delayPassedIn.numtrue,P1.delayPassedIn.anytrue,P1.enableIn.TEin_[1],P1.enableIn.valid,P1.enableIn.benefitLimit,P1.enableIn.benefitMax,P1.enableIn.posTE,P1.enableIn.k,P1.enableIn.endWhile,P1.enableIn.state128[4],P1.enableIn.state128[3],P1.enableIn.state128[2],P1.enableIn.state128[1],P1.enableIn.randNum,P1.enableIn.cumEnablingProb[1],P1.enableIn.sumEnablingProbTAin,P1.enableIn.nTAin,P1.enableIn.nremTAin,P1.enableIn.remTAin[1],P1.enableIn.Index,$whenCondition6,P1.enableIn.arcWeightSum,P1.enableIn.TEin[1],P6.enableOut.benefitLimit,P6.enableOut.valid,P6.enableOut.benefitMax,P6.enableOut.Index,P6.enableOut.endWhile,P6.enableOut.sumEnablingProbTAout,P6.enableOut.state128[4],P6.enableOut.state128[3],P6.enableOut.state128[2],P6.enableOut.state128[1],P6.enableOut.randNum,P6.enableOut.posTE,P6.enableOut.k,P6.enableOut.nTAout,P6.enableOut.nremTAout,$whenCondition5,P6.enableOut.arcWeightSum,P6.delayPassedOut.numtrue,P6.delayPassedOut.anytrue,P6.activeConOut.anychange,P4.enableOut.benefitLimit,P4.enableOut.valid,P4.enableOut.benefitMax,P4.enableOut.Index,P4.enableOut.endWhile,P4.enableOut.sumEnablingProbTAout,P4.enableOut.state128[4],P4.enableOut.state128[3],P4.enableOut.state128[2],P4.enableOut.state128[1],P4.enableOut.randNum,P4.enableOut.posTE,P4.enableOut.k,P4.enableOut.nTAout,P4.enableOut.nremTAout,$whenCondition4,P4.enableOut.arcWeightSum,P4.delayPassedOut.numtrue,P4.delayPassedOut.anytrue,P4.activeConOut.anychange,P3.enableOut.benefitLimit,P3.enableOut.valid,P3.enableOut.benefitMax,P3.enableOut.Index,P3.enableOut.endWhile,P3.enableOut.sumEnablingProbTAout,P3.enableOut.state128[4],P3.enableOut.state128[3],P3.enableOut.state128[2],P3.enableOut.state128[1],P3.enableOut.randNum,P3.enableOut.posTE,P3.enableOut.k,P3.enableOut.nTAout,P3.enableOut.nremTAout,$whenCondition3,P3.enableOut.arcWeightSum,P3.delayPassedOut.numtrue,P3.delayPassedOut.anytrue,P3.activeConOut.anychange,P2.enableOut.benefitLimit,P2.enableOut.valid,P2.enableOut.benefitMax,P2.enableOut.Index,P2.enableOut.endWhile,P2.enableOut.sumEnablingProbTAout,P2.enableOut.state128[4],P2.enableOut.state128[3],P2.enableOut.state128[2],P2.enableOut.state128[1],P2.enableOut.randNum,P2.enableOut.posTE,P2.enableOut.k,P2.enableOut.nTAout,P2.enableOut.nremTAout,$whenCondition2,P2.enableOut.arcWeightSum,P2.delayPassedOut.numtrue,P2.delayPassedOut.anytrue,P2.activeConOut.anychange,P1.enableOut.benefitLimit,P1.enableOut.valid,P1.enableOut.benefitMax,P1.enableOut.Index,P1.enableOut.endWhile,P1.enableOut.sumEnablingProbTAout,P1.enableOut.state128[4],P1.enableOut.state128[3],P1.enableOut.state128[2],P1.enableOut.state128[1],P1.enableOut.randNum,P1.enableOut.posTE,P1.enableOut.k,P1.enableOut.nTAout,P1.enableOut.nremTAout,$whenCondition1,P1.enableOut.arcWeightSum,P1.delayPassedOut.numtrue,P1.delayPassedOut.anytrue,P1.activeConOut.anychange)
 * Number of clocked states: 0 ()
 * Top-level inputs: 0
Notification: Strong component statistics for simulation (338):
 * Single equations (assignments): 252
 * Array equations: 2
 * Algorithm blocks: 56
 * Record equations: 0
 * When equations: 28
 * If-equations: 0
 * Equation systems (not torn): 0
 * Torn equation systems: 0
 * Mixed (continuous/discrete) equation systems: 0
Notification: Performance of Backend phase and start with SimCode phase: time 0.002252/0.9474, allocations: 1.335 MB / 0.7262 GB, free: 118.8 MB / 474.7 MB
Notification: Performance of simCode: created initialization part: time 0.04059/0.988, allocations: 23.48 MB / 0.7491 GB, free: 94.58 MB / 474.7 MB
Notification: Performance of simCode: created event and clocks part: time 8.807e-06/0.9881, allocations: 0 / 0.7491 GB, free: 94.58 MB / 474.7 MB
Notification: Performance of simCode: created simulation system equations: time 0.02137/1.009, allocations: 28.34 MB / 0.7768 GB, free: 65.55 MB / 474.7 MB
Notification: Performance of simCode: created of all other equations (e.g. parameter, nominal, assert, etc): time 0.003659/1.013, allocations: 0.8216 MB / 0.7776 GB, free: 64.78 MB / 474.7 MB
Notification: Performance of simCode: created linear, non-linear and system jacobian parts: time 0.02337/1.037, allocations: 16.98 MB / 0.7942 GB, free: 47.88 MB / 474.7 MB
Notification: Performance of simCode: some other stuff during SimCode phase: time 0.002281/1.039, allocations: 3.057 MB / 0.7972 GB, free: 44.8 MB / 474.7 MB
Notification: Performance of simCode: alias equations: time 0.003527/1.042, allocations: 1.425 MB / 0.7986 GB, free: 43.37 MB / 474.7 MB
Notification: Performance of simCode: all other stuff during SimCode phase: time 0.0006842/1.043, allocations: 327.4 kB / 0.7989 GB, free: 43.05 MB / 474.7 MB
Notification: Performance of SimCode: time 1.703e-06/1.043, allocations: 0 / 0.7989 GB, free: 43.05 MB / 474.7 MB
Notification: Performance of Templates: time 0.367/1.41, allocations: 94.17 MB / 0.8909 GB, free: 126.3 MB / 490.7 MB
make -j1 -f PNlib_2.2_PNlib.Examples.DisTest.ConflictBeneBaB.makefile
(rm -f PNlib_2.2_PNlib.Examples.DisTest.ConflictBeneBaB.pipe ; mkfifo PNlib_2.2_PNlib.Examples.DisTest.ConflictBeneBaB.pipe ; head -c 1048576 < PNlib_2.2_PNlib.Examples.DisTest.ConflictBeneBaB.pipe >> ../files/PNlib_2.2_PNlib.Examples.DisTest.ConflictBeneBaB.sim & ./PNlib_2.2_PNlib.Examples.DisTest.ConflictBeneBaB  -abortSlowSimulation -alarm=480  -emit_protected -lv LOG_STATS > PNlib_2.2_PNlib.Examples.DisTest.ConflictBeneBaB.pipe 2>&1)
diffSimulationResults("PNlib_2.2_PNlib.Examples.DisTest.ConflictBeneBaB_res.mat","/home/runner/work/PNlib/PNlib/ReferenceFiles/PNlib.Examples.DisTest.ConflictBeneBaB.mat","../files/PNlib_2.2_PNlib.Examples.DisTest.ConflictBeneBaB.diff",relTol=0.003,relTolDiffMinMax=0.003,rangeDelta=0.001)
Reference file matches
