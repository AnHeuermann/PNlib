Running: ./testmodel.py --libraries=/home/runner/.openmodelica/libraries/ --ompython_omhome= PNlib_2.2_PNlib.Examples.DisTest.PrioTest.conf.json
loadFile("/home/runner/.openmodelica/libraries/ModelicaServices 4.0.0+maint.om/package.mo", uses=false)
loadFile("/home/runner/.openmodelica/libraries/Complex 4.0.0+maint.om/package.mo", uses=false)
loadFile("/home/runner/.openmodelica/libraries/Modelica 4.0.0+maint.om/package.mo", uses=false)
loadFile("/home/runner/work/PNlib/PNlib/PNlib/package.mo", uses=false)
Using package PNlib with version 2.2 (/home/runner/work/PNlib/PNlib/PNlib/package.mo)
Using package Modelica with version 4.0.0 (/home/runner/.openmodelica/libraries/Modelica 4.0.0+maint.om/package.mo)
Using package Complex with version 4.0.0 (/home/runner/.openmodelica/libraries/Complex 4.0.0+maint.om/package.mo)
Using package ModelicaServices with version 4.0.0 (/home/runner/.openmodelica/libraries/ModelicaServices 4.0.0+maint.om/package.mo)
Running command: translateModel(PNlib.Examples.DisTest.PrioTest,tolerance=1e-06,outputFormat="mat",numberOfIntervals=5000,variableFilter="P1.t|P2.t|P3.t|P4.t|P5.t|T1.active|T1.fire|T2.active|T2.fire|T3.active|T3.fire|T4.active|T4.fire|T5.active|T5.fire|time",fileNamePrefix="PNlib_2.2_PNlib.Examples.DisTest.PrioTest")
translateModel(PNlib.Examples.DisTest.PrioTest,tolerance=1e-06,outputFormat="mat",numberOfIntervals=5000,variableFilter="P1.t|P2.t|P3.t|P4.t|P5.t|T1.active|T1.fire|T2.active|T2.fire|T3.active|T3.fire|T4.active|T4.fire|T5.active|T5.fire|time",fileNamePrefix="PNlib_2.2_PNlib.Examples.DisTest.PrioTest")
Notification: Performance of loadFile(/home/runner/.openmodelica/libraries/ModelicaServices 4.0.0+maint.om/package.mo): time 0.001193/0.001193, allocations: 90.94 kB / 15.67 MB, free: 5.301 MB / 13.93 MB
Notification: Performance of loadFile(/home/runner/.openmodelica/libraries/Complex 4.0.0+maint.om/package.mo): time 0.001385/0.001385, allocations: 184 kB / 16.59 MB, free: 4.527 MB / 13.93 MB
Notification: Performance of loadFile(/home/runner/.openmodelica/libraries/Modelica 4.0.0+maint.om/package.mo): time 1.729/1.729, allocations: 222.1 MB / 239.5 MB, free: 11.01 MB / 202.7 MB
Notification: Performance of loadFile(/home/runner/work/PNlib/PNlib/PNlib/package.mo): time 0.09606/0.09606, allocations: 16.58 MB / 306.3 MB, free: 10.48 MB / 250.7 MB
Notification: Performance of FrontEnd - loaded program: time 0.0004547/0.0004547, allocations: 17.2 kB / 371.4 MB, free: 45.54 MB / 298.7 MB
Notification: Performance of FrontEnd - Absyn->SCode: time 0.07699/0.07746, allocations: 53.46 MB / 424.8 MB, free: 5.285 MB / 298.7 MB
Notification: Performance of NFInst.instantiate(PNlib.Examples.DisTest.PrioTest): time 0.005651/0.08315, allocations: 5.725 MB / 430.5 MB, free: 15.54 MB / 314.7 MB
Notification: Performance of NFInst.instExpressions: time 0.008682/0.09186, allocations: 4.909 MB / 435.5 MB, free: 10.63 MB / 314.7 MB
Notification: Performance of NFInst.updateImplicitVariability: time 0.0009487/0.09286, allocations: 39.81 kB / 435.5 MB, free: 10.59 MB / 314.7 MB
Notification: Performance of NFTyping.typeComponents: time 0.0009358/0.09381, allocations: 0.5269 MB / 436 MB, free: 10.06 MB / 314.7 MB
Notification: Performance of NFTyping.typeBindings: time 0.001226/0.09505, allocations: 0.5618 MB / 436.6 MB, free: 9.492 MB / 314.7 MB
Notification: Performance of NFTyping.typeClassSections: time 0.004083/0.09914, allocations: 2.593 MB / 439.2 MB, free: 6.898 MB / 314.7 MB
Notification: Performance of NFFlatten.flatten: time 0.006515/0.1057, allocations: 7.36 MB / 446.5 MB, free: 15.52 MB / 330.7 MB
Notification: Performance of NFFlatten.resolveConnections: time 0.001237/0.1069, allocations: 1.126 MB / 447.7 MB, free: 14.34 MB / 330.7 MB
Notification: Performance of NFEvalConstants.evaluate: time 0.002628/0.1096, allocations: 2.785 MB / 450.4 MB, free: 11.55 MB / 330.7 MB
Notification: Performance of NFSimplifyModel.simplify: time 0.001674/0.1113, allocations: 1.94 MB / 452.4 MB, free: 9.602 MB / 330.7 MB
Notification: Performance of NFPackage.collectConstants: time 0.0008263/0.1121, allocations: 0.4961 MB / 452.9 MB, free: 9.105 MB / 330.7 MB
Notification: Performance of NFFlatten.collectFunctions: time 0.001471/0.1136, allocations: 1.14 MB / 454 MB, free: 7.965 MB / 330.7 MB
Notification: Performance of NFScalarize.scalarize: time 0.0008259/0.1144, allocations: 0.8796 MB / 454.9 MB, free: 7.082 MB / 330.7 MB
Notification: Performance of NFVerifyModel.verify: time 0.001962/0.1164, allocations: 2.233 MB / 457.1 MB, free: 4.84 MB / 330.7 MB
Notification: Performance of NFConvertDAE.convert: time 0.005235/0.1217, allocations: 5.57 MB / 462.7 MB, free: 15.25 MB / 346.7 MB
Notification: Performance of FrontEnd - DAE generated: time 5.31e-06/0.1217, allocations: 0 / 462.7 MB, free: 15.25 MB / 346.7 MB
Notification: Performance of FrontEnd: time 1.824e-06/0.1217, allocations: 0 / 462.7 MB, free: 15.25 MB / 346.7 MB
Notification: Performance of Transformations before backend: time 6.161e-05/0.1218, allocations: 0 / 462.7 MB, free: 15.25 MB / 346.7 MB
Notification: Model statistics after passing the front-end and creating the data structures used by the back-end:
 * Number of equations: 1090
 * Number of variables: 1090
Notification: Performance of Generate backend data structure: time 0.007913/0.1297, allocations: 5.627 MB / 468.3 MB, free: 9.227 MB / 346.7 MB
Notification: Performance of prepare preOptimizeDAE: time 3.974e-05/0.1297, allocations: 8.031 kB / 468.3 MB, free: 9.219 MB / 346.7 MB
Notification: Performance of preOpt normalInlineFunction (simulation): time 0.001725/0.1315, allocations: 0.5188 MB / 468.9 MB, free: 8.695 MB / 346.7 MB
Notification: Performance of preOpt evaluateParameters (simulation): time 0.002684/0.1342, allocations: 1.662 MB / 470.5 MB, free: 6.984 MB / 346.7 MB
Notification: Performance of preOpt simplifyIfEquations (simulation): time 0.0003818/0.1346, allocations: 0.58 MB / 471.1 MB, free: 6.348 MB / 346.7 MB
Notification: Performance of preOpt expandDerOperator (simulation): time 0.0009183/0.1355, allocations: 479.9 kB / 471.6 MB, free: 5.879 MB / 346.7 MB
Notification: Performance of preOpt clockPartitioning (simulation): time 0.01366/0.1492, allocations: 8.402 MB / 480 MB, free: 13.06 MB / 362.7 MB
Notification: Performance of preOpt findStateOrder (simulation): time 7.962e-05/0.1493, allocations: 15.88 kB / 480 MB, free: 13.05 MB / 362.7 MB
Notification: Performance of preOpt replaceEdgeChange (simulation): time 0.0005507/0.1499, allocations: 231.9 kB / 480.2 MB, free: 12.82 MB / 362.7 MB
Notification: Performance of preOpt inlineArrayEqn (simulation): time 0.0007634/0.1506, allocations: 417.2 kB / 480.6 MB, free: 12.41 MB / 362.7 MB
Notification: Performance of preOpt removeEqualRHS (simulation): time 0.0109/0.1615, allocations: 5.916 MB / 486.5 MB, free: 6.48 MB / 362.7 MB
Notification: Performance of preOpt removeSimpleEquations (simulation): time 0.02186/0.1834, allocations: 18.68 MB / 0.4934 GB, free: 3.297 MB / 378.7 MB
Notification: Performance of preOpt comSubExp (simulation): time 0.224/0.4075, allocations: 9.519 MB / 0.5027 GB, free: 73.04 MB / 378.7 MB
Notification: Performance of preOpt resolveLoops (simulation): time 0.008908/0.4164, allocations: 9.03 MB / 0.5115 GB, free: 68 MB / 378.7 MB
Notification: Performance of preOpt evalFunc (simulation): time 0.0001554/0.4166, allocations: 109.3 kB / 0.5116 GB, free: 67.9 MB / 378.7 MB
Notification: Performance of preOpt encapsulateWhenConditions (simulation): time 0.008523/0.4251, allocations: 5.209 MB / 0.5167 GB, free: 65.85 MB / 378.7 MB
Notification: Performance of pre-optimization done (n=437): time 6.703e-06/0.4252, allocations: 0.5 kB / 0.5167 GB, free: 65.85 MB / 378.7 MB
Notification: Performance of matching and sorting (n=437): time 0.02049/0.4457, allocations: 14.88 MB / 0.5312 GB, free: 54.61 MB / 378.7 MB
Notification: Performance of inlineWhenForInitialization (initialization): time 0.0009607/0.4467, allocations: 2.782 MB / 0.5339 GB, free: 51.34 MB / 378.7 MB
Notification: Performance of selectInitializationVariablesDAE (initialization): time 0.002155/0.4488, allocations: 1.891 MB / 0.5358 GB, free: 49.54 MB / 378.7 MB
Notification: Performance of collectPreVariables (initialization): time 0.0004191/0.4493, allocations: 249.6 kB / 0.536 GB, free: 49.29 MB / 378.7 MB
Notification: Performance of collectInitialEqns (initialization): time 0.0007546/0.45, allocations: 1.267 MB / 0.5373 GB, free: 48.07 MB / 378.7 MB
Notification: Performance of collectInitialBindings (initialization): time 0.0007619/0.4508, allocations: 1.082 MB / 0.5383 GB, free: 47.02 MB / 378.7 MB
Notification: Performance of simplifyInitialFunctions (initialization): time 0.001474/0.4523, allocations: 1.305 MB / 0.5396 GB, free: 45.71 MB / 378.7 MB
Notification: Performance of setup shared object (initialization): time 4.036e-05/0.4523, allocations: 303.6 kB / 0.5399 GB, free: 45.41 MB / 378.7 MB
Notification: Performance of preBalanceInitialSystem (initialization): time 0.003452/0.4558, allocations: 2.424 MB / 0.5422 GB, free: 42.98 MB / 378.7 MB
Notification: Performance of partitionIndependentBlocks (initialization): time 0.004231/0.46, allocations: 4.611 MB / 0.5467 GB, free: 37.48 MB / 378.7 MB
Notification: Performance of analyzeInitialSystem (initialization): time 0.01311/0.4732, allocations: 13.75 MB / 0.5602 GB, free: 22 MB / 378.7 MB
Notification: Performance of solveInitialSystemEqSystem (initialization): time 7.341e-05/0.4733, allocations: 16 kB / 0.5602 GB, free: 21.99 MB / 378.7 MB
Notification: Performance of matching and sorting (n=858) (initialization): time 0.01272/0.486, allocations: 9.816 MB / 0.5698 GB, free: 11.82 MB / 378.7 MB
Notification: Performance of prepare postOptimizeDAE: time 0.0005785/0.4866, allocations: 1.625 MB / 0.5714 GB, free: 9.891 MB / 378.7 MB
Notification: Performance of postOpt simplifyComplexFunction (initialization): time 7.473e-05/0.4867, allocations: 68 kB / 0.5714 GB, free: 9.824 MB / 378.7 MB
Notification: Performance of postOpt tearingSystem (initialization): time 9.335e-05/0.4868, allocations: 103.9 kB / 0.5715 GB, free: 9.723 MB / 378.7 MB
Notification: Performance of postOpt solveSimpleEquations (initialization): time 0.002261/0.489, allocations: 0.7248 MB / 0.5722 GB, free: 8.996 MB / 378.7 MB
Notification: Performance of postOpt calculateStrongComponentJacobians (initialization): time 9.427e-05/0.4891, allocations: 147 kB / 0.5724 GB, free: 8.855 MB / 378.7 MB
Notification: Performance of postOpt simplifyAllExpressions (initialization): time 0.00308/0.4922, allocations: 0.7279 MB / 0.5731 GB, free: 8.121 MB / 378.7 MB
Notification: Performance of postOpt collapseArrayExpressions (initialization): time 0.0004303/0.4927, allocations: 316 kB / 0.5734 GB, free: 7.812 MB / 378.7 MB
Warning: Assuming fixed start value for the following 125 variables:
         P5.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P5.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P5.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P5.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P5.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P5.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P5.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P5.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P5.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P5.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P4.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P4.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P4.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P4.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P4.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P4.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P4.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P4.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P4.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P4.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P3.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P3.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P3.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P3.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P3.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P3.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P3.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P3.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P3.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P3.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P2.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P2.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P2.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P2.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P2.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P2.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P2.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P2.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P2.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P2.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P1.enableIn.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P1.enableIn.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P1.enableIn.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P1.enableIn.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P1.enableIn.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P1.enableIn.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P1.enableIn.sumEnablingProbTAin:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active input transitions" type: Real
         P1.enableIn.nTAin:DISCRETE(fixed = true protected = true )  "number ofactive input transitions" type: Integer
         P1.enableIn.nremTAin:DISCRETE(fixed = true protected = true )  "number of remaining active input transitions" type: Integer
         P1.enableIn.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P1.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P1.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P1.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P1.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P1.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P1.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P1.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P1.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P1.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P1.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P5.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P5.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P4.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P4.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P3.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P3.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P2.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P2.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         T5.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T5.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         T4.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T4.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         T3.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T3.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         T2.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T2.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         T1.ani:DISCRETE(fixed = true protected = true )  "for transition animation" type: Boolean
         T1.fireTime:DISCRETE(fixed = true protected = true )  "for transition animation" type: Real
         P1.firingSumOut.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P1.firingSumIn.firingSum:DISCRETE(fixed = true protected = true )  "firing sum" type: Integer
         P5.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P5.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P5.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P5.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P5.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P5.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P5.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P5.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P5.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P5.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P4.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P4.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P4.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P4.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P4.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P4.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P4.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P4.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P4.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P4.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P3.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P3.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P3.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P3.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P3.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P3.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P3.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P3.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P3.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P3.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         P2.enableOut.benefitLimit:DISCRETE(fixed = true protected = true )  "best valid benefit" type: Real
         P2.enableOut.valid:DISCRETE(fixed = true protected = true )  "valid solution" type: Boolean
         P2.enableOut.benefitMax:DISCRETE(fixed = true protected = true )  "theoretical benefit" type: Real
         P2.enableOut.Index:DISCRETE(fixed = true protected = true )  "priority Index" type: Integer
         P2.enableOut.endWhile:DISCRETE(fixed = true protected = true )  type: Boolean
         P2.enableOut.sumEnablingProbTAout:DISCRETE(fixed = true protected = true )  "sum of the enabling probabilities of the active output transitions" type: Real
         P2.enableOut.posTE:DISCRETE(fixed = true protected = true )  "possible enabled transition" type: Integer
         P2.enableOut.k:DISCRETE(fixed = true protected = true )  "iteration index" type: Integer
         P2.enableOut.nTAout:DISCRETE(fixed = true protected = true )  "number of active output transitions" type: Integer
         P2.enableOut.nremTAout:DISCRETE(fixed = true protected = true )  "number of remaining active output transitions" type: Integer
         T5.firingTime:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
         T4.firingTime:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
         T3.firingTime:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
         T2.firingTime:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
         T1.firingTime:DISCRETE(fixed = true protected = true )  "next putative firing time" type: Real
Notification: Model statistics after passing the back-end for initialization:
 * Number of independent subsystems: 294
 * Number of states: 0 ()
 * Number of discrete variables: 711 ($PRE.P5.enableIn.valid,P5.enableIn.valid,$PRE.P5.enableIn.benefitLimit,P5.enableIn.benefitLimit,$PRE.P5.enableIn.benefitMax,P5.enableIn.benefitMax,$PRE.P5.enableIn.posTE,P5.enableIn.posTE,$PRE.P5.enableIn.k,P5.enableIn.k,$PRE.P5.enableIn.endWhile,P5.enableIn.endWhile,P5.enableIn.randNum,$PRE.P5.enableIn.randNum,P5.enableIn.state128[4],$PRE.P5.enableIn.state128[4],P5.enableIn.state128[3],$PRE.P5.enableIn.state128[3],P5.enableIn.state128[2],$PRE.P5.enableIn.state128[2],P5.enableIn.state128[1],$PRE.P5.enableIn.state128[1],P5.enableIn.cumEnablingProb[1],$PRE.P5.enableIn.cumEnablingProb[1],$PRE.P5.enableIn.sumEnablingProbTAin,P5.enableIn.sumEnablingProbTAin,$PRE.P5.enableIn.nTAin,P5.enableIn.nTAin,$PRE.P5.enableIn.nremTAin,P5.enableIn.nremTAin,P5.enableIn.remTAin[1],$PRE.P5.enableIn.remTAin[1],$PRE.P5.enableIn.Index,P5.enableIn.Index,$PRE.P4.enableIn.valid,P4.enableIn.valid,$PRE.P4.enableIn.benefitLimit,P4.enableIn.benefitLimit,$PRE.P4.enableIn.benefitMax,P4.enableIn.benefitMax,$PRE.P4.enableIn.posTE,P4.enableIn.posTE,$PRE.P4.enableIn.k,P4.enableIn.k,$PRE.P4.enableIn.endWhile,P4.enableIn.endWhile,P4.enableIn.randNum,$PRE.P4.enableIn.randNum,P4.enableIn.state128[4],$PRE.P4.enableIn.state128[4],P4.enableIn.state128[3],$PRE.P4.enableIn.state128[3],P4.enableIn.state128[2],$PRE.P4.enableIn.state128[2],P4.enableIn.state128[1],$PRE.P4.enableIn.state128[1],P4.enableIn.cumEnablingProb[1],$PRE.P4.enableIn.cumEnablingProb[1],$PRE.P4.enableIn.sumEnablingProbTAin,P4.enableIn.sumEnablingProbTAin,$PRE.P4.enableIn.nTAin,P4.enableIn.nTAin,$PRE.P4.enableIn.nremTAin,P4.enableIn.nremTAin,P4.enableIn.remTAin[1],$PRE.P4.enableIn.remTAin[1],$PRE.P4.enableIn.Index,P4.enableIn.Index,$PRE.P3.enableIn.valid,P3.enableIn.valid,$PRE.P3.enableIn.benefitLimit,P3.enableIn.benefitLimit,$PRE.P3.enableIn.benefitMax,P3.enableIn.benefitMax,$PRE.P3.enableIn.posTE,P3.enableIn.posTE,$PRE.P3.enableIn.k,P3.enableIn.k,$PRE.P3.enableIn.endWhile,P3.enableIn.endWhile,P3.enableIn.randNum,$PRE.P3.enableIn.randNum,P3.enableIn.state128[4],$PRE.P3.enableIn.state128[4],P3.enableIn.state128[3],$PRE.P3.enableIn.state128[3],P3.enableIn.state128[2],$PRE.P3.enableIn.state128[2],P3.enableIn.state128[1],$PRE.P3.enableIn.state128[1],P3.enableIn.cumEnablingProb[1],$PRE.P3.enableIn.cumEnablingProb[1],$PRE.P3.enableIn.sumEnablingProbTAin,P3.enableIn.sumEnablingProbTAin,$PRE.P3.enableIn.nTAin,P3.enableIn.nTAin,$PRE.P3.enableIn.nremTAin,P3.enableIn.nremTAin,P3.enableIn.remTAin[1],$PRE.P3.enableIn.remTAin[1],$PRE.P3.enableIn.Index,P3.enableIn.Index,$PRE.P2.enableIn.valid,P2.enableIn.valid,$PRE.P2.enableIn.benefitLimit,P2.enableIn.benefitLimit,$PRE.P2.enableIn.benefitMax,P2.enableIn.benefitMax,$PRE.P2.enableIn.posTE,P2.enableIn.posTE,$PRE.P2.enableIn.k,P2.enableIn.k,$PRE.P2.enableIn.endWhile,P2.enableIn.endWhile,P2.enableIn.randNum,$PRE.P2.enableIn.randNum,P2.enableIn.state128[4],$PRE.P2.enableIn.state128[4],P2.enableIn.state128[3],$PRE.P2.enableIn.state128[3],P2.enableIn.state128[2],$PRE.P2.enableIn.state128[2],P2.enableIn.state128[1],$PRE.P2.enableIn.state128[1],P2.enableIn.cumEnablingProb[1],$PRE.P2.enableIn.cumEnablingProb[1],$PRE.P2.enableIn.sumEnablingProbTAin,P2.enableIn.sumEnablingProbTAin,$PRE.P2.enableIn.nTAin,P2.enableIn.nTAin,$PRE.P2.enableIn.nremTAin,P2.enableIn.nremTAin,P2.enableIn.remTAin[1],$PRE.P2.enableIn.remTAin[1],$PRE.P2.enableIn.Index,P2.enableIn.Index,$PRE.P1.enableIn.valid,P1.enableIn.valid,$PRE.P1.enableIn.benefitLimit,P1.enableIn.benefitLimit,$PRE.P1.enableIn.benefitMax,P1.enableIn.benefitMax,$PRE.P1.enableIn.posTE,P1.enableIn.posTE,$PRE.P1.enableIn.k,P1.enableIn.k,$PRE.P1.enableIn.endWhile,P1.enableIn.endWhile,P1.enableIn.randNum,$PRE.P1.enableIn.randNum,P1.enableIn.state128[4],$PRE.P1.enableIn.state128[4],P1.enableIn.state128[3],$PRE.P1.enableIn.state128[3],P1.enableIn.state128[2],$PRE.P1.enableIn.state128[2],P1.enableIn.state128[1],$PRE.P1.enableIn.state128[1],P1.enableIn.cumEnablingProb[1],$PRE.P1.enableIn.cumEnablingProb[1],$PRE.P1.enableIn.sumEnablingProbTAin,P1.enableIn.sumEnablingProbTAin,$PRE.P1.enableIn.nTAin,P1.enableIn.nTAin,$PRE.P1.enableIn.nremTAin,P1.enableIn.nremTAin,P1.enableIn.remTAin[1],$PRE.P1.enableIn.remTAin[1],$PRE.P1.enableIn.Index,P1.enableIn.Index,$PRE.P1.enableOut.valid,P1.enableOut.valid,$PRE.P1.enableOut.benefitLimit,P1.enableOut.benefitLimit,$PRE.P1.enableOut.benefitMax,P1.enableOut.benefitMax,$PRE.P1.enableOut.posTE,P1.enableOut.posTE,$PRE.P1.enableOut.k,P1.enableOut.k,$PRE.P1.enableOut.endWhile,P1.enableOut.endWhile,P1.enableOut.randNum,$PRE.P1.enableOut.randNum,P1.enableOut.state128[4],$PRE.P1.enableOut.state128[4],P1.enableOut.state128[3],$PRE.P1.enableOut.state128[3],P1.enableOut.state128[2],$PRE.P1.enableOut.state128[2],P1.enableOut.state128[1],$PRE.P1.enableOut.state128[1],P1.enableOut.cumEnablingProb[4],$PRE.P1.enableOut.cumEnablingProb[4],P1.enableOut.cumEnablingProb[3],$PRE.P1.enableOut.cumEnablingProb[3],P1.enableOut.cumEnablingProb[2],$PRE.P1.enableOut.cumEnablingProb[2],P1.enableOut.cumEnablingProb[1],$PRE.P1.enableOut.cumEnablingProb[1],$PRE.P1.enableOut.sumEnablingProbTAout,P1.enableOut.sumEnablingProbTAout,$PRE.P1.enableOut.nTAout,P1.enableOut.nTAout,$PRE.P1.enableOut.nremTAout,P1.enableOut.nremTAout,P1.enableOut.remTAout[4],$PRE.P1.enableOut.remTAout[4],P1.enableOut.remTAout[3],$PRE.P1.enableOut.remTAout[3],P1.enableOut.remTAout[2],$PRE.P1.enableOut.remTAout[2],P1.enableOut.remTAout[1],$PRE.P1.enableOut.remTAout[1],$PRE.P1.enableOut.Index,P1.enableOut.Index,$PRE.P1.reStart,$whenCondition35,$PRE.P2.reStart,$whenCondition22,$PRE.P3.reStart,$whenCondition19,$PRE.P4.reStart,$whenCondition16,$PRE.P5.reStart,$whenCondition13,$PRE.P1.tokeninout,P1.outTransition[4].tokenInOut,P1.outTransition[3].tokenInOut,P1.outTransition[2].tokenInOut,P1.outTransition[1].tokenInOut,$PRE.P5.firingSumOut.firingSum,$PRE.P5.firingSumIn.firingSum,P5.tokeninout,$whenCondition11,$whenCondition12,$PRE.P4.firingSumOut.firingSum,$PRE.P4.firingSumIn.firingSum,P4.tokeninout,$whenCondition14,$whenCondition15,$PRE.P3.firingSumOut.firingSum,$PRE.P3.firingSumIn.firingSum,P3.tokeninout,$whenCondition17,$whenCondition18,$PRE.P2.firingSumOut.firingSum,$PRE.P2.firingSumIn.firingSum,P2.tokeninout,$whenCondition20,$whenCondition21,$PRE.T5.ani,$PRE.T5.fireTime,T5.ani,T5.fireTime,$PRE.T4.ani,$PRE.T4.fireTime,T4.ani,T4.fireTime,$PRE.T3.ani,$PRE.T3.fireTime,T3.ani,T3.fireTime,$PRE.T2.ani,$PRE.T2.fireTime,T2.ani,T2.fireTime,$PRE.T1.ani,$PRE.T1.fireTime,T1.ani,T1.fireTime,$PRE.P1.firingSumOut.firingSum,$PRE.P1.firingSumIn.firingSum,P1.tokeninout,$whenCondition33,$whenCondition34,P5.firingSumOut.firingSum,P4.firingSumOut.firingSum,P3.firingSumOut.firingSum,P2.firingSumOut.firingSum,$PRE.P5.enableOut.benefitLimit,P5.enableOut.benefitLimit,$PRE.P5.enableOut.valid,P5.enableOut.valid,$PRE.P5.enableOut.benefitMax,P5.enableOut.benefitMax,$PRE.P5.enableOut.Index,P5.enableOut.Index,$PRE.P5.enableOut.endWhile,P5.enableOut.endWhile,$PRE.P5.enableOut.sumEnablingProbTAout,P5.enableOut.sumEnablingProbTAout,P5.enableOut.randNum,$PRE.P5.enableOut.randNum,P5.enableOut.state128[4],$PRE.P5.enableOut.state128[4],P5.enableOut.state128[3],$PRE.P5.enableOut.state128[3],P5.enableOut.state128[2],$PRE.P5.enableOut.state128[2],P5.enableOut.state128[1],$PRE.P5.enableOut.state128[1],$PRE.P5.enableOut.posTE,P5.enableOut.posTE,$PRE.P5.enableOut.k,P5.enableOut.k,$PRE.P5.enableOut.nTAout,P5.enableOut.nTAout,$PRE.P5.enableOut.nremTAout,P5.enableOut.nremTAout,P5.enableOut.arcWeightSum,$PRE.P5.enableOut.arcWeightSum,P5.delayPassedOut.numtrue,P5.delayPassedOut.anytrue,P5.activeConOut.anychange,$whenCondition4,$PRE.P4.enableOut.benefitLimit,P4.enableOut.benefitLimit,$PRE.P4.enableOut.valid,P4.enableOut.valid,$PRE.P4.enableOut.benefitMax,P4.enableOut.benefitMax,$PRE.P4.enableOut.Index,P4.enableOut.Index,$PRE.P4.enableOut.endWhile,P4.enableOut.endWhile,$PRE.P4.enableOut.sumEnablingProbTAout,P4.enableOut.sumEnablingProbTAout,P4.enableOut.randNum,$PRE.P4.enableOut.randNum,P4.enableOut.state128[4],$PRE.P4.enableOut.state128[4],P4.enableOut.state128[3],$PRE.P4.enableOut.state128[3],P4.enableOut.state128[2],$PRE.P4.enableOut.state128[2],P4.enableOut.state128[1],$PRE.P4.enableOut.state128[1],$PRE.P4.enableOut.posTE,P4.enableOut.posTE,$PRE.P4.enableOut.k,P4.enableOut.k,$PRE.P4.enableOut.nTAout,P4.enableOut.nTAout,$PRE.P4.enableOut.nremTAout,P4.enableOut.nremTAout,P4.enableOut.arcWeightSum,$PRE.P4.enableOut.arcWeightSum,P4.delayPassedOut.numtrue,P4.delayPassedOut.anytrue,P4.activeConOut.anychange,$whenCondition3,$PRE.P3.enableOut.benefitLimit,P3.enableOut.benefitLimit,$PRE.P3.enableOut.valid,P3.enableOut.valid,$PRE.P3.enableOut.benefitMax,P3.enableOut.benefitMax,$PRE.P3.enableOut.Index,P3.enableOut.Index,$PRE.P3.enableOut.endWhile,P3.enableOut.endWhile,$PRE.P3.enableOut.sumEnablingProbTAout,P3.enableOut.sumEnablingProbTAout,P3.enableOut.randNum,$PRE.P3.enableOut.randNum,P3.enableOut.state128[4],$PRE.P3.enableOut.state128[4],P3.enableOut.state128[3],$PRE.P3.enableOut.state128[3],P3.enableOut.state128[2],$PRE.P3.enableOut.state128[2],P3.enableOut.state128[1],$PRE.P3.enableOut.state128[1],$PRE.P3.enableOut.posTE,P3.enableOut.posTE,$PRE.P3.enableOut.k,P3.enableOut.k,$PRE.P3.enableOut.nTAout,P3.enableOut.nTAout,$PRE.P3.enableOut.nremTAout,P3.enableOut.nremTAout,P3.enableOut.arcWeightSum,$PRE.P3.enableOut.arcWeightSum,P3.delayPassedOut.numtrue,P3.delayPassedOut.anytrue,P3.activeConOut.anychange,$whenCondition2,$PRE.P2.enableOut.benefitLimit,P2.enableOut.benefitLimit,$PRE.P2.enableOut.valid,P2.enableOut.valid,$PRE.P2.enableOut.benefitMax,P2.enableOut.benefitMax,$PRE.P2.enableOut.Index,P2.enableOut.Index,$PRE.P2.enableOut.endWhile,P2.enableOut.endWhile,$PRE.P2.enableOut.sumEnablingProbTAout,P2.enableOut.sumEnablingProbTAout,P2.enableOut.randNum,$PRE.P2.enableOut.randNum,P2.enableOut.state128[4],$PRE.P2.enableOut.state128[4],P2.enableOut.state128[3],$PRE.P2.enableOut.state128[3],P2.enableOut.state128[2],$PRE.P2.enableOut.state128[2],P2.enableOut.state128[1],$PRE.P2.enableOut.state128[1],$PRE.P2.enableOut.posTE,P2.enableOut.posTE,$PRE.P2.enableOut.k,P2.enableOut.k,$PRE.P2.enableOut.nTAout,P2.enableOut.nTAout,$PRE.P2.enableOut.nremTAout,P2.enableOut.nremTAout,P2.enableOut.arcWeightSum,$PRE.P2.enableOut.arcWeightSum,P2.delayPassedOut.numtrue,P2.delayPassedOut.anytrue,P2.activeConOut.anychange,$whenCondition1,P5.inTransition[1].disPlace,T5.outPlaces[1].disTransition,P5.reStart,P4.inTransition[1].disPlace,T4.outPlaces[1].disTransition,P4.reStart,P3.inTransition[1].disPlace,T3.outPlaces[1].disTransition,P3.reStart,P2.inTransition[1].disPlace,T2.outPlaces[1].disTransition,P2.reStart,T5.firingCon,T5.inPlaces[1].disTransition,P1.outTransition[4].normalArc,P1.outTransition[4].testValueint,P1.outTransition[4].arcType,P1.outTransition[4].disPlace,T4.firingCon,T4.inPlaces[1].disTransition,P1.outTransition[3].normalArc,P1.outTransition[3].testValueint,P1.outTransition[3].arcType,P1.outTransition[3].disPlace,T3.firingCon,T3.inPlaces[1].disTransition,P1.outTransition[2].normalArc,P1.outTransition[2].testValueint,P1.outTransition[2].arcType,P1.outTransition[2].disPlace,T2.firingCon,T2.inPlaces[1].disTransition,P1.outTransition[1].normalArc,P1.outTransition[1].testValueint,P1.outTransition[1].arcType,P1.outTransition[1].disPlace,T1.firingCon,T1.outPlaces[1].disTransition,P1.inTransition[1].disPlace,P1.reStart,P5.enableIn.disTransition[1],P4.enableIn.disTransition[1],P3.enableIn.disTransition[1],P2.enableIn.disTransition[1],P1.enableIn.disTransition[1],$PRE.P5.enableIn.arcWeightSum,$PRE.P5.enableIn.TEin[1],$PRE.P4.enableIn.arcWeightSum,$PRE.P4.enableIn.TEin[1],$PRE.P3.enableIn.arcWeightSum,$PRE.P3.enableIn.TEin[1],$PRE.P2.enableIn.arcWeightSum,$PRE.P2.enableIn.TEin[1],$PRE.T5.firingTime,$PRE.T4.firingTime,$PRE.T3.firingTime,$PRE.T2.firingTime,$PRE.T1.firingTime,$PRE.P1.enableIn.arcWeightSum,$PRE.P1.enableIn.TEin[1],$PRE.P1.enableOut.arcWeightSum,$PRE.P1.enableOut.TEout[4],$PRE.P1.enableOut.TEout[3],$PRE.P1.enableOut.TEout[2],$PRE.P1.enableOut.TEout[1],T1.enabledByInPlaces,P1.enableIn.arcWeight[1],P1.enableOut.arcWeight[1],T2.activation.arcWeightIntOut[1],P1.enableOut.arcWeight[2],T3.activation.arcWeightIntOut[1],P1.enableOut.arcWeight[3],T4.activation.arcWeightIntOut[1],P1.enableOut.arcWeight[4],T5.activation.arcWeightIntOut[1],T5.activation.disPlaceOut[1],T4.activation.disPlaceOut[1],T3.activation.disPlaceOut[1],T2.activation.disPlaceOut[1],P1.enableOut.disTransition[4],T5.activation.normalArc[1],T5.activation.testValueInt[1],T5.activation.arcType[1],T5.activation.disPlaceIn[1],P1.enableOut.disTransition[3],T4.activation.normalArc[1],T4.activation.testValueInt[1],T4.activation.arcType[1],T4.activation.disPlaceIn[1],P1.enableOut.disTransition[2],T3.activation.normalArc[1],T3.activation.testValueInt[1],T3.activation.arcType[1],T3.activation.disPlaceIn[1],P1.enableOut.disTransition[1],T2.activation.normalArc[1],T2.activation.testValueInt[1],T2.activation.arcType[1],T2.activation.disPlaceIn[1],T1.activation.disPlaceOut[1],P5.enableIn.arcWeightSum,P5.enableIn.TEin[1],P5.enableIn.TEin_[1],P5.enableIn.active[1],P5.enableIn.TAein[1],P5.enableIn.arcWeight[1],P5.firingSumIn.firingSum,P5.firingSumIn.arcWeight[1],P5.firingSumIn.fire[1],P5.delayPassedIn.numtrue,P5.delayPassedIn.anytrue,P5.delayPassedIn.vec[1],P5.inTransition[1].enabledByInPlaces,P5.t,$PRE.P5.t,P4.enableIn.arcWeightSum,P4.enableIn.TEin[1],P4.enableIn.TEin_[1],P4.enableIn.active[1],P4.enableIn.TAein[1],P4.enableIn.arcWeight[1],P4.firingSumIn.firingSum,P4.firingSumIn.arcWeight[1],P4.firingSumIn.fire[1],P4.delayPassedIn.numtrue,P4.delayPassedIn.anytrue,P4.delayPassedIn.vec[1],P4.inTransition[1].enabledByInPlaces,P4.t,$PRE.P4.t,P3.enableIn.arcWeightSum,P3.enableIn.TEin[1],P3.enableIn.TEin_[1],P3.enableIn.active[1],P3.enableIn.TAein[1],P3.enableIn.arcWeight[1],P3.firingSumIn.firingSum,P3.firingSumIn.arcWeight[1],P3.firingSumIn.fire[1],P3.delayPassedIn.numtrue,P3.delayPassedIn.anytrue,P3.delayPassedIn.vec[1],P3.inTransition[1].enabledByInPlaces,P3.t,$PRE.P3.t,P2.enableIn.arcWeightSum,P2.enableIn.TEin[1],P2.enableIn.TEin_[1],P2.enableIn.active[1],P2.enableIn.TAein[1],P2.enableIn.arcWeight[1],P2.firingSumIn.firingSum,P2.firingSumIn.arcWeight[1],P2.firingSumIn.fire[1],P2.delayPassedIn.numtrue,P2.delayPassedIn.anytrue,P2.delayPassedIn.vec[1],P2.inTransition[1].enabledByInPlaces,P2.t,$PRE.P2.t,T5.activation.active,T5.activation.maxTokensInt[1],T5.activation.minTokensInt[1],T5.activation.arcWeightIntIn[1],T5.activation.tIntOut[1],T5.activation.tIntIn[1],T5.delayPassed,$PRE.T5.delayPassed,T5.firingTime,T5.active,T4.activation.active,T4.activation.maxTokensInt[1],T4.activation.minTokensInt[1],T4.activation.arcWeightIntIn[1],T4.activation.tIntOut[1],T4.activation.tIntIn[1],T4.delayPassed,$PRE.T4.delayPassed,T4.firingTime,T4.active,T3.activation.active,T3.activation.maxTokensInt[1],T3.activation.minTokensInt[1],T3.activation.arcWeightIntIn[1],T3.activation.tIntOut[1],T3.activation.tIntIn[1],T3.delayPassed,$PRE.T3.delayPassed,T3.firingTime,T3.active,T2.activation.active,T2.activation.maxTokensInt[1],T2.activation.minTokensInt[1],T2.activation.arcWeightIntIn[1],T2.activation.tIntOut[1],T2.activation.tIntIn[1],T2.delayPassed,$PRE.T2.delayPassed,T2.firingTime,T2.active,T1.activation.active,T1.activation.maxTokensInt[1],T1.activation.arcWeightIntOut[1],T1.activation.tIntOut[1],T1.delayPassed,$PRE.T1.delayPassed,T1.firingTime,T1.active,P1.enableIn.arcWeightSum,P1.enableIn.TEin[1],P1.enableIn.TEin_[1],P1.enableIn.active[1],P1.enableIn.TAein[1],P1.enableOut.arcWeightSum,P1.enableOut.TEout[4],P1.enableOut.TEout[3],P1.enableOut.TEout[2],P1.enableOut.TEout[1],P1.enableOut.TEout_[4],P1.enableOut.TEout_[3],P1.enableOut.TEout_[2],P1.enableOut.TEout_[1],P1.enableOut.TAout[4],P1.enableOut.TAout[3],P1.enableOut.TAout[2],P1.enableOut.TAout[1],P1.firingSumOut.firingSum,P1.firingSumOut.arcWeight[4],P1.firingSumOut.arcWeight[3],P1.firingSumOut.arcWeight[2],P1.firingSumOut.arcWeight[1],P1.firingSumOut.fire[4],P1.firingSumOut.fire[3],P1.firingSumOut.fire[2],P1.firingSumOut.fire[1],P1.firingSumIn.firingSum,P1.firingSumIn.arcWeight[1],P1.firingSumIn.fire[1],P1.delayPassedIn.numtrue,P1.delayPassedIn.anytrue,P1.delayPassedIn.vec[1],P1.delayPassedOut.numtrue,P1.delayPassedOut.anytrue,P1.delayPassedOut.vec[4],P1.delayPassedOut.vec[3],P1.delayPassedOut.vec[2],P1.delayPassedOut.vec[1],P1.activeConOut.anychange,P1.activeConOut.vec[4],P1.activeConOut.vec[3],P1.activeConOut.vec[2],P1.activeConOut.vec[1],P1.activeOut[4],$PRE.P1.activeOut[4],P1.activeOut[3],$PRE.P1.activeOut[3],P1.activeOut[2],$PRE.P1.activeOut[2],P1.activeOut[1],$PRE.P1.activeOut[1],P1.t,$PRE.P1.t,$whenCondition10,$whenCondition9,$whenCondition8,$whenCondition7,$whenCondition6,$whenCondition5,$whenCondition23,$whenCondition24,$whenCondition25,$whenCondition26,$whenCondition27,$whenCondition28,$whenCondition29,$whenCondition30,$whenCondition31,$whenCondition32,P5.inTransition[1].emptied,P4.inTransition[1].emptied,P3.inTransition[1].emptied,P2.inTransition[1].emptied,P1.outTransition[4].fed,P1.outTransition[3].fed,P1.outTransition[2].fed,P1.outTransition[1].fed,P1.inTransition[1].emptied)
 * Number of discrete states: 0 ()
 * Number of clocked states: 0 ()
 * Top-level inputs: 0
Notification: Strong component statistics for initialization (777):
 * Single equations (assignments): 726
 * Array equations: 1
 * Algorithm blocks: 50
 * Record equations: 0
 * When equations: 0
 * If-equations: 0
 * Equation systems (not torn): 0
 * Torn equation systems: 0
 * Mixed (continuous/discrete) equation systems: 0
Notification: Performance of prepare postOptimizeDAE: time 0.004088/0.4968, allocations: 3.705 MB / 0.577 GB, free: 3.918 MB / 378.7 MB
Notification: Performance of postOpt lateInlineFunction (simulation): time 0.0008313/0.4976, allocations: 396.7 kB / 0.5774 GB, free: 3.527 MB / 378.7 MB
Notification: Performance of postOpt wrapFunctionCalls (simulation): time 0.01695/0.5146, allocations: 11.36 MB / 0.5885 GB, free: 7.957 MB / 394.7 MB
Notification: Performance of postOpt inlineArrayEqn (simulation): time 4.145e-05/0.5147, allocations: 31.98 kB / 0.5885 GB, free: 7.926 MB / 394.7 MB
Notification: Performance of postOpt constantLinearSystem (simulation): time 1.139e-05/0.5147, allocations: 0 / 0.5885 GB, free: 7.926 MB / 394.7 MB
Notification: Performance of postOpt simplifysemiLinear (simulation): time 2.056e-05/0.5147, allocations: 7.969 kB / 0.5885 GB, free: 7.918 MB / 394.7 MB
Notification: Performance of postOpt removeSimpleEquations (simulation): time 0.025/0.5397, allocations: 16.48 MB / 0.6046 GB, free: 7.234 MB / 410.7 MB
Notification: Performance of postOpt simplifyComplexFunction (simulation): time 1.615e-05/0.5398, allocations: 0 / 0.6046 GB, free: 7.234 MB / 410.7 MB
Notification: Performance of postOpt solveSimpleEquations (simulation): time 0.0007426/0.5405, allocations: 175.7 kB / 0.6048 GB, free: 7.062 MB / 410.7 MB
Notification: Performance of postOpt tearingSystem (simulation): time 1.289e-05/0.5405, allocations: 12 kB / 0.6048 GB, free: 7.051 MB / 410.7 MB
Notification: Performance of postOpt inputDerivativesUsed (simulation): time 0.000579/0.5411, allocations: 222.1 kB / 0.605 GB, free: 6.836 MB / 410.7 MB
Notification: Performance of postOpt calculateStrongComponentJacobians (simulation): time 1.404e-05/0.5411, allocations: 11.94 kB / 0.605 GB, free: 6.824 MB / 410.7 MB
Notification: Performance of postOpt calculateStateSetsJacobians (simulation): time 3.557e-06/0.5411, allocations: 4 kB / 0.605 GB, free: 6.82 MB / 410.7 MB
Notification: Performance of postOpt symbolicJacobian (simulation): time 0.0202/0.5614, allocations: 12.84 MB / 0.6176 GB, free: 9.691 MB / 426.7 MB
Notification: Performance of postOpt removeConstants (simulation): time 0.0003833/0.5618, allocations: 357 kB / 0.6179 GB, free: 9.32 MB / 426.7 MB
Notification: Performance of postOpt simplifyTimeIndepFuncCalls (simulation): time 0.001209/0.563, allocations: 403.8 kB / 0.6183 GB, free: 8.926 MB / 426.7 MB
Notification: Performance of postOpt simplifyAllExpressions (simulation): time 0.002677/0.5657, allocations: 371.3 kB / 0.6186 GB, free: 8.566 MB / 426.7 MB
Notification: Performance of postOpt findZeroCrossings (simulation): time 0.002486/0.5682, allocations: 1.493 MB / 0.6201 GB, free: 7.074 MB / 426.7 MB
Notification: Performance of postOpt collapseArrayExpressions (simulation): time 0.0005898/0.5688, allocations: 257.1 kB / 0.6203 GB, free: 6.828 MB / 426.7 MB
Notification: Performance of sorting global known variables: time 0.001364/0.5702, allocations: 0.9922 MB / 0.6213 GB, free: 5.84 MB / 426.7 MB
Notification: Performance of sort global known variables: time 1.7e-07/0.5702, allocations: 4 kB / 0.6213 GB, free: 5.836 MB / 426.7 MB
Notification: Performance of remove unused functions: time 0.004302/0.5745, allocations: 1.469 MB / 0.6227 GB, free: 4.383 MB / 426.7 MB
Notification: Model statistics after passing the back-end for simulation:
 * Number of independent subsystems: 5
 * Number of states: 0 ()
 * Number of discrete variables: 390 ($whenCondition1,P2.activeConOut.anychange,P2.delayPassedOut.anytrue,P2.delayPassedOut.numtrue,P2.enableOut.state128[1],P2.enableOut.state128[2],P2.enableOut.state128[3],P2.enableOut.state128[4],P2.enableOut.arcWeightSum,P2.enableOut.nremTAout,P2.enableOut.nTAout,P2.enableOut.k,P2.enableOut.posTE,P2.enableOut.randNum,P2.enableOut.sumEnablingProbTAout,P2.enableOut.endWhile,P2.enableOut.Index,P2.enableOut.benefitMax,P2.enableOut.valid,P2.enableOut.benefitLimit,$whenCondition2,P3.activeConOut.anychange,P3.delayPassedOut.anytrue,P3.delayPassedOut.numtrue,P3.enableOut.state128[1],P3.enableOut.state128[2],P3.enableOut.state128[3],P3.enableOut.state128[4],P3.enableOut.arcWeightSum,P3.enableOut.nremTAout,P3.enableOut.nTAout,P3.enableOut.k,P3.enableOut.posTE,P3.enableOut.randNum,P3.enableOut.sumEnablingProbTAout,P3.enableOut.endWhile,P3.enableOut.Index,P3.enableOut.benefitMax,P3.enableOut.valid,P3.enableOut.benefitLimit,$whenCondition3,P4.activeConOut.anychange,P4.delayPassedOut.anytrue,P4.delayPassedOut.numtrue,P4.enableOut.state128[1],P4.enableOut.state128[2],P4.enableOut.state128[3],P4.enableOut.state128[4],P4.enableOut.arcWeightSum,P4.enableOut.nremTAout,P4.enableOut.nTAout,P4.enableOut.k,P4.enableOut.posTE,P4.enableOut.randNum,P4.enableOut.sumEnablingProbTAout,P4.enableOut.endWhile,P4.enableOut.Index,P4.enableOut.benefitMax,P4.enableOut.valid,P4.enableOut.benefitLimit,$whenCondition4,P5.activeConOut.anychange,P5.delayPassedOut.anytrue,P5.delayPassedOut.numtrue,P5.enableOut.state128[1],P5.enableOut.state128[2],P5.enableOut.state128[3],P5.enableOut.state128[4],P5.enableOut.arcWeightSum,P5.enableOut.nremTAout,P5.enableOut.nTAout,P5.enableOut.k,P5.enableOut.posTE,P5.enableOut.randNum,P5.enableOut.sumEnablingProbTAout,P5.enableOut.endWhile,P5.enableOut.Index,P5.enableOut.benefitMax,P5.enableOut.valid,P5.enableOut.benefitLimit,T1.active,T2.active,T3.active,T4.active,T5.active,$whenCondition34,$whenCondition33,$whenCondition35,$whenCondition32,$whenCondition31,$whenCondition30,$whenCondition29,$whenCondition28,$whenCondition27,$whenCondition26,$whenCondition25,$whenCondition24,$whenCondition23,$whenCondition21,$whenCondition20,$whenCondition22,$whenCondition18,$whenCondition17,$whenCondition19,$whenCondition15,$whenCondition14,$whenCondition16,$whenCondition12,$whenCondition11,$whenCondition13,$whenCondition5,$whenCondition6,$whenCondition7,$whenCondition8,$whenCondition9,$whenCondition10,P1.t,P1.outTransition[1].tokenInOut,P1.outTransition[2].tokenInOut,P1.outTransition[3].tokenInOut,P1.outTransition[4].tokenInOut,P1.tokeninout,P1.activeOut[1],P1.activeOut[2],P1.activeOut[3],P1.activeOut[4],P1.activeConOut.vec[1],P1.activeConOut.vec[2],P1.activeConOut.vec[3],P1.activeConOut.vec[4],P1.activeConOut.anychange,P1.delayPassedOut.vec[1],P1.delayPassedOut.vec[2],P1.delayPassedOut.vec[3],P1.delayPassedOut.vec[4],P1.delayPassedOut.anytrue,P1.delayPassedOut.numtrue,P1.delayPassedIn.vec[1],P1.delayPassedIn.anytrue,P1.delayPassedIn.numtrue,P1.firingSumIn.fire[1],P1.firingSumIn.arcWeight[1],P1.firingSumIn.firingSum,P1.firingSumOut.fire[1],P1.firingSumOut.fire[2],P1.firingSumOut.fire[3],P1.firingSumOut.fire[4],P1.firingSumOut.arcWeight[1],P1.firingSumOut.arcWeight[2],P1.firingSumOut.arcWeight[3],P1.firingSumOut.arcWeight[4],P1.firingSumOut.firingSum,P1.enableOut.TAout[1],P1.enableOut.TAout[2],P1.enableOut.TAout[3],P1.enableOut.TAout[4],P1.enableOut.TEout_[1],P1.enableOut.TEout_[2],P1.enableOut.TEout_[3],P1.enableOut.TEout_[4],P1.enableOut.state128[1],P1.enableOut.state128[2],P1.enableOut.state128[3],P1.enableOut.state128[4],P1.enableOut.TEout[1],P1.enableOut.TEout[2],P1.enableOut.TEout[3],P1.enableOut.TEout[4],P1.enableOut.remTAout[1],P1.enableOut.remTAout[2],P1.enableOut.remTAout[3],P1.enableOut.remTAout[4],P1.enableOut.cumEnablingProb[1],P1.enableOut.cumEnablingProb[2],P1.enableOut.cumEnablingProb[3],P1.enableOut.cumEnablingProb[4],P1.enableOut.arcWeightSum,P1.enableOut.nremTAout,P1.enableOut.nTAout,P1.enableOut.k,P1.enableOut.posTE,P1.enableOut.randNum,P1.enableOut.sumEnablingProbTAout,P1.enableOut.endWhile,P1.enableOut.Index,P1.enableOut.benefitMax,P1.enableOut.valid,P1.enableOut.benefitLimit,P1.enableIn.TAein[1],P1.enableIn.active[1],P1.enableIn.TEin_[1],P1.enableIn.state128[1],P1.enableIn.state128[2],P1.enableIn.state128[3],P1.enableIn.state128[4],P1.enableIn.TEin[1],P1.enableIn.remTAin[1],P1.enableIn.cumEnablingProb[1],P1.enableIn.arcWeightSum,P1.enableIn.nremTAin,P1.enableIn.nTAin,P1.enableIn.k,P1.enableIn.posTE,P1.enableIn.randNum,P1.enableIn.sumEnablingProbTAin,P1.enableIn.endWhile,P1.enableIn.Index,P1.enableIn.benefitMax,P1.enableIn.valid,P1.enableIn.benefitLimit,T1.firingTime,T1.fireTime,T1.delayPassed,T1.ani,T1.activation.tIntOut[1],T1.activation.arcWeightIntOut[1],T1.activation.maxTokensInt[1],T1.activation.active,T2.firingTime,T2.fireTime,T2.delayPassed,T2.ani,T2.activation.tIntIn[1],T2.activation.tIntOut[1],T2.activation.arcWeightIntIn[1],T2.activation.minTokensInt[1],T2.activation.maxTokensInt[1],T2.activation.active,T3.firingTime,T3.fireTime,T3.delayPassed,T3.ani,T3.activation.tIntIn[1],T3.activation.tIntOut[1],T3.activation.arcWeightIntIn[1],T3.activation.minTokensInt[1],T3.activation.maxTokensInt[1],T3.activation.active,T4.firingTime,T4.fireTime,T4.delayPassed,T4.ani,T4.activation.tIntIn[1],T4.activation.tIntOut[1],T4.activation.arcWeightIntIn[1],T4.activation.minTokensInt[1],T4.activation.maxTokensInt[1],T4.activation.active,T5.firingTime,T5.fireTime,T5.delayPassed,T5.ani,T5.activation.tIntIn[1],T5.activation.tIntOut[1],T5.activation.arcWeightIntIn[1],T5.activation.minTokensInt[1],T5.activation.maxTokensInt[1],T5.activation.active,P2.t,P2.inTransition[1].enabledByInPlaces,P2.tokeninout,P2.delayPassedIn.vec[1],P2.delayPassedIn.anytrue,P2.delayPassedIn.numtrue,P2.firingSumIn.fire[1],P2.firingSumIn.arcWeight[1],P2.firingSumIn.firingSum,P2.firingSumOut.firingSum,P2.enableIn.arcWeight[1],P2.enableIn.TAein[1],P2.enableIn.active[1],P2.enableIn.TEin_[1],P2.enableIn.state128[1],P2.enableIn.state128[2],P2.enableIn.state128[3],P2.enableIn.state128[4],P2.enableIn.TEin[1],P2.enableIn.remTAin[1],P2.enableIn.cumEnablingProb[1],P2.enableIn.arcWeightSum,P2.enableIn.nremTAin,P2.enableIn.nTAin,P2.enableIn.k,P2.enableIn.posTE,P2.enableIn.randNum,P2.enableIn.sumEnablingProbTAin,P2.enableIn.endWhile,P2.enableIn.Index,P2.enableIn.benefitMax,P2.enableIn.valid,P2.enableIn.benefitLimit,P3.t,P3.inTransition[1].enabledByInPlaces,P3.tokeninout,P3.delayPassedIn.vec[1],P3.delayPassedIn.anytrue,P3.delayPassedIn.numtrue,P3.firingSumIn.fire[1],P3.firingSumIn.arcWeight[1],P3.firingSumIn.firingSum,P3.firingSumOut.firingSum,P3.enableIn.arcWeight[1],P3.enableIn.TAein[1],P3.enableIn.active[1],P3.enableIn.TEin_[1],P3.enableIn.state128[1],P3.enableIn.state128[2],P3.enableIn.state128[3],P3.enableIn.state128[4],P3.enableIn.TEin[1],P3.enableIn.remTAin[1],P3.enableIn.cumEnablingProb[1],P3.enableIn.arcWeightSum,P3.enableIn.nremTAin,P3.enableIn.nTAin,P3.enableIn.k,P3.enableIn.posTE,P3.enableIn.randNum,P3.enableIn.sumEnablingProbTAin,P3.enableIn.endWhile,P3.enableIn.Index,P3.enableIn.benefitMax,P3.enableIn.valid,P3.enableIn.benefitLimit,P4.t,P4.inTransition[1].enabledByInPlaces,P4.tokeninout,P4.delayPassedIn.vec[1],P4.delayPassedIn.anytrue,P4.delayPassedIn.numtrue,P4.firingSumIn.fire[1],P4.firingSumIn.arcWeight[1],P4.firingSumIn.firingSum,P4.firingSumOut.firingSum,P4.enableIn.arcWeight[1],P4.enableIn.TAein[1],P4.enableIn.active[1],P4.enableIn.TEin_[1],P4.enableIn.state128[1],P4.enableIn.state128[2],P4.enableIn.state128[3],P4.enableIn.state128[4],P4.enableIn.TEin[1],P4.enableIn.remTAin[1],P4.enableIn.cumEnablingProb[1],P4.enableIn.arcWeightSum,P4.enableIn.nremTAin,P4.enableIn.nTAin,P4.enableIn.k,P4.enableIn.posTE,P4.enableIn.randNum,P4.enableIn.sumEnablingProbTAin,P4.enableIn.endWhile,P4.enableIn.Index,P4.enableIn.benefitMax,P4.enableIn.valid,P4.enableIn.benefitLimit,P5.t,P5.inTransition[1].enabledByInPlaces,P5.tokeninout,P5.delayPassedIn.vec[1],P5.delayPassedIn.anytrue,P5.delayPassedIn.numtrue,P5.firingSumIn.fire[1],P5.firingSumIn.arcWeight[1],P5.firingSumIn.firingSum,P5.firingSumOut.firingSum,P5.enableIn.arcWeight[1],P5.enableIn.TAein[1],P5.enableIn.active[1],P5.enableIn.TEin_[1],P5.enableIn.state128[1],P5.enableIn.state128[2],P5.enableIn.state128[3],P5.enableIn.state128[4],P5.enableIn.TEin[1],P5.enableIn.remTAin[1],P5.enableIn.cumEnablingProb[1],P5.enableIn.arcWeightSum,P5.enableIn.nremTAin,P5.enableIn.nTAin,P5.enableIn.k,P5.enableIn.posTE,P5.enableIn.randNum,P5.enableIn.sumEnablingProbTAin,P5.enableIn.endWhile,P5.enableIn.Index,P5.enableIn.benefitMax,P5.enableIn.valid,P5.enableIn.benefitLimit)
 * Number of discrete states: 263 (P1.firingSumOut.firingSum,P1.firingSumIn.firingSum,P2.firingSumOut.firingSum,P2.firingSumIn.firingSum,P3.firingSumOut.firingSum,P3.firingSumIn.firingSum,P4.firingSumOut.firingSum,P4.firingSumIn.firingSum,P5.firingSumOut.firingSum,P5.firingSumIn.firingSum,P1.tokeninout,P5.t,P4.t,P3.t,P2.t,P1.t,P1.activeOut[1],P1.activeOut[2],P1.activeOut[3],P1.activeOut[4],T5.activation.active,T5.delayPassed,P5.delayPassedIn.numtrue,P5.delayPassedIn.anytrue,T4.activation.active,T4.delayPassed,P4.delayPassedIn.numtrue,P4.delayPassedIn.anytrue,T3.activation.active,T3.delayPassed,P3.delayPassedIn.numtrue,P3.delayPassedIn.anytrue,T2.activation.active,T2.delayPassed,P2.delayPassedIn.numtrue,P2.delayPassedIn.anytrue,T1.activation.active,T1.delayPassed,P1.delayPassedIn.numtrue,P1.delayPassedIn.anytrue,P1.enableIn.TEin_[1],P1.enableIn.valid,P1.enableIn.benefitLimit,P1.enableIn.benefitMax,P1.enableIn.posTE,P1.enableIn.k,P1.enableIn.endWhile,P1.enableIn.state128[4],P1.enableIn.state128[3],P1.enableIn.state128[2],P1.enableIn.state128[1],P1.enableIn.randNum,P1.enableIn.cumEnablingProb[1],P1.enableIn.sumEnablingProbTAin,P1.enableIn.nTAin,P1.enableIn.nremTAin,P1.enableIn.remTAin[1],P1.enableIn.Index,$whenCondition6,P1.enableIn.arcWeightSum,P1.enableIn.TEin[1],P1.delayPassedOut.numtrue,P1.delayPassedOut.anytrue,P1.activeConOut.anychange,i,P1.activeConOut.vec[i],P1.enableOut.TEout_[4],P1.enableOut.TEout_[3],P1.enableOut.TEout_[2],P1.enableOut.TEout_[1],P1.enableOut.valid,P1.enableOut.benefitLimit,P1.enableOut.benefitMax,P1.enableOut.posTE,P1.enableOut.k,P1.enableOut.endWhile,P1.enableOut.state128[4],P1.enableOut.state128[3],P1.enableOut.state128[2],P1.enableOut.state128[1],P1.enableOut.randNum,P1.enableOut.cumEnablingProb[4],P1.enableOut.cumEnablingProb[3],P1.enableOut.cumEnablingProb[2],P1.enableOut.cumEnablingProb[1],P1.enableOut.sumEnablingProbTAout,P1.enableOut.nTAout,P1.enableOut.nremTAout,P1.enableOut.remTAout[4],P1.enableOut.remTAout[3],P1.enableOut.remTAout[2],P1.enableOut.remTAout[1],P1.enableOut.Index,$whenCondition5,P1.enableOut.arcWeightSum,P1.enableOut.TEout[4],P1.enableOut.TEout[3],P1.enableOut.TEout[2],P1.enableOut.TEout[1],P2.enableIn.TEin_[1],P2.enableIn.valid,P2.enableIn.benefitLimit,P2.enableIn.benefitMax,P2.enableIn.posTE,P2.enableIn.k,P2.enableIn.endWhile,P2.enableIn.state128[4],P2.enableIn.state128[3],P2.enableIn.state128[2],P2.enableIn.state128[1],P2.enableIn.randNum,P2.enableIn.cumEnablingProb[1],P2.enableIn.sumEnablingProbTAin,P2.enableIn.nTAin,P2.enableIn.nremTAin,P2.enableIn.remTAin[1],P2.enableIn.Index,$whenCondition7,P2.enableIn.arcWeightSum,P2.enableIn.TEin[1],P5.enableIn.TEin_[1],P5.enableIn.valid,P5.enableIn.benefitLimit,P5.enableIn.benefitMax,P5.enableIn.posTE,P5.enableIn.k,P5.enableIn.endWhile,P5.enableIn.state128[4],P5.enableIn.state128[3],P5.enableIn.state128[2],P5.enableIn.state128[1],P5.enableIn.randNum,P5.enableIn.cumEnablingProb[1],P5.enableIn.sumEnablingProbTAin,P5.enableIn.nTAin,P5.enableIn.nremTAin,P5.enableIn.remTAin[1],P5.enableIn.Index,$whenCondition10,P5.enableIn.arcWeightSum,P5.enableIn.TEin[1],P3.enableIn.TEin_[1],P3.enableIn.valid,P3.enableIn.benefitLimit,P3.enableIn.benefitMax,P3.enableIn.posTE,P3.enableIn.k,P3.enableIn.endWhile,P3.enableIn.state128[4],P3.enableIn.state128[3],P3.enableIn.state128[2],P3.enableIn.state128[1],P3.enableIn.randNum,P3.enableIn.cumEnablingProb[1],P3.enableIn.sumEnablingProbTAin,P3.enableIn.nTAin,P3.enableIn.nremTAin,P3.enableIn.remTAin[1],P3.enableIn.Index,$whenCondition8,P3.enableIn.arcWeightSum,P3.enableIn.TEin[1],P4.enableIn.TEin_[1],P4.enableIn.valid,P4.enableIn.benefitLimit,P4.enableIn.benefitMax,P4.enableIn.posTE,P4.enableIn.k,P4.enableIn.endWhile,P4.enableIn.state128[4],P4.enableIn.state128[3],P4.enableIn.state128[2],P4.enableIn.state128[1],P4.enableIn.randNum,P4.enableIn.cumEnablingProb[1],P4.enableIn.sumEnablingProbTAin,P4.enableIn.nTAin,P4.enableIn.nremTAin,P4.enableIn.remTAin[1],P4.enableIn.Index,$whenCondition9,P4.enableIn.arcWeightSum,P4.enableIn.TEin[1],P5.enableOut.benefitLimit,P5.enableOut.valid,P5.enableOut.benefitMax,P5.enableOut.Index,P5.enableOut.endWhile,P5.enableOut.sumEnablingProbTAout,P5.enableOut.state128[4],P5.enableOut.state128[3],P5.enableOut.state128[2],P5.enableOut.state128[1],P5.enableOut.randNum,P5.enableOut.posTE,P5.enableOut.k,P5.enableOut.nTAout,P5.enableOut.nremTAout,$whenCondition4,P5.enableOut.arcWeightSum,P5.delayPassedOut.numtrue,P5.delayPassedOut.anytrue,P5.activeConOut.anychange,P4.enableOut.benefitLimit,P4.enableOut.valid,P4.enableOut.benefitMax,P4.enableOut.Index,P4.enableOut.endWhile,P4.enableOut.sumEnablingProbTAout,P4.enableOut.state128[4],P4.enableOut.state128[3],P4.enableOut.state128[2],P4.enableOut.state128[1],P4.enableOut.randNum,P4.enableOut.posTE,P4.enableOut.k,P4.enableOut.nTAout,P4.enableOut.nremTAout,$whenCondition3,P4.enableOut.arcWeightSum,P4.delayPassedOut.numtrue,P4.delayPassedOut.anytrue,P4.activeConOut.anychange,P3.enableOut.benefitLimit,P3.enableOut.valid,P3.enableOut.benefitMax,P3.enableOut.Index,P3.enableOut.endWhile,P3.enableOut.sumEnablingProbTAout,P3.enableOut.state128[4],P3.enableOut.state128[3],P3.enableOut.state128[2],P3.enableOut.state128[1],P3.enableOut.randNum,P3.enableOut.posTE,P3.enableOut.k,P3.enableOut.nTAout,P3.enableOut.nremTAout,$whenCondition2,P3.enableOut.arcWeightSum,P3.delayPassedOut.numtrue,P3.delayPassedOut.anytrue,P3.activeConOut.anychange,P2.enableOut.benefitLimit,P2.enableOut.valid,P2.enableOut.benefitMax,P2.enableOut.Index,P2.enableOut.endWhile,P2.enableOut.sumEnablingProbTAout,P2.enableOut.state128[4],P2.enableOut.state128[3],P2.enableOut.state128[2],P2.enableOut.state128[1],P2.enableOut.randNum,P2.enableOut.posTE,P2.enableOut.k,P2.enableOut.nTAout,P2.enableOut.nremTAout,$whenCondition1,P2.enableOut.arcWeightSum,P2.delayPassedOut.numtrue,P2.delayPassedOut.anytrue,P2.activeConOut.anychange)
 * Number of clocked states: 0 ()
 * Top-level inputs: 0
Notification: Strong component statistics for simulation (228):
 * Single equations (assignments): 167
 * Array equations: 1
 * Algorithm blocks: 40
 * Record equations: 0
 * When equations: 20
 * If-equations: 0
 * Equation systems (not torn): 0
 * Torn equation systems: 0
 * Mixed (continuous/discrete) equation systems: 0
Notification: Performance of Backend phase and start with SimCode phase: time 0.001781/0.5763, allocations: 1.014 MB / 0.6237 GB, free: 3.375 MB / 426.7 MB
Notification: Performance of simCode: created initialization part: time 0.01511/0.5914, allocations: 11.82 MB / 0.6353 GB, free: 6.949 MB / 442.7 MB
Notification: Performance of simCode: created event and clocks part: time 7.854e-06/0.5914, allocations: 4 kB / 0.6353 GB, free: 6.945 MB / 442.7 MB
Notification: Performance of simCode: created simulation system equations: time 0.01722/0.6087, allocations: 18.54 MB / 0.6534 GB, free: 3.918 MB / 458.7 MB
Notification: Performance of simCode: created of all other equations (e.g. parameter, nominal, assert, etc): time 0.002804/0.6115, allocations: 0.5664 MB / 0.6539 GB, free: 3.367 MB / 458.7 MB
Notification: Performance of simCode: created linear, non-linear and system jacobian parts: time 0.01719/0.6287, allocations: 10.78 MB / 0.6645 GB, free: 8.559 MB / 474.7 MB
Notification: Performance of simCode: some other stuff during SimCode phase: time 0.001672/0.6304, allocations: 2.254 MB / 0.6667 GB, free: 6.27 MB / 474.7 MB
Notification: Performance of simCode: alias equations: time 0.002283/0.6327, allocations: 0.9528 MB / 0.6676 GB, free: 5.312 MB / 474.7 MB
Notification: Performance of simCode: all other stuff during SimCode phase: time 0.0004749/0.6332, allocations: 223.4 kB / 0.6678 GB, free: 5.098 MB / 474.7 MB
Notification: Performance of SimCode: time 8.51e-07/0.6332, allocations: 0 / 0.6678 GB, free: 5.098 MB / 474.7 MB
Notification: Performance of Templates: time 0.3048/0.938, allocations: 63.56 MB / 0.7299 GB, free: 115.3 MB / 474.7 MB
make -j1 -f PNlib_2.2_PNlib.Examples.DisTest.PrioTest.makefile
(rm -f PNlib_2.2_PNlib.Examples.DisTest.PrioTest.pipe ; mkfifo PNlib_2.2_PNlib.Examples.DisTest.PrioTest.pipe ; head -c 1048576 < PNlib_2.2_PNlib.Examples.DisTest.PrioTest.pipe >> ../files/PNlib_2.2_PNlib.Examples.DisTest.PrioTest.sim & ./PNlib_2.2_PNlib.Examples.DisTest.PrioTest  -abortSlowSimulation -alarm=480  -emit_protected -lv LOG_STATS > PNlib_2.2_PNlib.Examples.DisTest.PrioTest.pipe 2>&1)
diffSimulationResults("PNlib_2.2_PNlib.Examples.DisTest.PrioTest_res.mat","/home/runner/work/PNlib/PNlib/ReferenceFiles/PNlib.Examples.DisTest.PrioTest.mat","../files/PNlib_2.2_PNlib.Examples.DisTest.PrioTest.diff",relTol=0.003,relTolDiffMinMax=0.003,rangeDelta=0.001)
Reference file matches
